[1,"** Installing R Package Dependencies for CSV Import: 'readr', 'Rcpp'\r\n"]
[1,"\r\n"]
[1,"\r\n"]
[1,"\r\n"]
[1,"[1/8] Installing cli...\r\n"]
[1,"\r\n"]
[2,"Installing package into 'C:/Users/menken/Documents/R/win-library/4.0'\r\n(as 'lib' is unspecified)\r\n"]
[1,"\r\n"]
[1,"  There is a binary version available but the source version is later:\r\n"]
[1,"    binary source needs_compilation\r\n"]
[1,"cli  3.2.0  3.6.1              TRUE\r\n"]
[1,"\r\n"]
[2,"installing the source package 'cli'\r\n\r\ntrying URL 'https://cran.rstudio.com/src/contrib/cli_3.6.1.tar.gz'\r\n"]
[2,"Content type 'application/x-gzip' length 567293 bytes (553 KB)\r\n========================"]
[2,"===="]
[2,"======================\r\ndownloaded 553 KB\r\n\r\n"]
[2,"* installing *source* package 'cli' ...\r\n"]
[2,"** package 'cli' successfully unpacked and MD5 sums checked\r\n"]
[2,"ERROR: cannot remove earlier installation, is it in use?\r\n* removing 'C:/Users/menken/Documents/R/win-library/4.0/cli'\r\n* restoring previous 'C:/Users/menken/Documents/R/win-library/4.0/cli'\r\n"]
[2,"Warning in file.copy(lp, dirname(pkgdir), recursive = TRUE, copy.date = TRUE) :\r\n  problem copying C:\\Users\\menken\\Documents\\R\\win-library\\4.0\\00LOCK-cli\\cli\\libs\\x64\\cli.dll to C:\\Users\\menken\\Documents\\R\\win-library\\4.0\\cli\\libs\\x64\\cli.dll: Permission denied\r\n"]
[1,"\r\n"]
[1,"\r\n"]
[1,"[2/8] Installing clipr...\r\n"]
[1,"\r\n"]
[2,"\r\nThe downloaded source packages are in\r\n\t'C:\\Users\\menken\\AppData\\Local\\Temp\\Rtmp6x6dy5\\downloaded_packages'\r\nInstalling package into 'C:/Users/menken/Documents/R/win-library/4.0'\r\n(as 'lib' is unspecified)\r\n"]
[2,"trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.0/clipr_0.8.0.zip'\r\n"]
[2,"Content type 'application/zip' length 54738 bytes (53 KB)\r\n==========="]
[2,"=========================="]
[2,"=============\r\ndownloaded 53 KB\r\n\r\n"]
[1,"package 'clipr' successfully unpacked and MD5 sums checked\r\n"]
[1,"\r\n"]
[1,"The downloaded binary packages are in\r\n"]
[1,"\tC:\\Users\\menken\\AppData\\Local\\Temp\\Rtmp6x6dy5\\downloaded_packages\r\n"]
[1,"\r\n"]
[1,"\r\n"]
[1,"[3/8] Installing hms...\r\n"]
[1,"\r\n"]
[2,"Installing package into 'C:/Users/menken/Documents/R/win-library/4.0'\r\n(as 'lib' is unspecified)\r\n"]
[1,"\r\n"]
[1,"  There is a binary version available but the source version is later:\r\n"]
[1,"    binary source needs_compilation\r\n"]
[1,"hms  1.1.1  1.1.3             FALSE\r\n"]
[1,"\r\n"]
[2,"installing the source package 'hms'\r\n\r\n"]
[2,"trying URL 'https://cran.rstudio.com/src/contrib/hms_1.1.3.tar.gz'\r\n"]
[2,"Content type 'application/x-gzip' length 43379 bytes (42 KB)\r\n==================================================\r\ndownloaded 42 KB\r\n\r\n"]
[2,"* installing *source* package 'hms' ...\r\n** package 'hms' successfully unpacked and MD5 sums checked\r\n** using staged installation\r\n"]
[2,"** R\r\n"]
[2,"** byte-compile and prepare package for lazy loading\r\n"]
[2,"** help\r\n"]
[2,"*** installing help indices\r\n"]
[1,"  converting help for package 'hms'\r\n"]
[2,"    finding HTML links ..."]
[1,"    Deprecated                              html  "]
[2," done\r\n"]
[1,"\r\n"]
[1,"    hms-package                             html  "]
[1,"\r\n"]
[1,"    hms                                     html  "]
[2,"\r\n    finding level-2 HTML links ..."]
[1,"\r\n"]
[1,"    parse_hms                               html  \r\n"]
[1,"    round_hms                               html  \r\n"]
[1,"    vec_cast.hms                            html  "]
[2," done\r\n"]
[1,"\r\n"]
[1,"    vec_ptype2.hms                          html  "]
[1,"\r\n"]
[1,"Rd warning: C:/Users/menken/AppData/Local/Temp/RtmpkrtK8i/R.INSTALL7c54172a1833/hms/man/vec_ptype2.hms.Rd:16: file link 'stop_incompatible_type' in package 'vctrs' does not exist and so has been treated as a topic\r\n"]
[2,"*** copying figures\r\n"]
[2,"** building package indices\r\n"]
[2,"** testing if installed package can be loaded from temporary location\r\n*** arch - i386\r\n"]
[2,"*** arch - x64\r\n"]
[2,"** testing if installed package can be loaded from final location\r\n*** arch - i386\r\n"]
[2,"*** arch - x64\r\n"]
[2,"** testing if installed package keeps a record of temporary installation path\r\n* DONE (hms)\r\n"]
[1,"\r\n"]
[1,"\r\n"]
[1,"[4/8] Installing vroom...\r\n"]
[1,"\r\n"]
[2,"\r\nThe downloaded source packages are in\r\n\t'C:\\Users\\menken\\AppData\\Local\\Temp\\Rtmp6x6dy5\\downloaded_packages'\r\nInstalling package into 'C:/Users/menken/Documents/R/win-library/4.0'\r\n(as 'lib' is unspecified)\r\n"]
[2,"also installing the dependencies 'bit', 'rlang', 'prettyunits', 'bit64', 'cli', 'lifecycle', 'tzdb', 'cpp11', 'progress'\r\n\r\n"]
[1,"\r\n"]
[1,"  There are binary versions available but the source versions are later:\r\n"]
[1,"          binary source needs_compilation\r\n"]
[1,"bit        4.0.4  4.0.5              TRUE\r\n"]
[1,"rlang      1.0.2  1.1.1              TRUE\r\n"]
[1,"cli        3.2.0  3.6.1              TRUE\r\n"]
[1,"lifecycle  1.0.1  1.0.3             FALSE\r\n"]
[1,"tzdb       0.3.0  0.4.0              TRUE\r\n"]
[1,"cpp11      0.4.2  0.4.6             FALSE\r\n"]
[1,"vroom      1.5.7  1.6.3              TRUE\r\n"]
[1,"\r\n"]
[2,"trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.0/prettyunits_1.1.1.zip'\r\n"]
[2,"Content type 'application/zip' length 37688 bytes (36 KB)\r\n==========================================="]
[2,"=======\r\ndownloaded 36 KB\r\n\r\n"]
[2,"trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.0/bit64_4.0.5.zip'\r\n"]
[2,"Content type 'application/zip' length 564605 bytes (551 KB)\r\n="]
[2,"=="]
[2,"====="]
[2,"=========="]
[2,"====="]
[2,"==========="]
[2,"====="]
[2,"===="]
[2,"===="]
[2,"===\r\ndownloaded 551 KB\r\n\r\ntrying URL 'https://cran.rstudio.com/bin/windows/contrib/4.0/progress_1.2.2.zip'\r\n"]
[2,"Content type 'application/zip' length 85868 bytes (83 KB)\r\n"]
[2,"============================"]
[2,"======================\r\ndownloaded 83 KB\r\n\r\n"]
[1,"package 'prettyunits' successfully unpacked and MD5 sums checked\r\n"]
[1,"package 'bit64' successfully unpacked and MD5 sums checked\r\n"]
[1,"package 'progress' successfully unpacked and MD5 sums checked\r\n"]
[1,"\r\n"]
[1,"The downloaded binary packages are in\r\n"]
[1,"\tC:\\Users\\menken\\AppData\\Local\\Temp\\Rtmp6x6dy5\\downloaded_packages\r\n"]
[2,"installing the source packages 'bit', 'rlang', 'cli', 'lifecycle', 'tzdb', 'cpp11', 'vroom'\r\n\r\ntrying URL 'https://cran.rstudio.com/src/contrib/bit_4.0.5.tar.gz'\r\n"]
[2,"Content type 'application/x-gzip' length 827745 bytes (808 KB)\r\n="]
[2,"======"]
[2,"====="]
[2,"="]
[2,"======="]
[2,"======="]
[2,"========"]
[2,"========"]
[2,"=======\r\ndownloaded 808 KB\r\n\r\ntrying URL 'https://cran.rstudio.com/src/contrib/rlang_1.1.1.tar.gz'\r\n"]
[2,"Content type 'application/x-gzip' length 762533 bytes (744 KB)\r\n======"]
[2,"==========="]
[2,"==========="]
[2,"==========="]
[2,"======="]
[2,"====\r\ndownloaded 744 KB\r\n\r\ntrying URL 'https://cran.rstudio.com/src/contrib/cli_3.6.1.tar.gz'\r\n"]
[2,"Content type 'application/x-gzip' length 567293 bytes (553 KB)\r\n============"]
[2,"================="]
[2,"==================="]
[2,"==\r\ndownloaded 553 KB\r\n\r\ntrying URL 'https://cran.rstudio.com/src/contrib/lifecycle_1.0.3.tar.gz'\r\nContent type 'application/x-gzip' length 106854 bytes (104 KB)\r\n"]
[2,"==="]
[2,"===============================================\r\ndownloaded 104 KB\r\n\r\ntrying URL 'https://cran.rstudio.com/src/contrib/tzdb_0.4.0.tar.gz'\r\n"]
[2,"Content type 'application/x-gzip' length 586327 bytes (572 KB)\r\n============"]
[2,"==========="]
[2,"================"]
[2,"===========\r\ndownloaded 572 KB\r\n\r\n"]
[2,"trying URL 'https://cran.rstudio.com/src/contrib/cpp11_0.4.6.tar.gz'\r\n"]
[2,"Content type 'application/x-gzip' length 300889 bytes (293 KB)\r\n"]
[2,"======================="]
[2,"===========================\r\ndownloaded 293 KB\r\n\r\n"]
[2,"trying URL 'https://cran.rstudio.com/src/contrib/vroom_1.6.3.tar.gz'\r\nContent type 'application/x-gzip' length 718863 bytes (702 KB)\r\n======"]
[2,"================="]
[2,"=================="]
[2,"=========\r\ndownloaded 702 KB\r\n\r\n"]
[2,"* installing *source* package 'bit' ...\r\n** package 'bit' successfully unpacked and MD5 sums checked\r\n** using staged installation\r\n"]
[2,"** libs\r\n\r\n*** arch - i386\r\n"]
[1,"\"C:/rtools40/mingw32/bin/\"gcc  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG          -O2 -Wall  -std=gnu99 -mfpmath=sse -msse2 -mstackrealign -c attrutil.c -o attrutil.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"gcc  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG          -O2 -Wall  -std=gnu99 -mfpmath=sse -msse2 -mstackrealign -c bit.c -o bit.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"gcc  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG          -O2 -Wall  -std=gnu99 -mfpmath=sse -msse2 -mstackrealign -c chunkutil.c -o chunkutil.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"gcc  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG          -O2 -Wall  -std=gnu99 -mfpmath=sse -msse2 -mstackrealign -c clone.c -o clone.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"gcc  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG          -O2 -Wall  -std=gnu99 -mfpmath=sse -msse2 -mstackrealign -c init.c -o init.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"gcc  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG          -O2 -Wall  -std=gnu99 -mfpmath=sse -msse2 -mstackrealign -c integerutil.c -o integerutil.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"gcc  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG          -O2 -Wall  -std=gnu99 -mfpmath=sse -msse2 -mstackrealign -c merge.c -o merge.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"gcc  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG          -O2 -Wall  -std=gnu99 -mfpmath=sse -msse2 -mstackrealign -c rle.c -o rle.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"gcc  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG          -O2 -Wall  -std=gnu99 -mfpmath=sse -msse2 -mstackrealign -c sort.c -o sort.o\n"]
[1,"C:/rtools40/mingw32/bin/gcc -shared -s -static-libgcc -o bit.dll tmp.def attrutil.o bit.o chunkutil.o clone.o init.o integerutil.o merge.o rle.o sort.o -LC:/PROGRA~1/R/R-40~1.5/bin/i386 -lR\n"]
[2,"installing to C:/Users/menken/Documents/R/win-library/4.0/00LOCK-bit/00new/bit/libs/i386\r\n"]
[2,"\r\n*** arch - x64\r\n"]
[1,"\"C:/rtools40/mingw64/bin/\"gcc  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG          -O2 -Wall  -std=gnu99 -mfpmath=sse -msse2 -mstackrealign -c attrutil.c -o attrutil.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"gcc  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG          -O2 -Wall  -std=gnu99 -mfpmath=sse -msse2 -mstackrealign -c bit.c -o bit.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"gcc  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG          -O2 -Wall  -std=gnu99 -mfpmath=sse -msse2 -mstackrealign -c chunkutil.c -o chunkutil.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"gcc  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG          -O2 -Wall  -std=gnu99 -mfpmath=sse -msse2 -mstackrealign -c clone.c -o clone.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"gcc  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG          -O2 -Wall  -std=gnu99 -mfpmath=sse -msse2 -mstackrealign -c init.c -o init.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"gcc  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG          -O2 -Wall  -std=gnu99 -mfpmath=sse -msse2 -mstackrealign -c integerutil.c -o integerutil.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"gcc  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG          -O2 -Wall  -std=gnu99 -mfpmath=sse -msse2 -mstackrealign -c merge.c -o merge.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"gcc  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG          -O2 -Wall  -std=gnu99 -mfpmath=sse -msse2 -mstackrealign -c rle.c -o rle.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"gcc  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG          -O2 -Wall  -std=gnu99 -mfpmath=sse -msse2 -mstackrealign -c sort.c -o sort.o\n"]
[1,"C:/rtools40/mingw64/bin/gcc -shared -s -static-libgcc -o bit.dll tmp.def attrutil.o bit.o chunkutil.o clone.o init.o integerutil.o merge.o rle.o sort.o -LC:/PROGRA~1/R/R-40~1.5/bin/x64 -lR\n"]
[2,"installing to C:/Users/menken/Documents/R/win-library/4.0/00LOCK-bit/00new/bit/libs/x64\r\n"]
[2,"** R\r\n"]
[2,"** inst\r\n"]
[2,"** byte-compile and prepare package for lazy loading\r\n"]
[2,"** help\r\n"]
[2,"*** installing help indices\r\n"]
[1,"  converting help for package 'bit'\r\n"]
[2,"    finding HTML links ..."]
[1,"    CoercionToStandard                      html  "]
[2," done\r\n"]
[1,"\r\n"]
[1,"    Extract                                 html  \r\n"]
[1,"    Metadata                                html  "]
[1,"\r\n"]
[1,"    PhysVirt                                html  \r\n"]
[1,"    Sorting                                 html  "]
[1,"\r\n"]
[1,"    Summaries                               html  "]
[1,"\r\n"]
[1,"    as.bit                                  html  "]
[1,"\r\n"]
[1,"    as.bitwhich                             html  "]
[1,"\r\n"]
[1,"    as.booltype                             html  \r\n"]
[1,"    as.character.bit                        html  "]
[1,"\r\n"]
[1,"    as.character.bitwhich                   html  \r\n"]
[1,"    as.ri                                   html  "]
[1,"\r\n"]
[1,"    as.which                                html  \r\n"]
[1,"    bbatch                                  html  "]
[1,"\r\n"]
[1,"    bit-package                             html  \r\n"]
[1,"    bit                                     html  "]
[1,"\r\n"]
[1,"    bit_in                                  html  \r\n"]
[1,"    bit_init                                html  \r\n"]
[1,"    bit_rangediff                           html  "]
[1,"\r\n"]
[1,"    bit_setops                              html  \r\n"]
[1,"    bit_sort                                html  "]
[1,"\r\n"]
[1,"    bit_sort_unique                         html  "]
[1,"\r\n"]
[1,"    bit_unidup                              html  \r\n"]
[1,"    bitsort                                 html  "]
[1,"\r\n"]
[1,"    bitwhich                                html  \r\n"]
[1,"    bitwhich_representation                 html  "]
[1,"\r\n"]
[1,"    booltype                                html  \r\n"]
[1,"    booltypes                               html  "]
[1,"\r\n"]
[1,"    c.booltype                              html  \r\n"]
[1,"    chunk                                   html  "]
[1,"\r\n"]
[1,"    chunks                                  html  \r\n"]
[1,"    clone                                   html  "]
[1,"\r\n"]
[1,"    copy_vector                             html  \r\n"]
[1,"    countsort                               html  "]
[1,"\r\n"]
[1,"    firstNA                                 html  \r\n"]
[1,"    get_length                              html  "]
[1,"\r\n"]
[1,"    getsetattr                              html  \r\n"]
[1,"    in.bitwhich                             html  "]
[1,"\r\n"]
[1,"    intrle                                  html  "]
[1,"\r\n"]
[1,"    is.booltype                             html  \r\n"]
[1,"    is.na.bit                               html  "]
[1,"\r\n"]
[1,"    length.bit                              html  \r\n"]
[1,"    maxindex                                html  "]
[1,"\r\n"]
[1,"    merge_rev                               html  "]
[1,"\r\n"]
[1,"    print.bit                               html  \r\n"]
[1,"    print.bitwhich                          html  "]
[1,"\r\n"]
[1,"    quicksort2                              html  \r\n"]
[1,"    quicksort3                              html  "]
[1,"\r\n"]
[1,"    range_na                                html  \r\n"]
[1,"    range_nanozero                          html  "]
[1,"\r\n"]
[1,"    range_sortna                            html  "]
[1,"\r\n"]
[1,"    rep.booltype                            html  \r\n"]
[1,"    repeat.time                             html  "]
[1,"\r\n"]
[1,"    repfromto                               html  \r\n"]
[1,"    rev.booltype                            html  "]
[1,"\r\n"]
[1,"    reverse_vector                          html  \r\n"]
[1,"    ri                                      html  "]
[1,"\r\n"]
[1,"    rlepack                                 html  \r\n"]
[1,"    still.identical                         html  "]
[1,"\r\n"]
[1,"    str.bit                                 html  \r\n"]
[1,"    str.bitwhich                            html  "]
[1,"\r\n"]
[1,"    symdiff                                 html  \r\n"]
[1,"    unattr                                  html  \r\n"]
[1,"    vecseq                                  html  "]
[1,"\r\n"]
[1,"    xor                                     html  "]
[1,"\r\n"]
[2,"** building package indices\r\n"]
[2,"** installing vignettes\r\n"]
[2,"** testing if installed package can be loaded from temporary location\r\n*** arch - i386\r\n"]
[2,"*** arch - x64\r\n"]
[2,"** testing if installed package can be loaded from final location\r\n*** arch - i386\r\n"]
[2,"*** arch - x64\r\n"]
[2,"** testing if installed package keeps a record of temporary installation path\r\n* DONE (bit)\r\n"]
[2,"* installing *source* package 'rlang' ...\r\n"]
[2,"** package 'rlang' successfully unpacked and MD5 sums checked\r\n"]
[2,"ERROR: cannot remove earlier installation, is it in use?\r\n* removing 'C:/Users/menken/Documents/R/win-library/4.0/rlang'\r\n* restoring previous 'C:/Users/menken/Documents/R/win-library/4.0/rlang'\r\n"]
[2,"Warning in file.copy(lp, dirname(pkgdir), recursive = TRUE, copy.date = TRUE) :\r\n  problem copying C:\\Users\\menken\\Documents\\R\\win-library\\4.0\\00LOCK-rlang\\rlang\\libs\\x64\\rlang.dll to C:\\Users\\menken\\Documents\\R\\win-library\\4.0\\rlang\\libs\\x64\\rlang.dll: Permission denied\r\n"]
[2,"* installing *source* package 'cli' ...\r\n** package 'cli' successfully unpacked and MD5 sums checked\r\n"]
[2,"ERROR: cannot remove earlier installation, is it in use?\r\n* removing 'C:/Users/menken/Documents/R/win-library/4.0/cli'\r\n* restoring previous 'C:/Users/menken/Documents/R/win-library/4.0/cli'\r\n"]
[2,"Warning in file.copy(lp, dirname(pkgdir), recursive = TRUE, copy.date = TRUE) :\r\n  problem copying C:\\Users\\menken\\Documents\\R\\win-library\\4.0\\00LOCK-cli\\cli\\libs\\x64\\cli.dll to C:\\Users\\menken\\Documents\\R\\win-library\\4.0\\cli\\libs\\x64\\cli.dll: Permission denied\r\n"]
[2,"* installing *source* package 'cpp11' ...\r\n** package 'cpp11' successfully unpacked and MD5 sums checked\r\n** using staged installation\r\n"]
[2,"** R\r\n"]
[2,"** inst\r\n"]
[2,"** byte-compile and prepare package for lazy loading\r\n"]
[2,"** help\r\n"]
[2,"*** installing help indices\r\n"]
[1,"  converting help for package 'cpp11'\r\n"]
[1,"    cpp11-package                           html  "]
[2,"    finding HTML links ... done\r\n"]
[1,"\r\n"]
[1,"    cpp_register                            html  \r\n"]
[1,"    cpp_source                              html  "]
[1,"\r\n"]
[1,"    cpp_vendor                              html  \r\n"]
[2,"** building package indices\r\n"]
[2,"** installing vignettes\r\n"]
[2,"** testing if installed package can be loaded from temporary location\r\n*** arch - i386\r\n"]
[2,"*** arch - x64\r\n"]
[2,"** testing if installed package can be loaded from final location\r\n*** arch - i386\r\n"]
[2,"*** arch - x64\r\n"]
[2,"** testing if installed package keeps a record of temporary installation path\r\n* DONE (cpp11)\r\n"]
[2,"* installing *source* package 'lifecycle' ...\r\n** package 'lifecycle' successfully unpacked and MD5 sums checked\r\n"]
[2,"** using staged installation\r\n"]
[2,"** R\r\n"]
[2,"** inst\r\n"]
[2,"** byte-compile and prepare package for lazy loading\r\n"]
[1,"Error in loadNamespace(i, c(lib.loc, .libPaths()), versionCheck = vI[[i]]) : \r\n"]
[1,"  namespace 'rlang' 1.0.2 is being loaded, but >= 1.0.6 is required\r\n"]
[1,"Calls: <Anonymous> ... withCallingHandlers -> loadNamespace -> namespaceImport -> loadNamespace\r\n"]
[1,"Execution halted\r\n"]
[2,"ERROR: lazy loading failed for package 'lifecycle'\r\n* removing 'C:/Users/menken/Documents/R/win-library/4.0/lifecycle'\r\n* restoring previous 'C:/Users/menken/Documents/R/win-library/4.0/lifecycle'\r\n"]
[2,"* installing *source* package 'tzdb' ...\r\n** package 'tzdb' successfully unpacked and MD5 sums checked\r\n** using staged installation\r\n"]
[2,"** libs\r\n\r\n*** arch - i386\r\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG  -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include'     -I../inst/include -DINSTALL=dummy -DAUTO_DOWNLOAD=0 -DHAS_REMOTE_API=0 -DUSE_OS_TZDB=0 -DONLY_C_LOCALE=1   -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c api.cpp -o api.o\n"]
[2,"In file included from api.cpp:3:\nC:/Users/menken/Documents/R/win-library/4.0/cpp11/include/cpp11/protect.hpp:324:3: warning: 'cpp11::preserved' defined but not used [-Wunused-variable]\n } preserved;\n   ^~~~~~~~~\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG  -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include'     -I../inst/include -DINSTALL=dummy -DAUTO_DOWNLOAD=0 -DHAS_REMOTE_API=0 -DUSE_OS_TZDB=0 -DONLY_C_LOCALE=1   -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c cpp11.cpp -o cpp11.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG  -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include'     -I../inst/include -DINSTALL=dummy -DAUTO_DOWNLOAD=0 -DHAS_REMOTE_API=0 -DUSE_OS_TZDB=0 -DONLY_C_LOCALE=1   -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c names.cpp -o names.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG  -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include'     -I../inst/include -DINSTALL=dummy -DAUTO_DOWNLOAD=0 -DHAS_REMOTE_API=0 -DUSE_OS_TZDB=0 -DONLY_C_LOCALE=1   -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c path.cpp -o path.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG  -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include'     -I../inst/include -DINSTALL=dummy -DAUTO_DOWNLOAD=0 -DHAS_REMOTE_API=0 -DUSE_OS_TZDB=0 -DONLY_C_LOCALE=1   -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c tz.cpp -o tz.o\n"]
[2,"tz.cpp:234:1: warning: 'std::__cxx11::string get_known_folder(const GUID&)' defined but not used [-Wunused-function]\n get_known_folder(const GUID& folderid)\n ^~~~~~~~~~~~~~~~\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG  -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include'     -I../inst/include -DINSTALL=dummy -DAUTO_DOWNLOAD=0 -DHAS_REMOTE_API=0 -DUSE_OS_TZDB=0 -DONLY_C_LOCALE=1   -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c version.cpp -o version.o\n"]
[1,"C:/rtools40/mingw32/bin/g++ -std=gnu++11 -shared -s -static-libgcc -o tzdb.dll tmp.def api.o cpp11.o names.o path.o tz.o version.o -lpthread -lole32 -LC:/PROGRA~1/R/R-40~1.5/bin/i386 -lR\n"]
[2,"installing to C:/Users/menken/Documents/R/win-library/4.0/00LOCK-tzdb/00new/tzdb/libs/i386\r\n\r\n*** arch - x64\r\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG  -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include'     -I../inst/include -DINSTALL=dummy -DAUTO_DOWNLOAD=0 -DHAS_REMOTE_API=0 -DUSE_OS_TZDB=0 -DONLY_C_LOCALE=1   -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c api.cpp -o api.o\n"]
[2,"In file included from api.cpp:3:\nC:/Users/menken/Documents/R/win-library/4.0/cpp11/include/cpp11/protect.hpp:324:3: warning: 'cpp11::preserved' defined but not used [-Wunused-variable]\n } preserved;\n   ^~~~~~~~~\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG  -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include'     -I../inst/include -DINSTALL=dummy -DAUTO_DOWNLOAD=0 -DHAS_REMOTE_API=0 -DUSE_OS_TZDB=0 -DONLY_C_LOCALE=1   -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c cpp11.cpp -o cpp11.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG  -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include'     -I../inst/include -DINSTALL=dummy -DAUTO_DOWNLOAD=0 -DHAS_REMOTE_API=0 -DUSE_OS_TZDB=0 -DONLY_C_LOCALE=1   -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c names.cpp -o names.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG  -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include'     -I../inst/include -DINSTALL=dummy -DAUTO_DOWNLOAD=0 -DHAS_REMOTE_API=0 -DUSE_OS_TZDB=0 -DONLY_C_LOCALE=1   -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c path.cpp -o path.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG  -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include'     -I../inst/include -DINSTALL=dummy -DAUTO_DOWNLOAD=0 -DHAS_REMOTE_API=0 -DUSE_OS_TZDB=0 -DONLY_C_LOCALE=1   -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c tz.cpp -o tz.o\n"]
[2,"tz.cpp:234:1: warning: 'std::__cxx11::string get_known_folder(const GUID&)' defined but not used [-Wunused-function]\n get_known_folder(const GUID& folderid)\n ^~~~~~~~~~~~~~~~\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG  -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include'     -I../inst/include -DINSTALL=dummy -DAUTO_DOWNLOAD=0 -DHAS_REMOTE_API=0 -DUSE_OS_TZDB=0 -DONLY_C_LOCALE=1   -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c version.cpp -o version.o\n"]
[1,"C:/rtools40/mingw64/bin/g++ -std=gnu++11 -shared -s -static-libgcc -o tzdb.dll tmp.def api.o cpp11.o names.o path.o tz.o version.o -lpthread -lole32 -LC:/PROGRA~1/R/R-40~1.5/bin/x64 -lR\n"]
[2,"installing to C:/Users/menken/Documents/R/win-library/4.0/00LOCK-tzdb/00new/tzdb/libs/x64\r\n"]
[2,"** R\r\n"]
[2,"** inst\r\n"]
[2,"** byte-compile and prepare package for lazy loading\r\n"]
[2,"** help\r\n"]
[2,"*** installing help indices\r\n"]
[1,"  converting help for package 'tzdb'\r\n"]
[1,"    tzdb-package                            html  "]
[2,"    finding HTML links ... done\r\n"]
[1,"\r\n"]
[1,"    tzdb_initialize                         html  \r\n"]
[1,"    tzdb_names                              html  \r\n"]
[1,"    tzdb_path                               html  "]
[1,"\r\n"]
[1,"    tzdb_version                            html  \r\n"]
[2,"** building package indices\r\n"]
[2,"** testing if installed package can be loaded from temporary location\r\n*** arch - i386\r\n"]
[2,"*** arch - x64\r\n"]
[2,"** testing if installed package can be loaded from final location\r\n*** arch - i386\r\n"]
[2,"*** arch - x64\r\n"]
[2,"** testing if installed package keeps a record of temporary installation path\r\n"]
[2,"* DONE (tzdb)\r\n"]
[2,"* installing *source* package 'vroom' ...\r\n"]
[2,"** package 'vroom' successfully unpacked and MD5 sums checked\r\n** using staged installation\r\n"]
[2,"** libs\r\n\r\n*** arch - i386\r\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c Iconv.cpp -o Iconv.o\n"]
[2,"In file included from Iconv.cpp:2:\nC:/Users/menken/Documents/R/win-library/4.0/cpp11/include/cpp11/protect.hpp:324:3: warning: 'cpp11::preserved' defined but not used [-Wunused-variable]\n } preserved;\n   ^~~~~~~~~\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c LocaleInfo.cpp -o LocaleInfo.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c altrep.cc -o altrep.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c cpp11.cpp -o cpp11.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c delimited_index.cc -o delimited_index.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c delimited_index_connection.cc -o delimited_index_connection.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c fixed_width_index_connection.cc -o fixed_width_index_connection.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c gen.cc -o gen.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"gcc  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -std=gnu99 -mfpmath=sse -msse2 -mstackrealign -c grisu3.c -o grisu3.o\n"]
[2,"grisu3.c: In function 'double2diy_fp':\ngrisu3.c:57:23: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]\n #define CAST_U64(d) (*(uint64_t*)&d)\n                       ^~~~~~~~~~~~~~\n #define MIN(x,y) ((x) <= (y) ? (x) : (y))\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n #define MAX(x,y) ((x) >= (y) ? (x) : (y))\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n #define MIN_CACHED_EXP -348\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n #define CACHED_EXP_STEP 8\n ~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n typedef struct diy_fp\n ~~~~~~~~~~~~~~~~~~~~~  \n {\n ~                      \n  uint64_t f;\n  ~~~~~~~~~~~           \n  int e;\n  ~~~~~~                \n } diy_fp;\n ~~~~~~~~~              \n \n                        \n typedef struct power\n ~~~~~~~~~~~~~~~~~~~~   \n {\n ~                      \n  uint64_t fract;\n  ~~~~~~~~~~~~~~~       \n  int16_t b_exp, d_exp;\n  ~~~~~~~~~~~~~~~~~~~~~ \n } power;\n ~~~~~~~~               \n \n                        \n static const power pow_cache[] =\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  { 0xfa8fd5a0081c0288ULL, -1220, -348 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbaaee17fa23ebf76ULL, -1193, -340 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8b16fb203055ac76ULL, -1166, -332 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcf42894a5dce35eaULL, -1140, -324 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9a6bb0aa55653b2dULL, -1113, -316 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe61acf033d1a45dfULL, -1087, -308 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xab70fe17c79ac6caULL, -1060, -300 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xff77b1fcbebcdc4fULL, -1034, -292 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbe5691ef416bd60cULL, -1007, -284 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8dd01fad907ffc3cULL,  -980, -276 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd3515c2831559a83ULL,  -954, -268 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9d71ac8fada6c9b5ULL,  -927, -260 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xea9c227723ee8bcbULL,  -901, -252 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaecc49914078536dULL,  -874, -244 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x823c12795db6ce57ULL,  -847, -236 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc21094364dfb5637ULL,  -821, -228 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9096ea6f3848984fULL,  -794, -220 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd77485cb25823ac7ULL,  -768, -212 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa086cfcd97bf97f4ULL,  -741, -204 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xef340a98172aace5ULL,  -715, -196 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb23867fb2a35b28eULL,  -688, -188 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x84c8d4dfd2c63f3bULL,  -661, -180 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc5dd44271ad3cdbaULL,  -635, -172 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x936b9fcebb25c996ULL,  -608, -164 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xdbac6c247d62a584ULL,  -582, -156 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa3ab66580d5fdaf6ULL,  -555, -148 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf3e2f893dec3f126ULL,  -529, -140 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb5b5ada8aaff80b8ULL,  -502, -132 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x87625f056c7c4a8bULL,  -475, -124 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc9bcff6034c13053ULL,  -449, -116 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x964e858c91ba2655ULL,  -422, -108 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xdff9772470297ebdULL,  -396, -100 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa6dfbd9fb8e5b88fULL,  -369,  -92 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf8a95fcf88747d94ULL,  -343,  -84 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb94470938fa89bcfULL,  -316,  -76 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8a08f0f8bf0f156bULL,  -289,  -68 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcdb02555653131b6ULL,  -263,  -60 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x993fe2c6d07b7facULL,  -236,  -52 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe45c10c42a2b3b06ULL,  -210,  -44 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaa242499697392d3ULL,  -183,  -36 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xfd87b5f28300ca0eULL,  -157,  -28 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbce5086492111aebULL,  -130,  -20 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8cbccc096f5088ccULL,  -103,  -12 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd1b71758e219652cULL,   -77,   -4 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9c40000000000000ULL,   -50,    4 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe8d4a51000000000ULL,   -24,   12 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xad78ebc5ac620000ULL,     3,   20 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x813f3978f8940984ULL,    30,   28 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc097ce7bc90715b3ULL,    56,   36 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8f7e32ce7bea5c70ULL,    83,   44 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd5d238a4abe98068ULL,   109,   52 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9f4f2726179a2245ULL,   136,   60 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xed63a231d4c4fb27ULL,   162,   68 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb0de65388cc8ada8ULL,   189,   76 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x83c7088e1aab65dbULL,   216,   84 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc45d1df942711d9aULL,   242,   92 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x924d692ca61be758ULL,   269,  100 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xda01ee641a708deaULL,   295,  108 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa26da3999aef774aULL,   322,  116 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf209787bb47d6b85ULL,   348,  124 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb454e4a179dd1877ULL,   375,  132 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x865b86925b9bc5c2ULL,   402,  140 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc83553c5c8965d3dULL,   428,  148 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x952ab45cfa97a0b3ULL,   455,  156 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xde469fbd99a05fe3ULL,   481,  164 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa59bc234db398c25ULL,   508,  172 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf6c69a72a3989f5cULL,   534,  180 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb7dcbf5354e9beceULL,   561,  188 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x88fcf317f22241e2ULL,   588,  196 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcc20ce9bd35c78a5ULL,   614,  204 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x98165af37b2153dfULL,   641,  212 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe2a0b5dc971f303aULL,   667,  220 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa8d9d1535ce3b396ULL,   694,  228 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xfb9b7cd9a4a7443cULL,   720,  236 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbb764c4ca7a44410ULL,   747,  244 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8bab8eefb6409c1aULL,   774,  252 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd01fef10a657842cULL,   800,  260 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9b10a4e5e9913129ULL,   827,  268 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe7109bfba19c0c9dULL,   853,  276 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xac2820d9623bf429ULL,   880,  284 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x80444b5e7aa7cf85ULL,   907,  292 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbf21e44003acdd2dULL,   933,  300 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8e679c2f5e44ff8fULL,   960,  308 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd433179d9c8cb841ULL,   986,  316 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9e19db92b4e31ba9ULL,  1013,  324 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xeb96bf6ebadf77d9ULL,  1039,  332 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaf87023b9bf0ee6bULL,  1066,  340 }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n };\n ~~                     \n \n                        \n static int cached_pow(int exp, diy_fp *p)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int k = (int)ceil((exp+DIYFP_FRACT_SIZE-1) * D_1_LOG2_10);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  int i = (k-MIN_CACHED_EXP-1) / CACHED_EXP_STEP + 1;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  p->f = pow_cache[i].fract;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n  p->e = pow_cache[i].b_exp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return pow_cache[i].d_exp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n }\n ~                      \n \n                        \n static diy_fp minus(diy_fp x, diy_fp y)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  diy_fp d; d.f = x.f - y.f; d.e = x.e;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  assert(x.e == y.e && x.f >= y.f);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return d;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp multiply(diy_fp x, diy_fp y)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  uint64_t a, b, c, d, ac, bc, ad, bd, tmp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp r;\n  ~~~~~~~~~             \n  a = x.f >> 32; b = x.f & MASK32;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  c = y.f >> 32; d = y.f & MASK32;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  ac = a*c; bc = b*c;\n  ~~~~~~~~~~~~~~~~~~~   \n  ad = a*d; bd = b*d;\n  ~~~~~~~~~~~~~~~~~~~   \n  tmp = (bd >> 32) + (ad & MASK32) + (bc & MASK32);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  tmp += 1U << 31; // round\n  ~~~~~~~~~~~~~~~~~~~~~~~~~\n  r.f = ac + (ad >> 32) + (bc >> 32) + (tmp >> 32);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  r.e = x.e + y.e + 64;\n  ~~~~~~~~~~~~~~~~~~~~~ \n  return r;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp normalize_diy_fp(diy_fp n)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  assert(n.f != 0);\n  ~~~~~~~~~~~~~~~~~     \n  while(!(n.f & 0xFFC0000000000000ULL)) { n.f <<= 10; n.e -= 10; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  while(!(n.f & D64_SIGN)) { n.f <<= 1; --n.e; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return n;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp double2diy_fp(double d)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  diy_fp fp;\n  ~~~~~~~~~~            \n  uint64_t u64 = CAST_U64(d);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~\ngrisu3.c:209:17: note: in expansion of macro 'CAST_U64'\n  uint64_t u64 = CAST_U64(d);\n                 ^~~~~~~~\n"]
[2,"grisu3.c: In function 'grisu3':\n"]
[2,"grisu3.c:57:23: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]\n #define CAST_U64(d) (*(uint64_t*)&d)\n                       ^~~~~~~~~~~~~~\n #define MIN(x,y) ((x) <= (y) ? (x) : (y))\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n #define MAX(x,y) ((x) >= (y) ? (x) : (y))\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n #define MIN_CACHED_EXP -348\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n #define CACHED_EXP_STEP 8\n ~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n typedef struct diy_fp\n ~~~~~~~~~~~~~~~~~~~~~  \n {\n ~                      \n  uint64_t f;\n  ~~~~~~~~~~~           \n  int e;\n  ~~~~~~                \n } diy_fp;\n ~~~~~~~~~              \n \n                        \n typedef struct power\n ~~~~~~~~~~~~~~~~~~~~   \n {\n ~                      \n  uint64_t fract;\n  ~~~~~~~~~~~~~~~       \n  int16_t b_exp, d_exp;\n  ~~~~~~~~~~~~~~~~~~~~~ \n } power;\n ~~~~~~~~               \n \n                        \n static const power pow_cache[] =\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  { 0xfa8fd5a0081c0288ULL, -1220, -348 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbaaee17fa23ebf76ULL, -1193, -340 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8b16fb203055ac76ULL, -1166, -332 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcf42894a5dce35eaULL, -1140, -324 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9a6bb0aa55653b2dULL, -1113, -316 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe61acf033d1a45dfULL, -1087, -308 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xab70fe17c79ac6caULL, -1060, -300 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xff77b1fcbebcdc4fULL, -1034, -292 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbe5691ef416bd60cULL, -1007, -284 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8dd01fad907ffc3cULL,  -980, -276 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd3515c2831559a83ULL,  -954, -268 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9d71ac8fada6c9b5ULL,  -927, -260 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xea9c227723ee8bcbULL,  -901, -252 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaecc49914078536dULL,  -874, -244 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x823c12795db6ce57ULL,  -847, -236 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc21094364dfb5637ULL,  -821, -228 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9096ea6f3848984fULL,  -794, -220 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd77485cb25823ac7ULL,  -768, -212 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa086cfcd97bf97f4ULL,  -741, -204 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xef340a98172aace5ULL,  -715, -196 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb23867fb2a35b28eULL,  -688, -188 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x84c8d4dfd2c63f3bULL,  -661, -180 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc5dd44271ad3cdbaULL,  -635, -172 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x936b9fcebb25c996ULL,  -608, -164 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xdbac6c247d62a584ULL,  -582, -156 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa3ab66580d5fdaf6ULL,  -555, -148 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf3e2f893dec3f126ULL,  -529, -140 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb5b5ada8aaff80b8ULL,  -502, -132 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x87625f056c7c4a8bULL,  -475, -124 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc9bcff6034c13053ULL,  -449, -116 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x964e858c91ba2655ULL,  -422, -108 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xdff9772470297ebdULL,  -396, -100 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa6dfbd9fb8e5b88fULL,  -369,  -92 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf8a95fcf88747d94ULL,  -343,  -84 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb94470938fa89bcfULL,  -316,  -76 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8a08f0f8bf0f156bULL,  -289,  -68 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcdb02555653131b6ULL,  -263,  -60 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x993fe2c6d07b7facULL,  -236,  -52 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe45c10c42a2b3b06ULL,  -210,  -44 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaa242499697392d3ULL,  -183,  -36 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xfd87b5f28300ca0eULL,  -157,  -28 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbce5086492111aebULL,  -130,  -20 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8cbccc096f5088ccULL,  -103,  -12 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd1b71758e219652cULL,   -77,   -4 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9c40000000000000ULL,   -50,    4 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe8d4a51000000000ULL,   -24,   12 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xad78ebc5ac620000ULL,     3,   20 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x813f3978f8940984ULL,    30,   28 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc097ce7bc90715b3ULL,    56,   36 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8f7e32ce7bea5c70ULL,    83,   44 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd5d238a4abe98068ULL,   109,   52 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9f4f2726179a2245ULL,   136,   60 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xed63a231d4c4fb27ULL,   162,   68 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb0de65388cc8ada8ULL,   189,   76 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x83c7088e1aab65dbULL,   216,   84 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc45d1df942711d9aULL,   242,   92 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x924d692ca61be758ULL,   269,  100 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xda01ee641a708deaULL,   295,  108 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa26da3999aef774aULL,   322,  116 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf209787bb47d6b85ULL,   348,  124 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb454e4a179dd1877ULL,   375,  132 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x865b86925b9bc5c2ULL,   402,  140 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc83553c5c8965d3dULL,   428,  148 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x952ab45cfa97a0b3ULL,   455,  156 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xde469fbd99a05fe3ULL,   481,  164 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa59bc234db398c25ULL,   508,  172 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf6c69a72a3989f5cULL,   534,  180 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb7dcbf5354e9beceULL,   561,  188 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x88fcf317f22241e2ULL,   588,  196 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcc20ce9bd35c78a5ULL,   614,  204 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x98165af37b2153dfULL,   641,  212 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe2a0b5dc971f303aULL,   667,  220 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa8d9d1535ce3b396ULL,   694,  228 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xfb9b7cd9a4a7443cULL,   720,  236 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbb764c4ca7a44410ULL,   747,  244 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8bab8eefb6409c1aULL,   774,  252 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd01fef10a657842cULL,   800,  260 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9b10a4e5e9913129ULL,   827,  268 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe7109bfba19c0c9dULL,   853,  276 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xac2820d9623bf429ULL,   880,  284 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x80444b5e7aa7cf85ULL,   907,  292 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbf21e44003acdd2dULL,   933,  300 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8e679c2f5e44ff8fULL,   960,  308 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd433179d9c8cb841ULL,   986,  316 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9e19db92b4e31ba9ULL,  1013,  324 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xeb96bf6ebadf77d9ULL,  1039,  332 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaf87023b9bf0ee6bULL,  1066,  340 }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n };\n ~~                     \n \n                        \n static int cached_pow(int exp, diy_fp *p)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int k = (int)ceil((exp+DIYFP_FRACT_SIZE-1) * D_1_LOG2_10);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  int i = (k-MIN_CACHED_EXP-1) / CACHED_EXP_STEP + 1;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  p->f = pow_cache[i].fract;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n  p->e = pow_cache[i].b_exp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return pow_cache[i].d_exp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n }\n ~                      \n \n                        \n static diy_fp minus(diy_fp x, diy_fp y)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  diy_fp d; d.f = x.f - y.f; d.e = x.e;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  assert(x.e == y.e && x.f >= y.f);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return d;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp multiply(diy_fp x, diy_fp y)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  uint64_t a, b, c, d, ac, bc, ad, bd, tmp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp r;\n  ~~~~~~~~~             \n  a = x.f >> 32; b = x.f & MASK32;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  c = y.f >> 32; d = y.f & MASK32;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  ac = a*c; bc = b*c;\n  ~~~~~~~~~~~~~~~~~~~   \n  ad = a*d; bd = b*d;\n  ~~~~~~~~~~~~~~~~~~~   \n  tmp = (bd >> 32) + (ad & MASK32) + (bc & MASK32);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  tmp += 1U << 31; // round\n  ~~~~~~~~~~~~~~~~~~~~~~~~~\n  r.f = ac + (ad >> 32) + (bc >> 32) + (tmp >> 32);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  r.e = x.e + y.e + 64;\n  ~~~~~~~~~~~~~~~~~~~~~ \n  return r;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp normalize_diy_fp(diy_fp n)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  assert(n.f != 0);\n  ~~~~~~~~~~~~~~~~~     \n  while(!(n.f & 0xFFC0000000000000ULL)) { n.f <<= 10; n.e -= 10; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  while(!(n.f & D64_SIGN)) { n.f <<= 1; --n.e; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return n;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp double2diy_fp(double d)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  diy_fp fp;\n  ~~~~~~~~~~            \n  uint64_t u64 = CAST_U64(d);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  if (!(u64 & D64_EXP_MASK)) { fp.f = u64 & D64_FRACT_MASK; fp.e = 1 - D64_EXP_BIAS; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  else { fp.f = (u64 & D64_FRACT_MASK) + D64_IMPLICIT_ONE; fp.e = (int)((u64 & D64_EXP_MASK) >> D64_EXP_POS) - D64_EXP_BIAS; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return fp;\n  ~~~~~~~~~~            \n }\n ~                      \n \n                        \n // pow10_cache[i] = 10^(i-1)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n static const unsigned int pow10_cache[] = { 0, 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000 };\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n static int largest_pow10(uint32_t n, int n_bits, uint32_t *power)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int guess = ((n_bits + 1) * 1233 >> 12) + 1/*skip first entry*/;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  if (n < pow10_cache[guess]) --guess; // We don't have any guarantees that 2^n_bits <= n.\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  *power = pow10_cache[guess];\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return guess;\n  ~~~~~~~~~~~~~         \n }\n ~                      \n \n                        \n static int round_weed(char *buffer, int len, uint64_t wp_W, uint64_t delta, uint64_t rest, uint64_t ten_kappa, uint64_t ulp)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  uint64_t wp_Wup = wp_W - ulp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint64_t wp_Wdown = wp_W + ulp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  while(rest < wp_Wup && delta - rest >= ten_kappa\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   && (rest + ten_kappa < wp_Wup || wp_Wup - rest >= rest + ten_kappa - wp_Wup))\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  {\n  ~                     \n   --buffer[len-1];\n   ~~~~~~~~~~~~~~~~     \n   rest += ten_kappa;\n   ~~~~~~~~~~~~~~~~~~   \n  }\n  ~                     \n  if (rest < wp_Wdown && delta - rest >= ten_kappa\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   && (rest + ten_kappa < wp_Wdown || wp_Wdown - rest > rest + ten_kappa - wp_Wdown))\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   return 0;\n   ~~~~~~~~~            \n \n                        \n  return 2*ulp <= rest && rest <= delta - 4*ulp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n }\n ~                      \n \n                        \n static int digit_gen(diy_fp low, diy_fp w, diy_fp high, char *buffer, int *length, int *kappa)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  uint64_t unit = 1;\n  ~~~~~~~~~~~~~~~~~~    \n  diy_fp too_low = { low.f - unit, low.e };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp too_high = { high.f + unit, high.e };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp unsafe_interval = minus(too_high, too_low);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp one = { 1ULL << -w.e, w.e };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint32_t p1 = (uint32_t)(too_high.f >> -one.e);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint64_t p2 = too_high.f & (one.f - 1);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint32_t div;\n  ~~~~~~~~~~~~~         \n  *kappa = largest_pow10(p1, DIYFP_FRACT_SIZE + one.e, &div);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  *length = 0;\n  ~~~~~~~~~~~~          \n \n                        \n  while(*kappa > 0)\n  ~~~~~~~~~~~~~~~~~     \n  {\n  ~                     \n   uint64_t rest;\n   ~~~~~~~~~~~~~~       \n   int digit = p1 / div;\n   ~~~~~~~~~~~~~~~~~~~~~\n   buffer[*length] = (char)('0' + digit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   ++*length;\n   ~~~~~~~~~~           \n   p1 %= div;\n   ~~~~~~~~~~           \n   --*kappa;\n   ~~~~~~~~~            \n   rest = ((uint64_t)p1 << -one.e) + p2;\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   if (rest < unsafe_interval.f) return round_weed(buffer, *length, minus(too_high, w).f, unsafe_interval.f, rest, (uint64_t)div << -one.e, unit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   div /= 10;\n   ~~~~~~~~~~           \n  }\n  ~                     \n \n                        \n  for(;;)\n  ~~~~~~~               \n  {\n  ~                     \n   int digit;\n   ~~~~~~~~~~           \n   p2 *= 10;\n   ~~~~~~~~~            \n   unit *= 10;\n   ~~~~~~~~~~~          \n   unsafe_interval.f *= 10;\n   ~~~~~~~~~~~~~~~~~~~~~~~~\n   // Integer division by one.\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   digit = (int)(p2 >> -one.e);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   buffer[*length] = (char)('0' + digit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   ++*length;\n   ~~~~~~~~~~           \n   p2 &= one.f - 1;  // Modulo by one.\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   --*kappa;\n   ~~~~~~~~~            \n   if (p2 < unsafe_interval.f) return round_weed(buffer, *length, minus(too_high, w).f * unit, unsafe_interval.f, p2, one.f, unit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  }\n  ~                     \n }\n ~                      \n \n                        \n static int grisu3(double v, char *buffer, int *length, int *d_exp)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int mk, kappa, success;\n  ~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp dfp = double2diy_fp(v);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp w = normalize_diy_fp(dfp);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n  // normalize boundaries\n  ~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp t = { (dfp.f << 1) + 1, dfp.e - 1 };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp b_plus = normalize_diy_fp(t);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp b_minus;\n  ~~~~~~~~~~~~~~~       \n  diy_fp c_mk; // Cached power of ten: 10^-k\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint64_t u64 = CAST_U64(v);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~\ngrisu3.c:296:17: note: in expansion of macro 'CAST_U64'\n  uint64_t u64 = CAST_U64(v);\n                 ^~~~~~~~\n"]
[2,"grisu3.c: In function 'dtoa_grisu3':\ngrisu3.c:57:23: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]\n #define CAST_U64(d) (*(uint64_t*)&d)\n                       ^~~~~~~~~~~~~~\n #define MIN(x,y) ((x) <= (y) ? (x) : (y))\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n #define MAX(x,y) ((x) >= (y) ? (x) : (y))\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n #define MIN_CACHED_EXP -348\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n #define CACHED_EXP_STEP 8\n ~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n typedef struct diy_fp\n ~~~~~~~~~~~~~~~~~~~~~  \n {\n ~                      \n  uint64_t f;\n  ~~~~~~~~~~~           \n  int e;\n  ~~~~~~                \n } diy_fp;\n ~~~~~~~~~              \n \n                        \n typedef struct power\n ~~~~~~~~~~~~~~~~~~~~   \n {\n ~                      \n  uint64_t fract;\n  ~~~~~~~~~~~~~~~       \n  int16_t b_exp, d_exp;\n  ~~~~~~~~~~~~~~~~~~~~~ \n } power;\n ~~~~~~~~               \n \n                        \n static const power pow_cache[] =\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  { 0xfa8fd5a0081c0288ULL, -1220, -348 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbaaee17fa23ebf76ULL, -1193, -340 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8b16fb203055ac76ULL, -1166, -332 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcf42894a5dce35eaULL, -1140, -324 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9a6bb0aa55653b2dULL, -1113, -316 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe61acf033d1a45dfULL, -1087, -308 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xab70fe17c79ac6caULL, -1060, -300 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xff77b1fcbebcdc4fULL, -1034, -292 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbe5691ef416bd60cULL, -1007, -284 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8dd01fad907ffc3cULL,  -980, -276 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd3515c2831559a83ULL,  -954, -268 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9d71ac8fada6c9b5ULL,  -927, -260 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xea9c227723ee8bcbULL,  -901, -252 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaecc49914078536dULL,  -874, -244 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x823c12795db6ce57ULL,  -847, -236 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc21094364dfb5637ULL,  -821, -228 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9096ea6f3848984fULL,  -794, -220 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd77485cb25823ac7ULL,  -768, -212 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa086cfcd97bf97f4ULL,  -741, -204 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xef340a98172aace5ULL,  -715, -196 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb23867fb2a35b28eULL,  -688, -188 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x84c8d4dfd2c63f3bULL,  -661, -180 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc5dd44271ad3cdbaULL,  -635, -172 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x936b9fcebb25c996ULL,  -608, -164 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xdbac6c247d62a584ULL,  -582, -156 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa3ab66580d5fdaf6ULL,  -555, -148 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf3e2f893dec3f126ULL,  -529, -140 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb5b5ada8aaff80b8ULL,  -502, -132 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x87625f056c7c4a8bULL,  -475, -124 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc9bcff6034c13053ULL,  -449, -116 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x964e858c91ba2655ULL,  -422, -108 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xdff9772470297ebdULL,  -396, -100 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa6dfbd9fb8e5b88fULL,  -369,  -92 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf8a95fcf88747d94ULL,  -343,  -84 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb94470938fa89bcfULL,  -316,  -76 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8a08f0f8bf0f156bULL,  -289,  -68 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcdb02555653131b6ULL,  -263,  -60 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x993fe2c6d07b7facULL,  -236,  -52 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe45c10c42a2b3b06ULL,  -210,  -44 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaa242499697392d3ULL,  -183,  -36 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xfd87b5f28300ca0eULL,  -157,  -28 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbce5086492111aebULL,  -130,  -20 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8cbccc096f5088ccULL,  -103,  -12 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd1b71758e219652cULL,   -77,   -4 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9c40000000000000ULL,   -50,    4 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe8d4a51000000000ULL,   -24,   12 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xad78ebc5ac620000ULL,     3,   20 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x813f3978f8940984ULL,    30,   28 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc097ce7bc90715b3ULL,    56,   36 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8f7e32ce7bea5c70ULL,    83,   44 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd5d238a4abe98068ULL,   109,   52 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9f4f2726179a2245ULL,   136,   60 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xed63a231d4c4fb27ULL,   162,   68 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb0de65388cc8ada8ULL,   189,   76 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x83c7088e1aab65dbULL,   216,   84 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc45d1df942711d9aULL,   242,   92 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x924d692ca61be758ULL,   269,  100 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xda01ee641a708deaULL,   295,  108 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa26da3999aef774aULL,   322,  116 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf209787bb47d6b85ULL,   348,  124 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb454e4a179dd1877ULL,   375,  132 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x865b86925b9bc5c2ULL,   402,  140 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc83553c5c8965d3dULL,   428,  148 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x952ab45cfa97a0b3ULL,   455,  156 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xde469fbd99a05fe3ULL,   481,  164 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa59bc234db398c25ULL,   508,  172 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf6c69a72a3989f5cULL,   534,  180 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb7dcbf5354e9beceULL,   561,  188 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x88fcf317f22241e2ULL,   588,  196 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcc20ce9bd35c78a5ULL,   614,  204 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x98165af37b2153dfULL,   641,  212 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe2a0b5dc971f303aULL,   667,  220 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa8d9d1535ce3b396ULL,   694,  228 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xfb9b7cd9a4a7443cULL,   720,  236 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbb764c4ca7a44410ULL,   747,  244 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8bab8eefb6409c1aULL,   774,  252 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd01fef10a657842cULL,   800,  260 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9b10a4e5e9913129ULL,   827,  268 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe7109bfba19c0c9dULL,   853,  276 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xac2820d9623bf429ULL,   880,  284 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x80444b5e7aa7cf85ULL,   907,  292 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbf21e44003acdd2dULL,   933,  300 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8e679c2f5e44ff8fULL,   960,  308 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd433179d9c8cb841ULL,   986,  316 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9e19db92b4e31ba9ULL,  1013,  324 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xeb96bf6ebadf77d9ULL,  1039,  332 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaf87023b9bf0ee6bULL,  1066,  340 }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n };\n ~~                     \n \n                        \n static int cached_pow(int exp, diy_fp *p)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int k = (int)ceil((exp+DIYFP_FRACT_SIZE-1) * D_1_LOG2_10);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  int i = (k-MIN_CACHED_EXP-1) / CACHED_EXP_STEP + 1;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  p->f = pow_cache[i].fract;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n  p->e = pow_cache[i].b_exp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return pow_cache[i].d_exp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n }\n ~                      \n \n                        \n static diy_fp minus(diy_fp x, diy_fp y)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  diy_fp d; d.f = x.f - y.f; d.e = x.e;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  assert(x.e == y.e && x.f >= y.f);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return d;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp multiply(diy_fp x, diy_fp y)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  uint64_t a, b, c, d, ac, bc, ad, bd, tmp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp r;\n  ~~~~~~~~~             \n  a = x.f >> 32; b = x.f & MASK32;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  c = y.f >> 32; d = y.f & MASK32;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  ac = a*c; bc = b*c;\n  ~~~~~~~~~~~~~~~~~~~   \n  ad = a*d; bd = b*d;\n  ~~~~~~~~~~~~~~~~~~~   \n  tmp = (bd >> 32) + (ad & MASK32) + (bc & MASK32);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  tmp += 1U << 31; // round\n  ~~~~~~~~~~~~~~~~~~~~~~~~~\n  r.f = ac + (ad >> 32) + (bc >> 32) + (tmp >> 32);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  r.e = x.e + y.e + 64;\n  ~~~~~~~~~~~~~~~~~~~~~ \n  return r;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp normalize_diy_fp(diy_fp n)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  assert(n.f != 0);\n  ~~~~~~~~~~~~~~~~~     \n  while(!(n.f & 0xFFC0000000000000ULL)) { n.f <<= 10; n.e -= 10; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  while(!(n.f & D64_SIGN)) { n.f <<= 1; --n.e; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return n;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp double2diy_fp(double d)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  diy_fp fp;\n  ~~~~~~~~~~            \n  uint64_t u64 = CAST_U64(d);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  if (!(u64 & D64_EXP_MASK)) { fp.f = u64 & D64_FRACT_MASK; fp.e = 1 - D64_EXP_BIAS; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  else { fp.f = (u64 & D64_FRACT_MASK) + D64_IMPLICIT_ONE; fp.e = (int)((u64 & D64_EXP_MASK) >> D64_EXP_POS) - D64_EXP_BIAS; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return fp;\n  ~~~~~~~~~~            \n }\n ~                      \n \n                        \n // pow10_cache[i] = 10^(i-1)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n static const unsigned int pow10_cache[] = { 0, 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000 };\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n static int largest_pow10(uint32_t n, int n_bits, uint32_t *power)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int guess = ((n_bits + 1) * 1233 >> 12) + 1/*skip first entry*/;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  if (n < pow10_cache[guess]) --guess; // We don't have any guarantees that 2^n_bits <= n.\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  *power = pow10_cache[guess];\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return guess;\n  ~~~~~~~~~~~~~         \n }\n ~                      \n \n                        \n static int round_weed(char *buffer, int len, uint64_t wp_W, uint64_t delta, uint64_t rest, uint64_t ten_kappa, uint64_t ulp)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  uint64_t wp_Wup = wp_W - ulp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint64_t wp_Wdown = wp_W + ulp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  while(rest < wp_Wup && delta - rest >= ten_kappa\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   && (rest + ten_kappa < wp_Wup || wp_Wup - rest >= rest + ten_kappa - wp_Wup))\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  {\n  ~                     \n   --buffer[len-1];\n   ~~~~~~~~~~~~~~~~     \n   rest += ten_kappa;\n   ~~~~~~~~~~~~~~~~~~   \n  }\n  ~                     \n  if (rest < wp_Wdown && delta - rest >= ten_kappa\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   && (rest + ten_kappa < wp_Wdown || wp_Wdown - rest > rest + ten_kappa - wp_Wdown))\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   return 0;\n   ~~~~~~~~~            \n \n                        \n  return 2*ulp <= rest && rest <= delta - 4*ulp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n }\n ~                      \n \n                        \n static int digit_gen(diy_fp low, diy_fp w, diy_fp high, char *buffer, int *length, int *kappa)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  uint64_t unit = 1;\n  ~~~~~~~~~~~~~~~~~~    \n  diy_fp too_low = { low.f - unit, low.e };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp too_high = { high.f + unit, high.e };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp unsafe_interval = minus(too_high, too_low);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp one = { 1ULL << -w.e, w.e };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint32_t p1 = (uint32_t)(too_high.f >> -one.e);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint64_t p2 = too_high.f & (one.f - 1);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint32_t div;\n  ~~~~~~~~~~~~~         \n  *kappa = largest_pow10(p1, DIYFP_FRACT_SIZE + one.e, &div);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  *length = 0;\n  ~~~~~~~~~~~~          \n \n                        \n  while(*kappa > 0)\n  ~~~~~~~~~~~~~~~~~     \n  {\n  ~                     \n   uint64_t rest;\n   ~~~~~~~~~~~~~~       \n   int digit = p1 / div;\n   ~~~~~~~~~~~~~~~~~~~~~\n   buffer[*length] = (char)('0' + digit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   ++*length;\n   ~~~~~~~~~~           \n   p1 %= div;\n   ~~~~~~~~~~           \n   --*kappa;\n   ~~~~~~~~~            \n   rest = ((uint64_t)p1 << -one.e) + p2;\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   if (rest < unsafe_interval.f) return round_weed(buffer, *length, minus(too_high, w).f, unsafe_interval.f, rest, (uint64_t)div << -one.e, unit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   div /= 10;\n   ~~~~~~~~~~           \n  }\n  ~                     \n \n                        \n  for(;;)\n  ~~~~~~~               \n  {\n  ~                     \n   int digit;\n   ~~~~~~~~~~           \n   p2 *= 10;\n   ~~~~~~~~~            \n   unit *= 10;\n   ~~~~~~~~~~~          \n   unsafe_interval.f *= 10;\n   ~~~~~~~~~~~~~~~~~~~~~~~~\n   // Integer division by one.\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   digit = (int)(p2 >> -one.e);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   buffer[*length] = (char)('0' + digit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   ++*length;\n   ~~~~~~~~~~           \n   p2 &= one.f - 1;  // Modulo by one.\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   --*kappa;\n   ~~~~~~~~~            \n   if (p2 < unsafe_interval.f) return round_weed(buffer, *length, minus(too_high, w).f * unit, unsafe_interval.f, p2, one.f, unit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  }\n  ~                     \n }\n ~                      \n \n                        \n static int grisu3(double v, char *buffer, int *length, int *d_exp)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int mk, kappa, success;\n  ~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp dfp = double2diy_fp(v);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp w = normalize_diy_fp(dfp);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n  // normalize boundaries\n  ~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp t = { (dfp.f << 1) + 1, dfp.e - 1 };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp b_plus = normalize_diy_fp(t);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp b_minus;\n  ~~~~~~~~~~~~~~~       \n  diy_fp c_mk; // Cached power of ten: 10^-k\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint64_t u64 = CAST_U64(v);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  assert(v > 0 && v <= 1.7976931348623157e308); // Grisu only handles strictly positive finite numbers.\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  if (!(u64 & D64_FRACT_MASK) && (u64 & D64_EXP_MASK) != 0) { b_minus.f = (dfp.f << 2) - 1; b_minus.e =  dfp.e - 2;} // lower boundary is closer?\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  else { b_minus.f = (dfp.f << 1) - 1; b_minus.e = dfp.e - 1; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  b_minus.f = b_minus.f << (b_minus.e - b_plus.e);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  b_minus.e = b_plus.e;\n  ~~~~~~~~~~~~~~~~~~~~~ \n \n                        \n  mk = cached_pow(MIN_TARGET_EXP - DIYFP_FRACT_SIZE - w.e, &c_mk);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n  w = multiply(w, c_mk);\n  ~~~~~~~~~~~~~~~~~~~~~~\n  b_minus = multiply(b_minus, c_mk);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  b_plus  = multiply(b_plus,  c_mk);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n  success = digit_gen(b_minus, w, b_plus, buffer, length, &kappa);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  *d_exp = kappa - mk;\n  ~~~~~~~~~~~~~~~~~~~~  \n  return success;\n  ~~~~~~~~~~~~~~~       \n }\n ~                      \n \n                        \n static int i_to_str(int val, char *str)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int len, i;\n  ~~~~~~~~~~~           \n  char *s;\n  ~~~~~~~~              \n  char *begin = str;\n  ~~~~~~~~~~~~~~~~~~    \n  if (val < 0) { *str++ = '-'; val = -val; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  s = str;\n  ~~~~~~~~              \n \n                        \n  for(;;)\n  ~~~~~~~               \n  {\n  ~                     \n   int ni = val / 10;\n   ~~~~~~~~~~~~~~~~~~   \n   int digit = val - ni*10;\n   ~~~~~~~~~~~~~~~~~~~~~~~~\n   *s++ = (char)('0' + digit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   if (ni == 0)\n   ~~~~~~~~~~~~         \n    break;\n    ~~~~~~              \n   val = ni;\n   ~~~~~~~~~            \n  }\n  ~                     \n  *s = '\\0';\n  ~~~~~~~~~~            \n  len = (int)(s - str);\n  ~~~~~~~~~~~~~~~~~~~~~ \n  for(i = 0; i < len/2; ++i)\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n  {\n  ~                     \n   char ch = str[i];\n   ~~~~~~~~~~~~~~~~~    \n   str[i] = str[len-1-i];\n   ~~~~~~~~~~~~~~~~~~~~~~\n   str[len-1-i] = ch;\n   ~~~~~~~~~~~~~~~~~~   \n  }\n  ~                     \n \n                        \n  return (int)(s - begin);\n  ~~~~~~~~~~~~~~~~~~~~~~~~\n }\n ~                      \n \n                        \n int dtoa_grisu3(double v, char *dst)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int d_exp, len, success, decimals, i;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint64_t u64 = CAST_U64(v);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~\ngrisu3.c:346:17: note: in expansion of macro 'CAST_U64'\n  uint64_t u64 = CAST_U64(v);\n                 ^~~~~~~~\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c guess_type.cc -o guess_type.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c iconv_file.cc -o iconv_file.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c index_collection.cc -o index_collection.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom.cc -o vroom.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_big_int.cc -o vroom_big_int.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_chr.cc -o vroom_chr.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_date.cc -o vroom_date.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_dbl.cc -o vroom_dbl.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_dttm.cc -o vroom_dttm.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_errors.cpp -o vroom_errors.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_fct.cc -o vroom_fct.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_fwf.cc -o vroom_fwf.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_int.cc -o vroom_int.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_num.cc -o vroom_num.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_rle.cc -o vroom_rle.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_time.cc -o vroom_time.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_write.cc -o vroom_write.o\n"]
[1,"C:/rtools40/mingw32/bin/g++ -std=gnu++11 -shared -s -static-libgcc -o vroom.dll tmp.def Iconv.o LocaleInfo.o altrep.o cpp11.o delimited_index.o delimited_index_connection.o fixed_width_index_connection.o gen.o grisu3.o guess_type.o iconv_file.o index_collection.o vroom.o vroom_big_int.o vroom_chr.o vroom_date.o vroom_dbl.o vroom_dttm.o vroom_errors.o vroom_fct.o vroom_fwf.o vroom_int.o vroom_num.o vroom_rle.o vroom_time.o vroom_write.o -LC:/PROGRA~1/R/R-40~1.5/bin/i386 -lR\n"]
[2,"installing to C:/Users/menken/Documents/R/win-library/4.0/00LOCK-vroom/00new/vroom/libs/i386\r\n\r\n*** arch - x64\r\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c Iconv.cpp -o Iconv.o\n"]
[2,"In file included from Iconv.cpp:2:\nC:/Users/menken/Documents/R/win-library/4.0/cpp11/include/cpp11/protect.hpp:324:3: warning: 'cpp11::preserved' defined but not used [-Wunused-variable]\n } preserved;\n   ^~~~~~~~~\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c LocaleInfo.cpp -o LocaleInfo.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c altrep.cc -o altrep.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c cpp11.cpp -o cpp11.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c delimited_index.cc -o delimited_index.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c delimited_index_connection.cc -o delimited_index_connection.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c fixed_width_index_connection.cc -o fixed_width_index_connection.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c gen.cc -o gen.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"gcc  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -std=gnu99 -mfpmath=sse -msse2 -mstackrealign -c grisu3.c -o grisu3.o\n"]
[2,"grisu3.c: In function 'double2diy_fp':\ngrisu3.c:57:23: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]\n #define CAST_U64(d) (*(uint64_t*)&d)\n                       ^~~~~~~~~~~~~~\n #define MIN(x,y) ((x) <= (y) ? (x) : (y))\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n #define MAX(x,y) ((x) >= (y) ? (x) : (y))\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n #define MIN_CACHED_EXP -348\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n #define CACHED_EXP_STEP 8\n ~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n typedef struct diy_fp\n ~~~~~~~~~~~~~~~~~~~~~  \n {\n ~                      \n  uint64_t f;\n  ~~~~~~~~~~~           \n  int e;\n  ~~~~~~                \n } diy_fp;\n ~~~~~~~~~              \n \n                        \n typedef struct power\n ~~~~~~~~~~~~~~~~~~~~   \n {\n ~                      \n  uint64_t fract;\n  ~~~~~~~~~~~~~~~       \n  int16_t b_exp, d_exp;\n  ~~~~~~~~~~~~~~~~~~~~~ \n } power;\n ~~~~~~~~               \n \n                        \n static const power pow_cache[] =\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  { 0xfa8fd5a0081c0288ULL, -1220, -348 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbaaee17fa23ebf76ULL, -1193, -340 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8b16fb203055ac76ULL, -1166, -332 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcf42894a5dce35eaULL, -1140, -324 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9a6bb0aa55653b2dULL, -1113, -316 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe61acf033d1a45dfULL, -1087, -308 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xab70fe17c79ac6caULL, -1060, -300 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xff77b1fcbebcdc4fULL, -1034, -292 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbe5691ef416bd60cULL, -1007, -284 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8dd01fad907ffc3cULL,  -980, -276 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd3515c2831559a83ULL,  -954, -268 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9d71ac8fada6c9b5ULL,  -927, -260 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xea9c227723ee8bcbULL,  -901, -252 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaecc49914078536dULL,  -874, -244 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x823c12795db6ce57ULL,  -847, -236 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc21094364dfb5637ULL,  -821, -228 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9096ea6f3848984fULL,  -794, -220 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd77485cb25823ac7ULL,  -768, -212 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa086cfcd97bf97f4ULL,  -741, -204 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xef340a98172aace5ULL,  -715, -196 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb23867fb2a35b28eULL,  -688, -188 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x84c8d4dfd2c63f3bULL,  -661, -180 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc5dd44271ad3cdbaULL,  -635, -172 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x936b9fcebb25c996ULL,  -608, -164 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xdbac6c247d62a584ULL,  -582, -156 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa3ab66580d5fdaf6ULL,  -555, -148 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf3e2f893dec3f126ULL,  -529, -140 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb5b5ada8aaff80b8ULL,  -502, -132 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x87625f056c7c4a8bULL,  -475, -124 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc9bcff6034c13053ULL,  -449, -116 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x964e858c91ba2655ULL,  -422, -108 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xdff9772470297ebdULL,  -396, -100 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa6dfbd9fb8e5b88fULL,  -369,  -92 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf8a95fcf88747d94ULL,  -343,  -84 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb94470938fa89bcfULL,  -316,  -76 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8a08f0f8bf0f156bULL,  -289,  -68 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcdb02555653131b6ULL,  -263,  -60 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x993fe2c6d07b7facULL,  -236,  -52 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe45c10c42a2b3b06ULL,  -210,  -44 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaa242499697392d3ULL,  -183,  -36 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xfd87b5f28300ca0eULL,  -157,  -28 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbce5086492111aebULL,  -130,  -20 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8cbccc096f5088ccULL,  -103,  -12 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd1b71758e219652cULL,   -77,   -4 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9c40000000000000ULL,   -50,    4 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe8d4a51000000000ULL,   -24,   12 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xad78ebc5ac620000ULL,     3,   20 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x813f3978f8940984ULL,    30,   28 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc097ce7bc90715b3ULL,    56,   36 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8f7e32ce7bea5c70ULL,    83,   44 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd5d238a4abe98068ULL,   109,   52 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9f4f2726179a2245ULL,   136,   60 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xed63a231d4c4fb27ULL,   162,   68 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb0de65388cc8ada8ULL,   189,   76 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x83c7088e1aab65dbULL,   216,   84 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc45d1df942711d9aULL,   242,   92 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x924d692ca61be758ULL,   269,  100 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xda01ee641a708deaULL,   295,  108 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa26da3999aef774aULL,   322,  116 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf209787bb47d6b85ULL,   348,  124 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb454e4a179dd1877ULL,   375,  132 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x865b86925b9bc5c2ULL,   402,  140 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc83553c5c8965d3dULL,   428,  148 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x952ab45cfa97a0b3ULL,   455,  156 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xde469fbd99a05fe3ULL,   481,  164 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa59bc234db398c25ULL,   508,  172 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf6c69a72a3989f5cULL,   534,  180 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb7dcbf5354e9beceULL,   561,  188 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x88fcf317f22241e2ULL,   588,  196 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcc20ce9bd35c78a5ULL,   614,  204 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x98165af37b2153dfULL,   641,  212 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe2a0b5dc971f303aULL,   667,  220 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa8d9d1535ce3b396ULL,   694,  228 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xfb9b7cd9a4a7443cULL,   720,  236 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbb764c4ca7a44410ULL,   747,  244 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8bab8eefb6409c1aULL,   774,  252 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd01fef10a657842cULL,   800,  260 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9b10a4e5e9913129ULL,   827,  268 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe7109bfba19c0c9dULL,   853,  276 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xac2820d9623bf429ULL,   880,  284 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x80444b5e7aa7cf85ULL,   907,  292 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbf21e44003acdd2dULL,   933,  300 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8e679c2f5e44ff8fULL,   960,  308 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd433179d9c8cb841ULL,   986,  316 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9e19db92b4e31ba9ULL,  1013,  324 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xeb96bf6ebadf77d9ULL,  1039,  332 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaf87023b9bf0ee6bULL,  1066,  340 }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n };\n ~~                     \n \n                        \n static int cached_pow(int exp, diy_fp *p)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int k = (int)ceil((exp+DIYFP_FRACT_SIZE-1) * D_1_LOG2_10);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  int i = (k-MIN_CACHED_EXP-1) / CACHED_EXP_STEP + 1;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  p->f = pow_cache[i].fract;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n  p->e = pow_cache[i].b_exp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return pow_cache[i].d_exp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n }\n ~                      \n \n                        \n static diy_fp minus(diy_fp x, diy_fp y)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  diy_fp d; d.f = x.f - y.f; d.e = x.e;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  assert(x.e == y.e && x.f >= y.f);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return d;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp multiply(diy_fp x, diy_fp y)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  uint64_t a, b, c, d, ac, bc, ad, bd, tmp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp r;\n  ~~~~~~~~~             \n  a = x.f >> 32; b = x.f & MASK32;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  c = y.f >> 32; d = y.f & MASK32;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  ac = a*c; bc = b*c;\n  ~~~~~~~~~~~~~~~~~~~   \n  ad = a*d; bd = b*d;\n  ~~~~~~~~~~~~~~~~~~~   \n  tmp = (bd >> 32) + (ad & MASK32) + (bc & MASK32);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  tmp += 1U << 31; // round\n  ~~~~~~~~~~~~~~~~~~~~~~~~~\n  r.f = ac + (ad >> 32) + (bc >> 32) + (tmp >> 32);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  r.e = x.e + y.e + 64;\n  ~~~~~~~~~~~~~~~~~~~~~ \n  return r;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp normalize_diy_fp(diy_fp n)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  assert(n.f != 0);\n  ~~~~~~~~~~~~~~~~~     \n  while(!(n.f & 0xFFC0000000000000ULL)) { n.f <<= 10; n.e -= 10; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  while(!(n.f & D64_SIGN)) { n.f <<= 1; --n.e; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return n;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp double2diy_fp(double d)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  diy_fp fp;\n  ~~~~~~~~~~            \n  uint64_t u64 = CAST_U64(d);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~\ngrisu3.c:209:17: note: in expansion of macro 'CAST_U64'\n  uint64_t u64 = CAST_U64(d);\n                 ^~~~~~~~\n"]
[2,"grisu3.c: In function 'grisu3':\n"]
[2,"grisu3.c:57:23: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]\n #define CAST_U64(d) (*(uint64_t*)&d)\n                       ^~~~~~~~~~~~~~\n #define MIN(x,y) ((x) <= (y) ? (x) : (y))\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n #define MAX(x,y) ((x) >= (y) ? (x) : (y))\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n #define MIN_CACHED_EXP -348\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n #define CACHED_EXP_STEP 8\n ~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n typedef struct diy_fp\n ~~~~~~~~~~~~~~~~~~~~~  \n {\n ~                      \n  uint64_t f;\n  ~~~~~~~~~~~           \n  int e;\n  ~~~~~~                \n } diy_fp;\n ~~~~~~~~~              \n \n                        \n typedef struct power\n ~~~~~~~~~~~~~~~~~~~~   \n {\n ~                      \n  uint64_t fract;\n  ~~~~~~~~~~~~~~~       \n  int16_t b_exp, d_exp;\n  ~~~~~~~~~~~~~~~~~~~~~ \n } power;\n ~~~~~~~~               \n \n                        \n static const power pow_cache[] =\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  { 0xfa8fd5a0081c0288ULL, -1220, -348 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbaaee17fa23ebf76ULL, -1193, -340 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8b16fb203055ac76ULL, -1166, -332 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcf42894a5dce35eaULL, -1140, -324 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9a6bb0aa55653b2dULL, -1113, -316 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe61acf033d1a45dfULL, -1087, -308 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xab70fe17c79ac6caULL, -1060, -300 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xff77b1fcbebcdc4fULL, -1034, -292 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbe5691ef416bd60cULL, -1007, -284 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8dd01fad907ffc3cULL,  -980, -276 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd3515c2831559a83ULL,  -954, -268 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9d71ac8fada6c9b5ULL,  -927, -260 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xea9c227723ee8bcbULL,  -901, -252 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaecc49914078536dULL,  -874, -244 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x823c12795db6ce57ULL,  -847, -236 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc21094364dfb5637ULL,  -821, -228 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9096ea6f3848984fULL,  -794, -220 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd77485cb25823ac7ULL,  -768, -212 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa086cfcd97bf97f4ULL,  -741, -204 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xef340a98172aace5ULL,  -715, -196 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb23867fb2a35b28eULL,  -688, -188 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x84c8d4dfd2c63f3bULL,  -661, -180 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc5dd44271ad3cdbaULL,  -635, -172 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x936b9fcebb25c996ULL,  -608, -164 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xdbac6c247d62a584ULL,  -582, -156 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa3ab66580d5fdaf6ULL,  -555, -148 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf3e2f893dec3f126ULL,  -529, -140 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb5b5ada8aaff80b8ULL,  -502, -132 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x87625f056c7c4a8bULL,  -475, -124 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc9bcff6034c13053ULL,  -449, -116 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x964e858c91ba2655ULL,  -422, -108 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xdff9772470297ebdULL,  -396, -100 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa6dfbd9fb8e5b88fULL,  -369,  -92 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf8a95fcf88747d94ULL,  -343,  -84 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb94470938fa89bcfULL,  -316,  -76 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8a08f0f8bf0f156bULL,  -289,  -68 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcdb02555653131b6ULL,  -263,  -60 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x993fe2c6d07b7facULL,  -236,  -52 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe45c10c42a2b3b06ULL,  -210,  -44 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaa242499697392d3ULL,  -183,  -36 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xfd87b5f28300ca0eULL,  -157,  -28 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbce5086492111aebULL,  -130,  -20 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8cbccc096f5088ccULL,  -103,  -12 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd1b71758e219652cULL,   -77,   -4 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9c40000000000000ULL,   -50,    4 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe8d4a51000000000ULL,   -24,   12 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xad78ebc5ac620000ULL,     3,   20 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x813f3978f8940984ULL,    30,   28 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc097ce7bc90715b3ULL,    56,   36 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8f7e32ce7bea5c70ULL,    83,   44 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd5d238a4abe98068ULL,   109,   52 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9f4f2726179a2245ULL,   136,   60 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xed63a231d4c4fb27ULL,   162,   68 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb0de65388cc8ada8ULL,   189,   76 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x83c7088e1aab65dbULL,   216,   84 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc45d1df942711d9aULL,   242,   92 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x924d692ca61be758ULL,   269,  100 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xda01ee641a708deaULL,   295,  108 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa26da3999aef774aULL,   322,  116 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf209787bb47d6b85ULL,   348,  124 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb454e4a179dd1877ULL,   375,  132 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x865b86925b9bc5c2ULL,   402,  140 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc83553c5c8965d3dULL,   428,  148 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x952ab45cfa97a0b3ULL,   455,  156 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xde469fbd99a05fe3ULL,   481,  164 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa59bc234db398c25ULL,   508,  172 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf6c69a72a3989f5cULL,   534,  180 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb7dcbf5354e9beceULL,   561,  188 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x88fcf317f22241e2ULL,   588,  196 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcc20ce9bd35c78a5ULL,   614,  204 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x98165af37b2153dfULL,   641,  212 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe2a0b5dc971f303aULL,   667,  220 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa8d9d1535ce3b396ULL,   694,  228 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xfb9b7cd9a4a7443cULL,   720,  236 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbb764c4ca7a44410ULL,   747,  244 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8bab8eefb6409c1aULL,   774,  252 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd01fef10a657842cULL,   800,  260 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9b10a4e5e9913129ULL,   827,  268 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe7109bfba19c0c9dULL,   853,  276 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xac2820d9623bf429ULL,   880,  284 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x80444b5e7aa7cf85ULL,   907,  292 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbf21e44003acdd2dULL,   933,  300 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8e679c2f5e44ff8fULL,   960,  308 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd433179d9c8cb841ULL,   986,  316 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9e19db92b4e31ba9ULL,  1013,  324 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xeb96bf6ebadf77d9ULL,  1039,  332 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaf87023b9bf0ee6bULL,  1066,  340 }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n };\n ~~                     \n \n                        \n static int cached_pow(int exp, diy_fp *p)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int k = (int)ceil((exp+DIYFP_FRACT_SIZE-1) * D_1_LOG2_10);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  int i = (k-MIN_CACHED_EXP-1) / CACHED_EXP_STEP + 1;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  p->f = pow_cache[i].fract;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n  p->e = pow_cache[i].b_exp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return pow_cache[i].d_exp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n }\n ~                      \n \n                        \n static diy_fp minus(diy_fp x, diy_fp y)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  diy_fp d; d.f = x.f - y.f; d.e = x.e;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  assert(x.e == y.e && x.f >= y.f);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return d;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp multiply(diy_fp x, diy_fp y)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  uint64_t a, b, c, d, ac, bc, ad, bd, tmp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp r;\n  ~~~~~~~~~             \n  a = x.f >> 32; b = x.f & MASK32;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  c = y.f >> 32; d = y.f & MASK32;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  ac = a*c; bc = b*c;\n  ~~~~~~~~~~~~~~~~~~~   \n  ad = a*d; bd = b*d;\n  ~~~~~~~~~~~~~~~~~~~   \n  tmp = (bd >> 32) + (ad & MASK32) + (bc & MASK32);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  tmp += 1U << 31; // round\n  ~~~~~~~~~~~~~~~~~~~~~~~~~\n  r.f = ac + (ad >> 32) + (bc >> 32) + (tmp >> 32);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  r.e = x.e + y.e + 64;\n  ~~~~~~~~~~~~~~~~~~~~~ \n  return r;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp normalize_diy_fp(diy_fp n)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  assert(n.f != 0);\n  ~~~~~~~~~~~~~~~~~     \n  while(!(n.f & 0xFFC0000000000000ULL)) { n.f <<= 10; n.e -= 10; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  while(!(n.f & D64_SIGN)) { n.f <<= 1; --n.e; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return n;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp double2diy_fp(double d)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  diy_fp fp;\n  ~~~~~~~~~~            \n  uint64_t u64 = CAST_U64(d);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  if (!(u64 & D64_EXP_MASK)) { fp.f = u64 & D64_FRACT_MASK; fp.e = 1 - D64_EXP_BIAS; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  else { fp.f = (u64 & D64_FRACT_MASK) + D64_IMPLICIT_ONE; fp.e = (int)((u64 & D64_EXP_MASK) >> D64_EXP_POS) - D64_EXP_BIAS; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return fp;\n  ~~~~~~~~~~            \n }\n ~                      \n \n                        \n // pow10_cache[i] = 10^(i-1)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n static const unsigned int pow10_cache[] = { 0, 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000 };\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n static int largest_pow10(uint32_t n, int n_bits, uint32_t *power)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int guess = ((n_bits + 1) * 1233 >> 12) + 1/*skip first entry*/;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  if (n < pow10_cache[guess]) --guess; // We don't have any guarantees that 2^n_bits <= n.\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  *power = pow10_cache[guess];\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return guess;\n  ~~~~~~~~~~~~~         \n }\n ~                      \n \n                        \n static int round_weed(char *buffer, int len, uint64_t wp_W, uint64_t delta, uint64_t rest, uint64_t ten_kappa, uint64_t ulp)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  uint64_t wp_Wup = wp_W - ulp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint64_t wp_Wdown = wp_W + ulp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  while(rest < wp_Wup && delta - rest >= ten_kappa\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   && (rest + ten_kappa < wp_Wup || wp_Wup - rest >= rest + ten_kappa - wp_Wup))\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  {\n  ~                     \n   --buffer[len-1];\n   ~~~~~~~~~~~~~~~~     \n   rest += ten_kappa;\n   ~~~~~~~~~~~~~~~~~~   \n  }\n  ~                     \n  if (rest < wp_Wdown && delta - rest >= ten_kappa\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   && (rest + ten_kappa < wp_Wdown || wp_Wdown - rest > rest + ten_kappa - wp_Wdown))\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   return 0;\n   ~~~~~~~~~            \n \n                        \n  return 2*ulp <= rest && rest <= delta - 4*ulp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n }\n ~                      \n \n                        \n static int digit_gen(diy_fp low, diy_fp w, diy_fp high, char *buffer, int *length, int *kappa)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  uint64_t unit = 1;\n  ~~~~~~~~~~~~~~~~~~    \n  diy_fp too_low = { low.f - unit, low.e };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp too_high = { high.f + unit, high.e };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp unsafe_interval = minus(too_high, too_low);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp one = { 1ULL << -w.e, w.e };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint32_t p1 = (uint32_t)(too_high.f >> -one.e);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint64_t p2 = too_high.f & (one.f - 1);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint32_t div;\n  ~~~~~~~~~~~~~         \n  *kappa = largest_pow10(p1, DIYFP_FRACT_SIZE + one.e, &div);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  *length = 0;\n  ~~~~~~~~~~~~          \n \n                        \n  while(*kappa > 0)\n  ~~~~~~~~~~~~~~~~~     \n  {\n  ~                     \n   uint64_t rest;\n   ~~~~~~~~~~~~~~       \n   int digit = p1 / div;\n   ~~~~~~~~~~~~~~~~~~~~~\n   buffer[*length] = (char)('0' + digit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   ++*length;\n   ~~~~~~~~~~           \n   p1 %= div;\n   ~~~~~~~~~~           \n   --*kappa;\n   ~~~~~~~~~            \n   rest = ((uint64_t)p1 << -one.e) + p2;\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   if (rest < unsafe_interval.f) return round_weed(buffer, *length, minus(too_high, w).f, unsafe_interval.f, rest, (uint64_t)div << -one.e, unit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   div /= 10;\n   ~~~~~~~~~~           \n  }\n  ~                     \n \n                        \n  for(;;)\n  ~~~~~~~               \n  {\n  ~                     \n   int digit;\n   ~~~~~~~~~~           \n   p2 *= 10;\n   ~~~~~~~~~            \n   unit *= 10;\n   ~~~~~~~~~~~          \n   unsafe_interval.f *= 10;\n   ~~~~~~~~~~~~~~~~~~~~~~~~\n   // Integer division by one.\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   digit = (int)(p2 >> -one.e);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   buffer[*length] = (char)('0' + digit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   ++*length;\n   ~~~~~~~~~~           \n   p2 &= one.f - 1;  // Modulo by one.\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   --*kappa;\n   ~~~~~~~~~            \n   if (p2 < unsafe_interval.f) return round_weed(buffer, *length, minus(too_high, w).f * unit, unsafe_interval.f, p2, one.f, unit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  }\n  ~                     \n }\n ~                      \n \n                        \n static int grisu3(double v, char *buffer, int *length, int *d_exp)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int mk, kappa, success;\n  ~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp dfp = double2diy_fp(v);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp w = normalize_diy_fp(dfp);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n  // normalize boundaries\n  ~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp t = { (dfp.f << 1) + 1, dfp.e - 1 };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp b_plus = normalize_diy_fp(t);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp b_minus;\n  ~~~~~~~~~~~~~~~       \n  diy_fp c_mk; // Cached power of ten: 10^-k\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint64_t u64 = CAST_U64(v);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~\ngrisu3.c:296:17: note: in expansion of macro 'CAST_U64'\n  uint64_t u64 = CAST_U64(v);\n                 ^~~~~~~~\n"]
[2,"grisu3.c: In function 'dtoa_grisu3':\ngrisu3.c:57:23: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]\n #define CAST_U64(d) (*(uint64_t*)&d)\n                       ^~~~~~~~~~~~~~\n #define MIN(x,y) ((x) <= (y) ? (x) : (y))\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n #define MAX(x,y) ((x) >= (y) ? (x) : (y))\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n #define MIN_CACHED_EXP -348\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n #define CACHED_EXP_STEP 8\n ~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n typedef struct diy_fp\n ~~~~~~~~~~~~~~~~~~~~~  \n {\n ~                      \n  uint64_t f;\n  ~~~~~~~~~~~           \n  int e;\n  ~~~~~~                \n } diy_fp;\n ~~~~~~~~~              \n \n                        \n typedef struct power\n ~~~~~~~~~~~~~~~~~~~~   \n {\n ~                      \n  uint64_t fract;\n  ~~~~~~~~~~~~~~~       \n  int16_t b_exp, d_exp;\n  ~~~~~~~~~~~~~~~~~~~~~ \n } power;\n ~~~~~~~~               \n \n                        \n static const power pow_cache[] =\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  { 0xfa8fd5a0081c0288ULL, -1220, -348 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbaaee17fa23ebf76ULL, -1193, -340 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8b16fb203055ac76ULL, -1166, -332 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcf42894a5dce35eaULL, -1140, -324 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9a6bb0aa55653b2dULL, -1113, -316 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe61acf033d1a45dfULL, -1087, -308 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xab70fe17c79ac6caULL, -1060, -300 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xff77b1fcbebcdc4fULL, -1034, -292 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbe5691ef416bd60cULL, -1007, -284 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8dd01fad907ffc3cULL,  -980, -276 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd3515c2831559a83ULL,  -954, -268 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9d71ac8fada6c9b5ULL,  -927, -260 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xea9c227723ee8bcbULL,  -901, -252 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaecc49914078536dULL,  -874, -244 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x823c12795db6ce57ULL,  -847, -236 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc21094364dfb5637ULL,  -821, -228 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9096ea6f3848984fULL,  -794, -220 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd77485cb25823ac7ULL,  -768, -212 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa086cfcd97bf97f4ULL,  -741, -204 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xef340a98172aace5ULL,  -715, -196 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb23867fb2a35b28eULL,  -688, -188 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x84c8d4dfd2c63f3bULL,  -661, -180 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc5dd44271ad3cdbaULL,  -635, -172 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x936b9fcebb25c996ULL,  -608, -164 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xdbac6c247d62a584ULL,  -582, -156 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa3ab66580d5fdaf6ULL,  -555, -148 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf3e2f893dec3f126ULL,  -529, -140 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb5b5ada8aaff80b8ULL,  -502, -132 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x87625f056c7c4a8bULL,  -475, -124 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc9bcff6034c13053ULL,  -449, -116 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x964e858c91ba2655ULL,  -422, -108 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xdff9772470297ebdULL,  -396, -100 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa6dfbd9fb8e5b88fULL,  -369,  -92 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf8a95fcf88747d94ULL,  -343,  -84 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb94470938fa89bcfULL,  -316,  -76 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8a08f0f8bf0f156bULL,  -289,  -68 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcdb02555653131b6ULL,  -263,  -60 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x993fe2c6d07b7facULL,  -236,  -52 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe45c10c42a2b3b06ULL,  -210,  -44 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaa242499697392d3ULL,  -183,  -36 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xfd87b5f28300ca0eULL,  -157,  -28 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbce5086492111aebULL,  -130,  -20 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8cbccc096f5088ccULL,  -103,  -12 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd1b71758e219652cULL,   -77,   -4 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9c40000000000000ULL,   -50,    4 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe8d4a51000000000ULL,   -24,   12 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xad78ebc5ac620000ULL,     3,   20 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x813f3978f8940984ULL,    30,   28 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc097ce7bc90715b3ULL,    56,   36 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8f7e32ce7bea5c70ULL,    83,   44 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd5d238a4abe98068ULL,   109,   52 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9f4f2726179a2245ULL,   136,   60 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xed63a231d4c4fb27ULL,   162,   68 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb0de65388cc8ada8ULL,   189,   76 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x83c7088e1aab65dbULL,   216,   84 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc45d1df942711d9aULL,   242,   92 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x924d692ca61be758ULL,   269,  100 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xda01ee641a708deaULL,   295,  108 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa26da3999aef774aULL,   322,  116 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf209787bb47d6b85ULL,   348,  124 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb454e4a179dd1877ULL,   375,  132 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x865b86925b9bc5c2ULL,   402,  140 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc83553c5c8965d3dULL,   428,  148 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x952ab45cfa97a0b3ULL,   455,  156 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xde469fbd99a05fe3ULL,   481,  164 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa59bc234db398c25ULL,   508,  172 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf6c69a72a3989f5cULL,   534,  180 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb7dcbf5354e9beceULL,   561,  188 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x88fcf317f22241e2ULL,   588,  196 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcc20ce9bd35c78a5ULL,   614,  204 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x98165af37b2153dfULL,   641,  212 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe2a0b5dc971f303aULL,   667,  220 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa8d9d1535ce3b396ULL,   694,  228 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xfb9b7cd9a4a7443cULL,   720,  236 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbb764c4ca7a44410ULL,   747,  244 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8bab8eefb6409c1aULL,   774,  252 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd01fef10a657842cULL,   800,  260 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9b10a4e5e9913129ULL,   827,  268 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe7109bfba19c0c9dULL,   853,  276 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xac2820d9623bf429ULL,   880,  284 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x80444b5e7aa7cf85ULL,   907,  292 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbf21e44003acdd2dULL,   933,  300 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8e679c2f5e44ff8fULL,   960,  308 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd433179d9c8cb841ULL,   986,  316 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9e19db92b4e31ba9ULL,  1013,  324 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xeb96bf6ebadf77d9ULL,  1039,  332 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaf87023b9bf0ee6bULL,  1066,  340 }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n };\n ~~                     \n \n                        \n static int cached_pow(int exp, diy_fp *p)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int k = (int)ceil((exp+DIYFP_FRACT_SIZE-1) * D_1_LOG2_10);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  int i = (k-MIN_CACHED_EXP-1) / CACHED_EXP_STEP + 1;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  p->f = pow_cache[i].fract;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n  p->e = pow_cache[i].b_exp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return pow_cache[i].d_exp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n }\n ~                      \n \n                        \n static diy_fp minus(diy_fp x, diy_fp y)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  diy_fp d; d.f = x.f - y.f; d.e = x.e;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  assert(x.e == y.e && x.f >= y.f);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return d;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp multiply(diy_fp x, diy_fp y)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  uint64_t a, b, c, d, ac, bc, ad, bd, tmp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp r;\n  ~~~~~~~~~             \n  a = x.f >> 32; b = x.f & MASK32;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  c = y.f >> 32; d = y.f & MASK32;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  ac = a*c; bc = b*c;\n  ~~~~~~~~~~~~~~~~~~~   \n  ad = a*d; bd = b*d;\n  ~~~~~~~~~~~~~~~~~~~   \n  tmp = (bd >> 32) + (ad & MASK32) + (bc & MASK32);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  tmp += 1U << 31; // round\n  ~~~~~~~~~~~~~~~~~~~~~~~~~\n  r.f = ac + (ad >> 32) + (bc >> 32) + (tmp >> 32);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  r.e = x.e + y.e + 64;\n  ~~~~~~~~~~~~~~~~~~~~~ \n  return r;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp normalize_diy_fp(diy_fp n)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  assert(n.f != 0);\n  ~~~~~~~~~~~~~~~~~     \n  while(!(n.f & 0xFFC0000000000000ULL)) { n.f <<= 10; n.e -= 10; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  while(!(n.f & D64_SIGN)) { n.f <<= 1; --n.e; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return n;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp double2diy_fp(double d)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  diy_fp fp;\n  ~~~~~~~~~~            \n  uint64_t u64 = CAST_U64(d);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  if (!(u64 & D64_EXP_MASK)) { fp.f = u64 & D64_FRACT_MASK; fp.e = 1 - D64_EXP_BIAS; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  else { fp.f = (u64 & D64_FRACT_MASK) + D64_IMPLICIT_ONE; fp.e = (int)((u64 & D64_EXP_MASK) >> D64_EXP_POS) - D64_EXP_BIAS; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return fp;\n  ~~~~~~~~~~            \n }\n ~                      \n \n                        \n // pow10_cache[i] = 10^(i-1)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n static const unsigned int pow10_cache[] = { 0, 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000 };\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n static int largest_pow10(uint32_t n, int n_bits, uint32_t *power)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int guess = ((n_bits + 1) * 1233 >> 12) + 1/*skip first entry*/;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  if (n < pow10_cache[guess]) --guess; // We don't have any guarantees that 2^n_bits <= n.\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  *power = pow10_cache[guess];\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return guess;\n  ~~~~~~~~~~~~~         \n }\n ~                      \n \n                        \n static int round_weed(char *buffer, int len, uint64_t wp_W, uint64_t delta, uint64_t rest, uint64_t ten_kappa, uint64_t ulp)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  uint64_t wp_Wup = wp_W - ulp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint64_t wp_Wdown = wp_W + ulp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  while(rest < wp_Wup && delta - rest >= ten_kappa\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   && (rest + ten_kappa < wp_Wup || wp_Wup - rest >= rest + ten_kappa - wp_Wup))\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  {\n  ~                     \n   --buffer[len-1];\n   ~~~~~~~~~~~~~~~~     \n   rest += ten_kappa;\n   ~~~~~~~~~~~~~~~~~~   \n  }\n  ~                     \n  if (rest < wp_Wdown && delta - rest >= ten_kappa\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   && (rest + ten_kappa < wp_Wdown || wp_Wdown - rest > rest + ten_kappa - wp_Wdown))\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   return 0;\n   ~~~~~~~~~            \n \n                        \n  return 2*ulp <= rest && rest <= delta - 4*ulp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n }\n ~                      \n \n                        \n static int digit_gen(diy_fp low, diy_fp w, diy_fp high, char *buffer, int *length, int *kappa)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  uint64_t unit = 1;\n  ~~~~~~~~~~~~~~~~~~    \n  diy_fp too_low = { low.f - unit, low.e };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp too_high = { high.f + unit, high.e };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp unsafe_interval = minus(too_high, too_low);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp one = { 1ULL << -w.e, w.e };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint32_t p1 = (uint32_t)(too_high.f >> -one.e);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint64_t p2 = too_high.f & (one.f - 1);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint32_t div;\n  ~~~~~~~~~~~~~         \n  *kappa = largest_pow10(p1, DIYFP_FRACT_SIZE + one.e, &div);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  *length = 0;\n  ~~~~~~~~~~~~          \n \n                        \n  while(*kappa > 0)\n  ~~~~~~~~~~~~~~~~~     \n  {\n  ~                     \n   uint64_t rest;\n   ~~~~~~~~~~~~~~       \n   int digit = p1 / div;\n   ~~~~~~~~~~~~~~~~~~~~~\n   buffer[*length] = (char)('0' + digit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   ++*length;\n   ~~~~~~~~~~           \n   p1 %= div;\n   ~~~~~~~~~~           \n   --*kappa;\n   ~~~~~~~~~            \n   rest = ((uint64_t)p1 << -one.e) + p2;\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   if (rest < unsafe_interval.f) return round_weed(buffer, *length, minus(too_high, w).f, unsafe_interval.f, rest, (uint64_t)div << -one.e, unit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   div /= 10;\n   ~~~~~~~~~~           \n  }\n  ~                     \n \n                        \n  for(;;)\n  ~~~~~~~               \n  {\n  ~                     \n   int digit;\n   ~~~~~~~~~~           \n   p2 *= 10;\n   ~~~~~~~~~            \n   unit *= 10;\n   ~~~~~~~~~~~          \n   unsafe_interval.f *= 10;\n   ~~~~~~~~~~~~~~~~~~~~~~~~\n   // Integer division by one.\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   digit = (int)(p2 >> -one.e);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   buffer[*length] = (char)('0' + digit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   ++*length;\n   ~~~~~~~~~~           \n   p2 &= one.f - 1;  // Modulo by one.\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   --*kappa;\n   ~~~~~~~~~            \n   if (p2 < unsafe_interval.f) return round_weed(buffer, *length, minus(too_high, w).f * unit, unsafe_interval.f, p2, one.f, unit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  }\n  ~                     \n }\n ~                      \n \n                        \n static int grisu3(double v, char *buffer, int *length, int *d_exp)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int mk, kappa, success;\n  ~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp dfp = double2diy_fp(v);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp w = normalize_diy_fp(dfp);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n  // normalize boundaries\n  ~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp t = { (dfp.f << 1) + 1, dfp.e - 1 };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp b_plus = normalize_diy_fp(t);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp b_minus;\n  ~~~~~~~~~~~~~~~       \n  diy_fp c_mk; // Cached power of ten: 10^-k\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint64_t u64 = CAST_U64(v);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  assert(v > 0 && v <= 1.7976931348623157e308); // Grisu only handles strictly positive finite numbers.\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  if (!(u64 & D64_FRACT_MASK) && (u64 & D64_EXP_MASK) != 0) { b_minus.f = (dfp.f << 2) - 1; b_minus.e =  dfp.e - 2;} // lower boundary is closer?\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  else { b_minus.f = (dfp.f << 1) - 1; b_minus.e = dfp.e - 1; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  b_minus.f = b_minus.f << (b_minus.e - b_plus.e);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  b_minus.e = b_plus.e;\n  ~~~~~~~~~~~~~~~~~~~~~ \n \n                        \n  mk = cached_pow(MIN_TARGET_EXP - DIYFP_FRACT_SIZE - w.e, &c_mk);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n  w = multiply(w, c_mk);\n  ~~~~~~~~~~~~~~~~~~~~~~\n  b_minus = multiply(b_minus, c_mk);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  b_plus  = multiply(b_plus,  c_mk);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n  success = digit_gen(b_minus, w, b_plus, buffer, length, &kappa);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  *d_exp = kappa - mk;\n  ~~~~~~~~~~~~~~~~~~~~  \n  return success;\n  ~~~~~~~~~~~~~~~       \n }\n ~                      \n \n                        \n static int i_to_str(int val, char *str)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int len, i;\n  ~~~~~~~~~~~           \n  char *s;\n  ~~~~~~~~              \n  char *begin = str;\n  ~~~~~~~~~~~~~~~~~~    \n  if (val < 0) { *str++ = '-'; val = -val; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  s = str;\n  ~~~~~~~~              \n \n                        \n  for(;;)\n  ~~~~~~~               \n  {\n  ~                     \n   int ni = val / 10;\n   ~~~~~~~~~~~~~~~~~~   \n   int digit = val - ni*10;\n   ~~~~~~~~~~~~~~~~~~~~~~~~\n   *s++ = (char)('0' + digit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   if (ni == 0)\n   ~~~~~~~~~~~~         \n    break;\n    ~~~~~~              \n   val = ni;\n   ~~~~~~~~~            \n  }\n  ~                     \n  *s = '\\0';\n  ~~~~~~~~~~            \n  len = (int)(s - str);\n  ~~~~~~~~~~~~~~~~~~~~~ \n  for(i = 0; i < len/2; ++i)\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n  {\n  ~                     \n   char ch = str[i];\n   ~~~~~~~~~~~~~~~~~    \n   str[i] = str[len-1-i];\n   ~~~~~~~~~~~~~~~~~~~~~~\n   str[len-1-i] = ch;\n   ~~~~~~~~~~~~~~~~~~   \n  }\n  ~                     \n \n                        \n  return (int)(s - begin);\n  ~~~~~~~~~~~~~~~~~~~~~~~~\n }\n ~                      \n \n                        \n int dtoa_grisu3(double v, char *dst)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int d_exp, len, success, decimals, i;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint64_t u64 = CAST_U64(v);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~\ngrisu3.c:346:17: note: in expansion of macro 'CAST_U64'\n  uint64_t u64 = CAST_U64(v);\n                 ^~~~~~~~\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c guess_type.cc -o guess_type.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c iconv_file.cc -o iconv_file.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c index_collection.cc -o index_collection.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom.cc -o vroom.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_big_int.cc -o vroom_big_int.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_chr.cc -o vroom_chr.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_date.cc -o vroom_date.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_dbl.cc -o vroom_dbl.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_dttm.cc -o vroom_dttm.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_errors.cpp -o vroom_errors.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_fct.cc -o vroom_fct.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_fwf.cc -o vroom_fwf.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_int.cc -o vroom_int.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_num.cc -o vroom_num.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_rle.cc -o vroom_rle.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_time.cc -o vroom_time.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_write.cc -o vroom_write.o\n"]
[1,"C:/rtools40/mingw64/bin/g++ -std=gnu++11 -shared -s -static-libgcc -o vroom.dll tmp.def Iconv.o LocaleInfo.o altrep.o cpp11.o delimited_index.o delimited_index_connection.o fixed_width_index_connection.o gen.o grisu3.o guess_type.o iconv_file.o index_collection.o vroom.o vroom_big_int.o vroom_chr.o vroom_date.o vroom_dbl.o vroom_dttm.o vroom_errors.o vroom_fct.o vroom_fwf.o vroom_int.o vroom_num.o vroom_rle.o vroom_time.o vroom_write.o -LC:/PROGRA~1/R/R-40~1.5/bin/x64 -lR\n"]
[2,"installing to C:/Users/menken/Documents/R/win-library/4.0/00LOCK-vroom/00new/vroom/libs/x64\r\n"]
[2,"** R\r\n"]
[2,"** inst\r\n"]
[2,"** byte-compile and prepare package for lazy loading\r\n"]
[1,"Error in loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]]) : \r\n"]
[1,"  namespace 'lifecycle' 1.0.1 is being loaded, but >= 1.0.3 is required\r\n"]
[1,"Calls: <Anonymous> ... namespaceImportFrom -> asNamespace -> loadNamespace\r\n"]
[1,"Execution halted\r\n"]
[2,"ERROR: lazy loading failed for package 'vroom'\r\n* removing 'C:/Users/menken/Documents/R/win-library/4.0/vroom'\r\n"]
[1,"\r\n"]
[1,"\r\n"]
[1,"[5/8] Installing cpp11...\r\n"]
[1,"\r\n"]
[2,"\r\nThe downloaded source packages are in\r\n\t'C:\\Users\\menken\\AppData\\Local\\Temp\\Rtmp6x6dy5\\downloaded_packages'\r\nInstalling package into 'C:/Users/menken/Documents/R/win-library/4.0'\r\n(as 'lib' is unspecified)\r\n"]
[1,"\r\n"]
[1,"  There is a binary version available but the source version is later:\r\n"]
[1,"      binary source needs_compilation\r\n"]
[1,"cpp11  0.4.2  0.4.6             FALSE\r\n"]
[1,"\r\n"]
[2,"installing the source package 'cpp11'\r\n\r\ntrying URL 'https://cran.rstudio.com/src/contrib/cpp11_0.4.6.tar.gz'\r\nContent type 'application/x-gzip' length 300889 bytes (293 KB)\r\n============"]
[2,"======================================\r\ndownloaded 293 KB\r\n\r\n"]
[2,"* installing *source* package 'cpp11' ...\r\n** package 'cpp11' successfully unpacked and MD5 sums checked\r\n"]
[2,"** using staged installation\r\n"]
[2,"** R\r\n** inst\r\n"]
[2,"** byte-compile and prepare package for lazy loading\r\n"]
[2,"** help\r\n"]
[2,"*** installing help indices\r\n"]
[1,"  converting help for package 'cpp11'\r\n"]
[2,"    finding HTML links ..."]
[1,"    cpp11-package                           html  "]
[2," done\r\n"]
[1,"\r\n"]
[1,"    cpp_register                            html  \r\n"]
[1,"    cpp_source                              html  "]
[1,"\r\n"]
[1,"    cpp_vendor                              html  \r\n"]
[2,"** building package indices\r\n"]
[2,"** installing vignettes\r\n"]
[2,"** testing if installed package can be loaded from temporary location\r\n*** arch - i386\r\n"]
[2,"*** arch - x64\r\n"]
[2,"** testing if installed package can be loaded from final location\r\n*** arch - i386\r\n"]
[2,"*** arch - x64\r\n"]
[2,"** testing if installed package keeps a record of temporary installation path\r\n* DONE (cpp11)\r\n"]
[1,"\r\n"]
[1,"\r\n"]
[1,"[6/8] Installing tzdb...\r\n"]
[1,"\r\n"]
[2,"\r\nThe downloaded source packages are in\r\n\t'C:\\Users\\menken\\AppData\\Local\\Temp\\Rtmp6x6dy5\\downloaded_packages'\r\nInstalling package into 'C:/Users/menken/Documents/R/win-library/4.0'\r\n(as 'lib' is unspecified)\r\n"]
[1,"\r\n"]
[1,"  There is a binary version available but the source version is later:\r\n"]
[1,"     binary source needs_compilation\r\n"]
[1,"tzdb  0.3.0  0.4.0              TRUE\r\n"]
[1,"\r\n"]
[2,"installing the source package 'tzdb'\r\n\r\ntrying URL 'https://cran.rstudio.com/src/contrib/tzdb_0.4.0.tar.gz'\r\nContent type 'application/x-gzip' length 586327 bytes (572 KB)\r\n================"]
[2,"==================================\r\ndownloaded 572 KB\r\n\r\n"]
[2,"* installing *source* package 'tzdb' ...\r\n** package 'tzdb' successfully unpacked and MD5 sums checked\r\n"]
[2,"** using staged installation\r\n"]
[2,"** libs\r\n\r\n*** arch - i386\r\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG  -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include'     -I../inst/include -DINSTALL=dummy -DAUTO_DOWNLOAD=0 -DHAS_REMOTE_API=0 -DUSE_OS_TZDB=0 -DONLY_C_LOCALE=1   -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c api.cpp -o api.o\n"]
[2,"In file included from api.cpp:3:\nC:/Users/menken/Documents/R/win-library/4.0/cpp11/include/cpp11/protect.hpp:324:3: warning: 'cpp11::preserved' defined but not used [-Wunused-variable]\n } preserved;\n   ^~~~~~~~~\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG  -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include'     -I../inst/include -DINSTALL=dummy -DAUTO_DOWNLOAD=0 -DHAS_REMOTE_API=0 -DUSE_OS_TZDB=0 -DONLY_C_LOCALE=1   -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c cpp11.cpp -o cpp11.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG  -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include'     -I../inst/include -DINSTALL=dummy -DAUTO_DOWNLOAD=0 -DHAS_REMOTE_API=0 -DUSE_OS_TZDB=0 -DONLY_C_LOCALE=1   -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c names.cpp -o names.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG  -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include'     -I../inst/include -DINSTALL=dummy -DAUTO_DOWNLOAD=0 -DHAS_REMOTE_API=0 -DUSE_OS_TZDB=0 -DONLY_C_LOCALE=1   -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c path.cpp -o path.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG  -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include'     -I../inst/include -DINSTALL=dummy -DAUTO_DOWNLOAD=0 -DHAS_REMOTE_API=0 -DUSE_OS_TZDB=0 -DONLY_C_LOCALE=1   -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c tz.cpp -o tz.o\n"]
[2,"tz.cpp:234:1: warning: 'std::__cxx11::string get_known_folder(const GUID&)' defined but not used [-Wunused-function]\n get_known_folder(const GUID& folderid)\n ^~~~~~~~~~~~~~~~\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG  -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include'     -I../inst/include -DINSTALL=dummy -DAUTO_DOWNLOAD=0 -DHAS_REMOTE_API=0 -DUSE_OS_TZDB=0 -DONLY_C_LOCALE=1   -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c version.cpp -o version.o\n"]
[1,"C:/rtools40/mingw32/bin/g++ -std=gnu++11 -shared -s -static-libgcc -o tzdb.dll tmp.def api.o cpp11.o names.o path.o tz.o version.o -lpthread -lole32 -LC:/PROGRA~1/R/R-40~1.5/bin/i386 -lR\n"]
[2,"installing to C:/Users/menken/Documents/R/win-library/4.0/00LOCK-tzdb/00new/tzdb/libs/i386\r\n\r\n*** arch - x64\r\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG  -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include'     -I../inst/include -DINSTALL=dummy -DAUTO_DOWNLOAD=0 -DHAS_REMOTE_API=0 -DUSE_OS_TZDB=0 -DONLY_C_LOCALE=1   -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c api.cpp -o api.o\n"]
[2,"In file included from api.cpp:3:\nC:/Users/menken/Documents/R/win-library/4.0/cpp11/include/cpp11/protect.hpp:324:3: warning: 'cpp11::preserved' defined but not used [-Wunused-variable]\n } preserved;\n   ^~~~~~~~~\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG  -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include'     -I../inst/include -DINSTALL=dummy -DAUTO_DOWNLOAD=0 -DHAS_REMOTE_API=0 -DUSE_OS_TZDB=0 -DONLY_C_LOCALE=1   -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c cpp11.cpp -o cpp11.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG  -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include'     -I../inst/include -DINSTALL=dummy -DAUTO_DOWNLOAD=0 -DHAS_REMOTE_API=0 -DUSE_OS_TZDB=0 -DONLY_C_LOCALE=1   -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c names.cpp -o names.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG  -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include'     -I../inst/include -DINSTALL=dummy -DAUTO_DOWNLOAD=0 -DHAS_REMOTE_API=0 -DUSE_OS_TZDB=0 -DONLY_C_LOCALE=1   -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c path.cpp -o path.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG  -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include'     -I../inst/include -DINSTALL=dummy -DAUTO_DOWNLOAD=0 -DHAS_REMOTE_API=0 -DUSE_OS_TZDB=0 -DONLY_C_LOCALE=1   -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c tz.cpp -o tz.o\n"]
[2,"tz.cpp:234:1: warning: 'std::__cxx11::string get_known_folder(const GUID&)' defined but not used [-Wunused-function]\n get_known_folder(const GUID& folderid)\n ^~~~~~~~~~~~~~~~\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG  -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include'     -I../inst/include -DINSTALL=dummy -DAUTO_DOWNLOAD=0 -DHAS_REMOTE_API=0 -DUSE_OS_TZDB=0 -DONLY_C_LOCALE=1   -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c version.cpp -o version.o\n"]
[1,"C:/rtools40/mingw64/bin/g++ -std=gnu++11 -shared -s -static-libgcc -o tzdb.dll tmp.def api.o cpp11.o names.o path.o tz.o version.o -lpthread -lole32 -LC:/PROGRA~1/R/R-40~1.5/bin/x64 -lR\n"]
[2,"installing to C:/Users/menken/Documents/R/win-library/4.0/00LOCK-tzdb/00new/tzdb/libs/x64\r\n"]
[2,"** R\r\n"]
[2,"** inst\r\n"]
[2,"** byte-compile and prepare package for lazy loading\r\n"]
[2,"** help\r\n"]
[2,"*** installing help indices\r\n"]
[1,"  converting help for package 'tzdb'\r\n"]
[2,"    finding HTML links ..."]
[2," done\r\n"]
[1,"    tzdb-package                            html  \r\n"]
[1,"    tzdb_initialize                         html  \r\n"]
[1,"    tzdb_names                              html  "]
[1,"\r\n"]
[1,"    tzdb_path                               html  \r\n"]
[1,"    tzdb_version                            html  "]
[1,"\r\n"]
[2,"** building package indices\r\n"]
[2,"** testing if installed package can be loaded from temporary location\r\n*** arch - i386\r\n"]
[2,"*** arch - x64\r\n"]
[2,"** testing if installed package can be loaded from final location\r\n*** arch - i386\r\n"]
[2,"*** arch - x64\r\n"]
[2,"** testing if installed package keeps a record of temporary installation path\r\n* DONE (tzdb)\r\n"]
[1,"\r\n"]
[1,"\r\n"]
[1,"[7/8] Installing readr...\r\n"]
[1,"\r\n"]
[2,"\r\nThe downloaded source packages are in\r\n\t'C:\\Users\\menken\\AppData\\Local\\Temp\\Rtmp6x6dy5\\downloaded_packages'\r\nInstalling package into 'C:/Users/menken/Documents/R/win-library/4.0'\r\n(as 'lib' is unspecified)\r\n"]
[2,"also installing the dependencies 'rlang', 'lifecycle', 'cli', 'vroom'\r\n\r\n"]
[1,"\r\n"]
[1,"  There are binary versions available but the source versions are later:\r\n"]
[1,"          binary source needs_compilation\r\n"]
[1,"rlang      1.0.2  1.1.1              TRUE\r\n"]
[1,"lifecycle  1.0.1  1.0.3             FALSE\r\n"]
[1,"cli        3.2.0  3.6.1              TRUE\r\n"]
[1,"vroom      1.5.7  1.6.3              TRUE\r\n"]
[1,"readr      2.1.2  2.1.4              TRUE\r\n"]
[1,"\r\n"]
[2,"installing the source packages 'rlang', 'lifecycle', 'cli', 'vroom', 'readr'\r\n\r\ntrying URL 'https://cran.rstudio.com/src/contrib/rlang_1.1.1.tar.gz'\r\n"]
[2,"Content type 'application/x-gzip' length 762533 bytes (744 KB)\r\n==============="]
[2,"============================"]
[2,"=="]
[2,"=====\r\ndownloaded 744 KB\r\n\r\ntrying URL 'https://cran.rstudio.com/src/contrib/lifecycle_1.0.3.tar.gz'\r\nContent type 'application/x-gzip' length 106854 bytes (104 KB)\r\n"]
[2,"======="]
[2,"===========================================\r\ndownloaded 104 KB\r\n\r\ntrying URL 'https://cran.rstudio.com/src/contrib/cli_3.6.1.tar.gz'\r\nContent type 'application/x-gzip' length 567293 bytes (553 KB)\r\n========"]
[2,"="]
[2,"=========================================\r\ndownloaded 553 KB\r\n\r\n"]
[2,"trying URL 'https://cran.rstudio.com/src/contrib/vroom_1.6.3.tar.gz'\r\nContent type 'application/x-gzip' length 718863 bytes (702 KB)\r\n======================="]
[2,"===========================\r\ndownloaded 702 KB\r\n\r\ntrying URL 'https://cran.rstudio.com/src/contrib/readr_2.1.4.tar.gz'\r\n"]
[2,"Content type 'application/x-gzip' length 298083 bytes (291 KB)\r\n=========================="]
[2,"========================\r\ndownloaded 291 KB\r\n\r\n"]
[2,"* installing *source* package 'rlang' ...\r\n"]
[2,"** package 'rlang' successfully unpacked and MD5 sums checked\r\n"]
[2,"ERROR: cannot remove earlier installation, is it in use?\r\n* removing 'C:/Users/menken/Documents/R/win-library/4.0/rlang'\r\n* restoring previous 'C:/Users/menken/Documents/R/win-library/4.0/rlang'\r\n"]
[2,"Warning in file.copy(lp, dirname(pkgdir), recursive = TRUE, copy.date = TRUE) :\r\n  problem copying C:\\Users\\menken\\Documents\\R\\win-library\\4.0\\00LOCK-rlang\\rlang\\libs\\x64\\rlang.dll to C:\\Users\\menken\\Documents\\R\\win-library\\4.0\\rlang\\libs\\x64\\rlang.dll: Permission denied\r\n"]
[2,"* installing *source* package 'cli' ...\r\n** package 'cli' successfully unpacked and MD5 sums checked\r\n"]
[2,"ERROR: cannot remove earlier installation, is it in use?\r\n* removing 'C:/Users/menken/Documents/R/win-library/4.0/cli'\r\n* restoring previous 'C:/Users/menken/Documents/R/win-library/4.0/cli'\r\n"]
[2,"Warning in file.copy(lp, dirname(pkgdir), recursive = TRUE, copy.date = TRUE) :\r\n  problem copying C:\\Users\\menken\\Documents\\R\\win-library\\4.0\\00LOCK-cli\\cli\\libs\\x64\\cli.dll to C:\\Users\\menken\\Documents\\R\\win-library\\4.0\\cli\\libs\\x64\\cli.dll: Permission denied\r\n"]
[2,"* installing *source* package 'lifecycle' ...\r\n** package 'lifecycle' successfully unpacked and MD5 sums checked\r\n"]
[2,"** using staged installation\r\n"]
[2,"** R\r\n"]
[2,"** inst\r\n"]
[2,"** byte-compile and prepare package for lazy loading\r\n"]
[1,"Error in loadNamespace(i, c(lib.loc, .libPaths()), versionCheck = vI[[i]]) : \r\n"]
[1,"  namespace 'rlang' 1.0.2 is being loaded, but >= 1.0.6 is required\r\n"]
[1,"Calls: <Anonymous> ... withCallingHandlers -> loadNamespace -> namespaceImport -> loadNamespace\r\n"]
[1,"Execution halted\r\n"]
[2,"ERROR: lazy loading failed for package 'lifecycle'\r\n* removing 'C:/Users/menken/Documents/R/win-library/4.0/lifecycle'\r\n* restoring previous 'C:/Users/menken/Documents/R/win-library/4.0/lifecycle'\r\n"]
[2,"* installing *source* package 'vroom' ...\r\n"]
[2,"** package 'vroom' successfully unpacked and MD5 sums checked\r\n** using staged installation\r\n"]
[2,"** libs\r\n\r\n*** arch - i386\r\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c Iconv.cpp -o Iconv.o\n"]
[2,"In file included from Iconv.cpp:2:\nC:/Users/menken/Documents/R/win-library/4.0/cpp11/include/cpp11/protect.hpp:324:3: warning: 'cpp11::preserved' defined but not used [-Wunused-variable]\n } preserved;\n   ^~~~~~~~~\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c LocaleInfo.cpp -o LocaleInfo.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c altrep.cc -o altrep.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c cpp11.cpp -o cpp11.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c delimited_index.cc -o delimited_index.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c delimited_index_connection.cc -o delimited_index_connection.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c fixed_width_index_connection.cc -o fixed_width_index_connection.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c gen.cc -o gen.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"gcc  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -std=gnu99 -mfpmath=sse -msse2 -mstackrealign -c grisu3.c -o grisu3.o\n"]
[2,"grisu3.c: In function 'double2diy_fp':\ngrisu3.c:57:23: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]\n #define CAST_U64(d) (*(uint64_t*)&d)\n                       ^~~~~~~~~~~~~~\n #define MIN(x,y) ((x) <= (y) ? (x) : (y))\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n #define MAX(x,y) ((x) >= (y) ? (x) : (y))\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n #define MIN_CACHED_EXP -348\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n #define CACHED_EXP_STEP 8\n ~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n typedef struct diy_fp\n ~~~~~~~~~~~~~~~~~~~~~  \n {\n ~                      \n  uint64_t f;\n  ~~~~~~~~~~~           \n  int e;\n  ~~~~~~                \n } diy_fp;\n ~~~~~~~~~              \n \n                        \n typedef struct power\n ~~~~~~~~~~~~~~~~~~~~   \n {\n ~                      \n  uint64_t fract;\n  ~~~~~~~~~~~~~~~       \n  int16_t b_exp, d_exp;\n  ~~~~~~~~~~~~~~~~~~~~~ \n } power;\n ~~~~~~~~               \n \n                        \n static const power pow_cache[] =\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  { 0xfa8fd5a0081c0288ULL, -1220, -348 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbaaee17fa23ebf76ULL, -1193, -340 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8b16fb203055ac76ULL, -1166, -332 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcf42894a5dce35eaULL, -1140, -324 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9a6bb0aa55653b2dULL, -1113, -316 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe61acf033d1a45dfULL, -1087, -308 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xab70fe17c79ac6caULL, -1060, -300 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xff77b1fcbebcdc4fULL, -1034, -292 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbe5691ef416bd60cULL, -1007, -284 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8dd01fad907ffc3cULL,  -980, -276 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd3515c2831559a83ULL,  -954, -268 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9d71ac8fada6c9b5ULL,  -927, -260 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xea9c227723ee8bcbULL,  -901, -252 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaecc49914078536dULL,  -874, -244 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x823c12795db6ce57ULL,  -847, -236 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc21094364dfb5637ULL,  -821, -228 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9096ea6f3848984fULL,  -794, -220 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd77485cb25823ac7ULL,  -768, -212 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa086cfcd97bf97f4ULL,  -741, -204 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xef340a98172aace5ULL,  -715, -196 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb23867fb2a35b28eULL,  -688, -188 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x84c8d4dfd2c63f3bULL,  -661, -180 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc5dd44271ad3cdbaULL,  -635, -172 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x936b9fcebb25c996ULL,  -608, -164 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xdbac6c247d62a584ULL,  -582, -156 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa3ab66580d5fdaf6ULL,  -555, -148 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf3e2f893dec3f126ULL,  -529, -140 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb5b5ada8aaff80b8ULL,  -502, -132 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x87625f056c7c4a8bULL,  -475, -124 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc9bcff6034c13053ULL,  -449, -116 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x964e858c91ba2655ULL,  -422, -108 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xdff9772470297ebdULL,  -396, -100 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa6dfbd9fb8e5b88fULL,  -369,  -92 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf8a95fcf88747d94ULL,  -343,  -84 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb94470938fa89bcfULL,  -316,  -76 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8a08f0f8bf0f156bULL,  -289,  -68 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcdb02555653131b6ULL,  -263,  -60 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x993fe2c6d07b7facULL,  -236,  -52 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe45c10c42a2b3b06ULL,  -210,  -44 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaa242499697392d3ULL,  -183,  -36 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xfd87b5f28300ca0eULL,  -157,  -28 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbce5086492111aebULL,  -130,  -20 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8cbccc096f5088ccULL,  -103,  -12 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd1b71758e219652cULL,   -77,   -4 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9c40000000000000ULL,   -50,    4 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe8d4a51000000000ULL,   -24,   12 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xad78ebc5ac620000ULL,     3,   20 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x813f3978f8940984ULL,    30,   28 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc097ce7bc90715b3ULL,    56,   36 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8f7e32ce7bea5c70ULL,    83,   44 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd5d238a4abe98068ULL,   109,   52 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9f4f2726179a2245ULL,   136,   60 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xed63a231d4c4fb27ULL,   162,   68 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb0de65388cc8ada8ULL,   189,   76 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x83c7088e1aab65dbULL,   216,   84 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc45d1df942711d9aULL,   242,   92 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x924d692ca61be758ULL,   269,  100 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xda01ee641a708deaULL,   295,  108 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa26da3999aef774aULL,   322,  116 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf209787bb47d6b85ULL,   348,  124 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb454e4a179dd1877ULL,   375,  132 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x865b86925b9bc5c2ULL,   402,  140 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc83553c5c8965d3dULL,   428,  148 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x952ab45cfa97a0b3ULL,   455,  156 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xde469fbd99a05fe3ULL,   481,  164 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa59bc234db398c25ULL,   508,  172 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf6c69a72a3989f5cULL,   534,  180 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb7dcbf5354e9beceULL,   561,  188 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x88fcf317f22241e2ULL,   588,  196 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcc20ce9bd35c78a5ULL,   614,  204 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x98165af37b2153dfULL,   641,  212 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe2a0b5dc971f303aULL,   667,  220 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa8d9d1535ce3b396ULL,   694,  228 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xfb9b7cd9a4a7443cULL,   720,  236 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbb764c4ca7a44410ULL,   747,  244 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8bab8eefb6409c1aULL,   774,  252 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd01fef10a657842cULL,   800,  260 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9b10a4e5e9913129ULL,   827,  268 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe7109bfba19c0c9dULL,   853,  276 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xac2820d9623bf429ULL,   880,  284 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x80444b5e7aa7cf85ULL,   907,  292 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbf21e44003acdd2dULL,   933,  300 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8e679c2f5e44ff8fULL,   960,  308 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd433179d9c8cb841ULL,   986,  316 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9e19db92b4e31ba9ULL,  1013,  324 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xeb96bf6ebadf77d9ULL,  1039,  332 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaf87023b9bf0ee6bULL,  1066,  340 }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n };\n ~~                     \n \n                        \n static int cached_pow(int exp, diy_fp *p)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int k = (int)ceil((exp+DIYFP_FRACT_SIZE-1) * D_1_LOG2_10);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  int i = (k-MIN_CACHED_EXP-1) / CACHED_EXP_STEP + 1;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  p->f = pow_cache[i].fract;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n  p->e = pow_cache[i].b_exp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return pow_cache[i].d_exp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n }\n ~                      \n \n                        \n static diy_fp minus(diy_fp x, diy_fp y)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  diy_fp d; d.f = x.f - y.f; d.e = x.e;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  assert(x.e == y.e && x.f >= y.f);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return d;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp multiply(diy_fp x, diy_fp y)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  uint64_t a, b, c, d, ac, bc, ad, bd, tmp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp r;\n  ~~~~~~~~~             \n  a = x.f >> 32; b = x.f & MASK32;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  c = y.f >> 32; d = y.f & MASK32;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  ac = a*c; bc = b*c;\n  ~~~~~~~~~~~~~~~~~~~   \n  ad = a*d; bd = b*d;\n  ~~~~~~~~~~~~~~~~~~~   \n  tmp = (bd >> 32) + (ad & MASK32) + (bc & MASK32);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  tmp += 1U << 31; // round\n  ~~~~~~~~~~~~~~~~~~~~~~~~~\n  r.f = ac + (ad >> 32) + (bc >> 32) + (tmp >> 32);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  r.e = x.e + y.e + 64;\n  ~~~~~~~~~~~~~~~~~~~~~ \n  return r;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp normalize_diy_fp(diy_fp n)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  assert(n.f != 0);\n  ~~~~~~~~~~~~~~~~~     \n  while(!(n.f & 0xFFC0000000000000ULL)) { n.f <<= 10; n.e -= 10; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  while(!(n.f & D64_SIGN)) { n.f <<= 1; --n.e; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return n;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp double2diy_fp(double d)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  diy_fp fp;\n  ~~~~~~~~~~            \n  uint64_t u64 = CAST_U64(d);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~\ngrisu3.c:209:17: note: in expansion of macro 'CAST_U64'\n  uint64_t u64 = CAST_U64(d);\n                 ^~~~~~~~\n"]
[2,"grisu3.c: In function 'grisu3':\n"]
[2,"grisu3.c:57:23: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]\n #define CAST_U64(d) (*(uint64_t*)&d)\n                       ^~~~~~~~~~~~~~\n #define MIN(x,y) ((x) <= (y) ? (x) : (y))\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n #define MAX(x,y) ((x) >= (y) ? (x) : (y))\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n #define MIN_CACHED_EXP -348\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n #define CACHED_EXP_STEP 8\n ~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n typedef struct diy_fp\n ~~~~~~~~~~~~~~~~~~~~~  \n {\n ~                      \n  uint64_t f;\n  ~~~~~~~~~~~           \n  int e;\n  ~~~~~~                \n } diy_fp;\n ~~~~~~~~~              \n \n                        \n typedef struct power\n ~~~~~~~~~~~~~~~~~~~~   \n {\n ~                      \n  uint64_t fract;\n  ~~~~~~~~~~~~~~~       \n  int16_t b_exp, d_exp;\n  ~~~~~~~~~~~~~~~~~~~~~ \n } power;\n ~~~~~~~~               \n \n                        \n static const power pow_cache[] =\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  { 0xfa8fd5a0081c0288ULL, -1220, -348 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbaaee17fa23ebf76ULL, -1193, -340 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8b16fb203055ac76ULL, -1166, -332 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcf42894a5dce35eaULL, -1140, -324 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9a6bb0aa55653b2dULL, -1113, -316 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe61acf033d1a45dfULL, -1087, -308 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xab70fe17c79ac6caULL, -1060, -300 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xff77b1fcbebcdc4fULL, -1034, -292 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbe5691ef416bd60cULL, -1007, -284 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8dd01fad907ffc3cULL,  -980, -276 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd3515c2831559a83ULL,  -954, -268 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9d71ac8fada6c9b5ULL,  -927, -260 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xea9c227723ee8bcbULL,  -901, -252 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaecc49914078536dULL,  -874, -244 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x823c12795db6ce57ULL,  -847, -236 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc21094364dfb5637ULL,  -821, -228 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9096ea6f3848984fULL,  -794, -220 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd77485cb25823ac7ULL,  -768, -212 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa086cfcd97bf97f4ULL,  -741, -204 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xef340a98172aace5ULL,  -715, -196 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb23867fb2a35b28eULL,  -688, -188 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x84c8d4dfd2c63f3bULL,  -661, -180 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc5dd44271ad3cdbaULL,  -635, -172 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x936b9fcebb25c996ULL,  -608, -164 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xdbac6c247d62a584ULL,  -582, -156 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa3ab66580d5fdaf6ULL,  -555, -148 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf3e2f893dec3f126ULL,  -529, -140 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb5b5ada8aaff80b8ULL,  -502, -132 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x87625f056c7c4a8bULL,  -475, -124 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc9bcff6034c13053ULL,  -449, -116 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x964e858c91ba2655ULL,  -422, -108 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xdff9772470297ebdULL,  -396, -100 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa6dfbd9fb8e5b88fULL,  -369,  -92 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf8a95fcf88747d94ULL,  -343,  -84 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb94470938fa89bcfULL,  -316,  -76 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8a08f0f8bf0f156bULL,  -289,  -68 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcdb02555653131b6ULL,  -263,  -60 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x993fe2c6d07b7facULL,  -236,  -52 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe45c10c42a2b3b06ULL,  -210,  -44 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaa242499697392d3ULL,  -183,  -36 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xfd87b5f28300ca0eULL,  -157,  -28 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbce5086492111aebULL,  -130,  -20 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8cbccc096f5088ccULL,  -103,  -12 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd1b71758e219652cULL,   -77,   -4 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9c40000000000000ULL,   -50,    4 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe8d4a51000000000ULL,   -24,   12 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xad78ebc5ac620000ULL,     3,   20 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x813f3978f8940984ULL,    30,   28 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc097ce7bc90715b3ULL,    56,   36 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8f7e32ce7bea5c70ULL,    83,   44 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd5d238a4abe98068ULL,   109,   52 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9f4f2726179a2245ULL,   136,   60 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xed63a231d4c4fb27ULL,   162,   68 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb0de65388cc8ada8ULL,   189,   76 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x83c7088e1aab65dbULL,   216,   84 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc45d1df942711d9aULL,   242,   92 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x924d692ca61be758ULL,   269,  100 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xda01ee641a708deaULL,   295,  108 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa26da3999aef774aULL,   322,  116 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf209787bb47d6b85ULL,   348,  124 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb454e4a179dd1877ULL,   375,  132 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x865b86925b9bc5c2ULL,   402,  140 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc83553c5c8965d3dULL,   428,  148 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x952ab45cfa97a0b3ULL,   455,  156 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xde469fbd99a05fe3ULL,   481,  164 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa59bc234db398c25ULL,   508,  172 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf6c69a72a3989f5cULL,   534,  180 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb7dcbf5354e9beceULL,   561,  188 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x88fcf317f22241e2ULL,   588,  196 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcc20ce9bd35c78a5ULL,   614,  204 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x98165af37b2153dfULL,   641,  212 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe2a0b5dc971f303aULL,   667,  220 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa8d9d1535ce3b396ULL,   694,  228 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xfb9b7cd9a4a7443cULL,   720,  236 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbb764c4ca7a44410ULL,   747,  244 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8bab8eefb6409c1aULL,   774,  252 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd01fef10a657842cULL,   800,  260 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9b10a4e5e9913129ULL,   827,  268 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe7109bfba19c0c9dULL,   853,  276 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xac2820d9623bf429ULL,   880,  284 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x80444b5e7aa7cf85ULL,   907,  292 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbf21e44003acdd2dULL,   933,  300 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8e679c2f5e44ff8fULL,   960,  308 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd433179d9c8cb841ULL,   986,  316 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9e19db92b4e31ba9ULL,  1013,  324 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xeb96bf6ebadf77d9ULL,  1039,  332 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaf87023b9bf0ee6bULL,  1066,  340 }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n };\n ~~                     \n \n                        \n static int cached_pow(int exp, diy_fp *p)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int k = (int)ceil((exp+DIYFP_FRACT_SIZE-1) * D_1_LOG2_10);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  int i = (k-MIN_CACHED_EXP-1) / CACHED_EXP_STEP + 1;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  p->f = pow_cache[i].fract;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n  p->e = pow_cache[i].b_exp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return pow_cache[i].d_exp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n }\n ~                      \n \n                        \n static diy_fp minus(diy_fp x, diy_fp y)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  diy_fp d; d.f = x.f - y.f; d.e = x.e;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  assert(x.e == y.e && x.f >= y.f);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return d;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp multiply(diy_fp x, diy_fp y)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  uint64_t a, b, c, d, ac, bc, ad, bd, tmp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp r;\n  ~~~~~~~~~             \n  a = x.f >> 32; b = x.f & MASK32;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  c = y.f >> 32; d = y.f & MASK32;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  ac = a*c; bc = b*c;\n  ~~~~~~~~~~~~~~~~~~~   \n  ad = a*d; bd = b*d;\n  ~~~~~~~~~~~~~~~~~~~   \n  tmp = (bd >> 32) + (ad & MASK32) + (bc & MASK32);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  tmp += 1U << 31; // round\n  ~~~~~~~~~~~~~~~~~~~~~~~~~\n  r.f = ac + (ad >> 32) + (bc >> 32) + (tmp >> 32);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  r.e = x.e + y.e + 64;\n  ~~~~~~~~~~~~~~~~~~~~~ \n  return r;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp normalize_diy_fp(diy_fp n)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  assert(n.f != 0);\n  ~~~~~~~~~~~~~~~~~     \n  while(!(n.f & 0xFFC0000000000000ULL)) { n.f <<= 10; n.e -= 10; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  while(!(n.f & D64_SIGN)) { n.f <<= 1; --n.e; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return n;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp double2diy_fp(double d)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  diy_fp fp;\n  ~~~~~~~~~~            \n  uint64_t u64 = CAST_U64(d);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  if (!(u64 & D64_EXP_MASK)) { fp.f = u64 & D64_FRACT_MASK; fp.e = 1 - D64_EXP_BIAS; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  else { fp.f = (u64 & D64_FRACT_MASK) + D64_IMPLICIT_ONE; fp.e = (int)((u64 & D64_EXP_MASK) >> D64_EXP_POS) - D64_EXP_BIAS; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return fp;\n  ~~~~~~~~~~            \n }\n ~                      \n \n                        \n // pow10_cache[i] = 10^(i-1)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n static const unsigned int pow10_cache[] = { 0, 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000 };\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n static int largest_pow10(uint32_t n, int n_bits, uint32_t *power)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int guess = ((n_bits + 1) * 1233 >> 12) + 1/*skip first entry*/;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  if (n < pow10_cache[guess]) --guess; // We don't have any guarantees that 2^n_bits <= n.\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  *power = pow10_cache[guess];\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return guess;\n  ~~~~~~~~~~~~~         \n }\n ~                      \n \n                        \n static int round_weed(char *buffer, int len, uint64_t wp_W, uint64_t delta, uint64_t rest, uint64_t ten_kappa, uint64_t ulp)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  uint64_t wp_Wup = wp_W - ulp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint64_t wp_Wdown = wp_W + ulp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  while(rest < wp_Wup && delta - rest >= ten_kappa\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   && (rest + ten_kappa < wp_Wup || wp_Wup - rest >= rest + ten_kappa - wp_Wup))\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  {\n  ~                     \n   --buffer[len-1];\n   ~~~~~~~~~~~~~~~~     \n   rest += ten_kappa;\n   ~~~~~~~~~~~~~~~~~~   \n  }\n  ~                     \n  if (rest < wp_Wdown && delta - rest >= ten_kappa\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   && (rest + ten_kappa < wp_Wdown || wp_Wdown - rest > rest + ten_kappa - wp_Wdown))\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   return 0;\n   ~~~~~~~~~            \n \n                        \n  return 2*ulp <= rest && rest <= delta - 4*ulp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n }\n ~                      \n \n                        \n static int digit_gen(diy_fp low, diy_fp w, diy_fp high, char *buffer, int *length, int *kappa)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  uint64_t unit = 1;\n  ~~~~~~~~~~~~~~~~~~    \n  diy_fp too_low = { low.f - unit, low.e };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp too_high = { high.f + unit, high.e };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp unsafe_interval = minus(too_high, too_low);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp one = { 1ULL << -w.e, w.e };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint32_t p1 = (uint32_t)(too_high.f >> -one.e);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint64_t p2 = too_high.f & (one.f - 1);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint32_t div;\n  ~~~~~~~~~~~~~         \n  *kappa = largest_pow10(p1, DIYFP_FRACT_SIZE + one.e, &div);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  *length = 0;\n  ~~~~~~~~~~~~          \n \n                        \n  while(*kappa > 0)\n  ~~~~~~~~~~~~~~~~~     \n  {\n  ~                     \n   uint64_t rest;\n   ~~~~~~~~~~~~~~       \n   int digit = p1 / div;\n   ~~~~~~~~~~~~~~~~~~~~~\n   buffer[*length] = (char)('0' + digit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   ++*length;\n   ~~~~~~~~~~           \n   p1 %= div;\n   ~~~~~~~~~~           \n   --*kappa;\n   ~~~~~~~~~            \n   rest = ((uint64_t)p1 << -one.e) + p2;\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   if (rest < unsafe_interval.f) return round_weed(buffer, *length, minus(too_high, w).f, unsafe_interval.f, rest, (uint64_t)div << -one.e, unit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   div /= 10;\n   ~~~~~~~~~~           \n  }\n  ~                     \n \n                        \n  for(;;)\n  ~~~~~~~               \n  {\n  ~                     \n   int digit;\n   ~~~~~~~~~~           \n   p2 *= 10;\n   ~~~~~~~~~            \n   unit *= 10;\n   ~~~~~~~~~~~          \n   unsafe_interval.f *= 10;\n   ~~~~~~~~~~~~~~~~~~~~~~~~\n   // Integer division by one.\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   digit = (int)(p2 >> -one.e);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   buffer[*length] = (char)('0' + digit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   ++*length;\n   ~~~~~~~~~~           \n   p2 &= one.f - 1;  // Modulo by one.\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   --*kappa;\n   ~~~~~~~~~            \n   if (p2 < unsafe_interval.f) return round_weed(buffer, *length, minus(too_high, w).f * unit, unsafe_interval.f, p2, one.f, unit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  }\n  ~                     \n }\n ~                      \n \n                        \n static int grisu3(double v, char *buffer, int *length, int *d_exp)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int mk, kappa, success;\n  ~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp dfp = double2diy_fp(v);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp w = normalize_diy_fp(dfp);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n  // normalize boundaries\n  ~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp t = { (dfp.f << 1) + 1, dfp.e - 1 };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp b_plus = normalize_diy_fp(t);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp b_minus;\n  ~~~~~~~~~~~~~~~       \n  diy_fp c_mk; // Cached power of ten: 10^-k\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint64_t u64 = CAST_U64(v);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~\ngrisu3.c:296:17: note: in expansion of macro 'CAST_U64'\n  uint64_t u64 = CAST_U64(v);\n                 ^~~~~~~~\n"]
[2,"grisu3.c: In function 'dtoa_grisu3':\n"]
[2,"grisu3.c:57:23: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]\n #define CAST_U64(d) (*(uint64_t*)&d)\n                       ^~~~~~~~~~~~~~\n #define MIN(x,y) ((x) <= (y) ? (x) : (y))\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n #define MAX(x,y) ((x) >= (y) ? (x) : (y))\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n #define MIN_CACHED_EXP -348\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n #define CACHED_EXP_STEP 8\n ~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n typedef struct diy_fp\n ~~~~~~~~~~~~~~~~~~~~~  \n {\n ~                      \n  uint64_t f;\n  ~~~~~~~~~~~           \n  int e;\n  ~~~~~~                \n } diy_fp;\n ~~~~~~~~~              \n \n                        \n typedef struct power\n ~~~~~~~~~~~~~~~~~~~~   \n {\n ~                      \n  uint64_t fract;\n  ~~~~~~~~~~~~~~~       \n  int16_t b_exp, d_exp;\n  ~~~~~~~~~~~~~~~~~~~~~ \n } power;\n ~~~~~~~~               \n \n                        \n static const power pow_cache[] =\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  { 0xfa8fd5a0081c0288ULL, -1220, -348 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbaaee17fa23ebf76ULL, -1193, -340 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8b16fb203055ac76ULL, -1166, -332 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcf42894a5dce35eaULL, -1140, -324 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9a6bb0aa55653b2dULL, -1113, -316 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe61acf033d1a45dfULL, -1087, -308 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xab70fe17c79ac6caULL, -1060, -300 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xff77b1fcbebcdc4fULL, -1034, -292 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbe5691ef416bd60cULL, -1007, -284 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8dd01fad907ffc3cULL,  -980, -276 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd3515c2831559a83ULL,  -954, -268 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9d71ac8fada6c9b5ULL,  -927, -260 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xea9c227723ee8bcbULL,  -901, -252 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaecc49914078536dULL,  -874, -244 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x823c12795db6ce57ULL,  -847, -236 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc21094364dfb5637ULL,  -821, -228 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9096ea6f3848984fULL,  -794, -220 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd77485cb25823ac7ULL,  -768, -212 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa086cfcd97bf97f4ULL,  -741, -204 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xef340a98172aace5ULL,  -715, -196 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb23867fb2a35b28eULL,  -688, -188 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x84c8d4dfd2c63f3bULL,  -661, -180 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc5dd44271ad3cdbaULL,  -635, -172 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x936b9fcebb25c996ULL,  -608, -164 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xdbac6c247d62a584ULL,  -582, -156 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa3ab66580d5fdaf6ULL,  -555, -148 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf3e2f893dec3f126ULL,  -529, -140 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb5b5ada8aaff80b8ULL,  -502, -132 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x87625f056c7c4a8bULL,  -475, -124 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc9bcff6034c13053ULL,  -449, -116 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x964e858c91ba2655ULL,  -422, -108 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xdff9772470297ebdULL,  -396, -100 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa6dfbd9fb8e5b88fULL,  -369,  -92 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf8a95fcf88747d94ULL,  -343,  -84 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb94470938fa89bcfULL,  -316,  -76 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8a08f0f8bf0f156bULL,  -289,  -68 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcdb02555653131b6ULL,  -263,  -60 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x993fe2c6d07b7facULL,  -236,  -52 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe45c10c42a2b3b06ULL,  -210,  -44 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaa242499697392d3ULL,  -183,  -36 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xfd87b5f28300ca0eULL,  -157,  -28 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbce5086492111aebULL,  -130,  -20 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8cbccc096f5088ccULL,  -103,  -12 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd1b71758e219652cULL,   -77,   -4 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9c40000000000000ULL,   -50,    4 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe8d4a51000000000ULL,   -24,   12 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xad78ebc5ac620000ULL,     3,   20 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x813f3978f8940984ULL,    30,   28 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc097ce7bc90715b3ULL,    56,   36 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8f7e32ce7bea5c70ULL,    83,   44 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd5d238a4abe98068ULL,   109,   52 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9f4f2726179a2245ULL,   136,   60 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xed63a231d4c4fb27ULL,   162,   68 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb0de65388cc8ada8ULL,   189,   76 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x83c7088e1aab65dbULL,   216,   84 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc45d1df942711d9aULL,   242,   92 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x924d692ca61be758ULL,   269,  100 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xda01ee641a708deaULL,   295,  108 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa26da3999aef774aULL,   322,  116 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf209787bb47d6b85ULL,   348,  124 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb454e4a179dd1877ULL,   375,  132 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x865b86925b9bc5c2ULL,   402,  140 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc83553c5c8965d3dULL,   428,  148 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x952ab45cfa97a0b3ULL,   455,  156 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xde469fbd99a05fe3ULL,   481,  164 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa59bc234db398c25ULL,   508,  172 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf6c69a72a3989f5cULL,   534,  180 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb7dcbf5354e9beceULL,   561,  188 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x88fcf317f22241e2ULL,   588,  196 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcc20ce9bd35c78a5ULL,   614,  204 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x98165af37b2153dfULL,   641,  212 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe2a0b5dc971f303aULL,   667,  220 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa8d9d1535ce3b396ULL,   694,  228 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xfb9b7cd9a4a7443cULL,   720,  236 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbb764c4ca7a44410ULL,   747,  244 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8bab8eefb6409c1aULL,   774,  252 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd01fef10a657842cULL,   800,  260 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9b10a4e5e9913129ULL,   827,  268 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe7109bfba19c0c9dULL,   853,  276 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xac2820d9623bf429ULL,   880,  284 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x80444b5e7aa7cf85ULL,   907,  292 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbf21e44003acdd2dULL,   933,  300 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8e679c2f5e44ff8fULL,   960,  308 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd433179d9c8cb841ULL,   986,  316 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9e19db92b4e31ba9ULL,  1013,  324 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xeb96bf6ebadf77d9ULL,  1039,  332 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaf87023b9bf0ee6bULL,  1066,  340 }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n };\n ~~                     \n \n                        \n static int cached_pow(int exp, diy_fp *p)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int k = (int)ceil((exp+DIYFP_FRACT_SIZE-1) * D_1_LOG2_10);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  int i = (k-MIN_CACHED_EXP-1) / CACHED_EXP_STEP + 1;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  p->f = pow_cache[i].fract;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n  p->e = pow_cache[i].b_exp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return pow_cache[i].d_exp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n }\n ~                      \n \n                        \n static diy_fp minus(diy_fp x, diy_fp y)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  diy_fp d; d.f = x.f - y.f; d.e = x.e;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  assert(x.e == y.e && x.f >= y.f);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return d;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp multiply(diy_fp x, diy_fp y)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  uint64_t a, b, c, d, ac, bc, ad, bd, tmp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp r;\n  ~~~~~~~~~             \n  a = x.f >> 32; b = x.f & MASK32;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  c = y.f >> 32; d = y.f & MASK32;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  ac = a*c; bc = b*c;\n  ~~~~~~~~~~~~~~~~~~~   \n  ad = a*d; bd = b*d;\n  ~~~~~~~~~~~~~~~~~~~   \n  tmp = (bd >> 32) + (ad & MASK32) + (bc & MASK32);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  tmp += 1U << 31; // round\n  ~~~~~~~~~~~~~~~~~~~~~~~~~\n  r.f = ac + (ad >> 32) + (bc >> 32) + (tmp >> 32);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  r.e = x.e + y.e + 64;\n  ~~~~~~~~~~~~~~~~~~~~~ \n  return r;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp normalize_diy_fp(diy_fp n)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  assert(n.f != 0);\n  ~~~~~~~~~~~~~~~~~     \n  while(!(n.f & 0xFFC0000000000000ULL)) { n.f <<= 10; n.e -= 10; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  while(!(n.f & D64_SIGN)) { n.f <<= 1; --n.e; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return n;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp double2diy_fp(double d)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  diy_fp fp;\n  ~~~~~~~~~~            \n  uint64_t u64 = CAST_U64(d);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  if (!(u64 & D64_EXP_MASK)) { fp.f = u64 & D64_FRACT_MASK; fp.e = 1 - D64_EXP_BIAS; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  else { fp.f = (u64 & D64_FRACT_MASK) + D64_IMPLICIT_ONE; fp.e = (int)((u64 & D64_EXP_MASK) >> D64_EXP_POS) - D64_EXP_BIAS; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return fp;\n  ~~~~~~~~~~            \n }\n ~                      \n \n                        \n // pow10_cache[i] = 10^(i-1)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n static const unsigned int pow10_cache[] = { 0, 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000 };\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n static int largest_pow10(uint32_t n, int n_bits, uint32_t *power)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int guess = ((n_bits + 1) * 1233 >> 12) + 1/*skip first entry*/;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  if (n < pow10_cache[guess]) --guess; // We don't have any guarantees that 2^n_bits <= n.\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  *power = pow10_cache[guess];\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return guess;\n  ~~~~~~~~~~~~~         \n }\n ~                      \n \n                        \n static int round_weed(char *buffer, int len, uint64_t wp_W, uint64_t delta, uint64_t rest, uint64_t ten_kappa, uint64_t ulp)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  uint64_t wp_Wup = wp_W - ulp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint64_t wp_Wdown = wp_W + ulp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  while(rest < wp_Wup && delta - rest >= ten_kappa\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   && (rest + ten_kappa < wp_Wup || wp_Wup - rest >= rest + ten_kappa - wp_Wup))\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  {\n  ~                     \n   --buffer[len-1];\n   ~~~~~~~~~~~~~~~~     \n   rest += ten_kappa;\n   ~~~~~~~~~~~~~~~~~~   \n  }\n  ~                     \n  if (rest < wp_Wdown && delta - rest >= ten_kappa\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   && (rest + ten_kappa < wp_Wdown || wp_Wdown - rest > rest + ten_kappa - wp_Wdown))\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   return 0;\n   ~~~~~~~~~            \n \n                        \n  return 2*ulp <= rest && rest <= delta - 4*ulp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n }\n ~                      \n \n                        \n static int digit_gen(diy_fp low, diy_fp w, diy_fp high, char *buffer, int *length, int *kappa)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  uint64_t unit = 1;\n  ~~~~~~~~~~~~~~~~~~    \n  diy_fp too_low = { low.f - unit, low.e };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp too_high = { high.f + unit, high.e };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp unsafe_interval = minus(too_high, too_low);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp one = { 1ULL << -w.e, w.e };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint32_t p1 = (uint32_t)(too_high.f >> -one.e);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint64_t p2 = too_high.f & (one.f - 1);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint32_t div;\n  ~~~~~~~~~~~~~         \n  *kappa = largest_pow10(p1, DIYFP_FRACT_SIZE + one.e, &div);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  *length = 0;\n  ~~~~~~~~~~~~          \n \n                        \n  while(*kappa > 0)\n  ~~~~~~~~~~~~~~~~~     \n  {\n  ~                     \n   uint64_t rest;\n   ~~~~~~~~~~~~~~       \n   int digit = p1 / div;\n   ~~~~~~~~~~~~~~~~~~~~~\n   buffer[*length] = (char)('0' + digit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   ++*length;\n   ~~~~~~~~~~           \n   p1 %= div;\n   ~~~~~~~~~~           \n   --*kappa;\n   ~~~~~~~~~            \n   rest = ((uint64_t)p1 << -one.e) + p2;\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   if (rest < unsafe_interval.f) return round_weed(buffer, *length, minus(too_high, w).f, unsafe_interval.f, rest, (uint64_t)div << -one.e, unit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   div /= 10;\n   ~~~~~~~~~~           \n  }\n  ~                     \n \n                        \n  for(;;)\n  ~~~~~~~               \n  {\n  ~                     \n   int digit;\n   ~~~~~~~~~~           \n   p2 *= 10;\n   ~~~~~~~~~            \n   unit *= 10;\n   ~~~~~~~~~~~          \n   unsafe_interval.f *= 10;\n   ~~~~~~~~~~~~~~~~~~~~~~~~\n   // Integer division by one.\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   digit = (int)(p2 >> -one.e);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   buffer[*length] = (char)('0' + digit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   ++*length;\n   ~~~~~~~~~~           \n   p2 &= one.f - 1;  // Modulo by one.\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   --*kappa;\n   ~~~~~~~~~            \n   if (p2 < unsafe_interval.f) return round_weed(buffer, *length, minus(too_high, w).f * unit, unsafe_interval.f, p2, one.f, unit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  }\n  ~                     \n }\n ~                      \n \n                        \n static int grisu3(double v, char *buffer, int *length, int *d_exp)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int mk, kappa, success;\n  ~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp dfp = double2diy_fp(v);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp w = normalize_diy_fp(dfp);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n  // normalize boundaries\n  ~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp t = { (dfp.f << 1) + 1, dfp.e - 1 };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp b_plus = normalize_diy_fp(t);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp b_minus;\n  ~~~~~~~~~~~~~~~       \n  diy_fp c_mk; // Cached power of ten: 10^-k\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint64_t u64 = CAST_U64(v);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  assert(v > 0 && v <= 1.7976931348623157e308); // Grisu only handles strictly positive finite numbers.\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  if (!(u64 & D64_FRACT_MASK) && (u64 & D64_EXP_MASK) != 0) { b_minus.f = (dfp.f << 2) - 1; b_minus.e =  dfp.e - 2;} // lower boundary is closer?\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  else { b_minus.f = (dfp.f << 1) - 1; b_minus.e = dfp.e - 1; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  b_minus.f = b_minus.f << (b_minus.e - b_plus.e);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  b_minus.e = b_plus.e;\n  ~~~~~~~~~~~~~~~~~~~~~ \n \n                        \n  mk = cached_pow(MIN_TARGET_EXP - DIYFP_FRACT_SIZE - w.e, &c_mk);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n  w = multiply(w, c_mk);\n  ~~~~~~~~~~~~~~~~~~~~~~\n  b_minus = multiply(b_minus, c_mk);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  b_plus  = multiply(b_plus,  c_mk);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n  success = digit_gen(b_minus, w, b_plus, buffer, length, &kappa);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  *d_exp = kappa - mk;\n  ~~~~~~~~~~~~~~~~~~~~  \n  return success;\n  ~~~~~~~~~~~~~~~       \n }\n ~                      \n \n                        \n static int i_to_str(int val, char *str)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int len, i;\n  ~~~~~~~~~~~           \n  char *s;\n  ~~~~~~~~              \n  char *begin = str;\n  ~~~~~~~~~~~~~~~~~~    \n  if (val < 0) { *str++ = '-'; val = -val; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  s = str;\n  ~~~~~~~~              \n \n                        \n  for(;;)\n  ~~~~~~~               \n  {\n  ~                     \n   int ni = val / 10;\n   ~~~~~~~~~~~~~~~~~~   \n   int digit = val - ni*10;\n   ~~~~~~~~~~~~~~~~~~~~~~~~\n   *s++ = (char)('0' + digit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   if (ni == 0)\n   ~~~~~~~~~~~~         \n    break;\n    ~~~~~~              \n   val = ni;\n   ~~~~~~~~~            \n  }\n  ~                     \n  *s = '\\0';\n  ~~~~~~~~~~            \n  len = (int)(s - str);\n  ~~~~~~~~~~~~~~~~~~~~~ \n  for(i = 0; i < len/2; ++i)\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n  {\n  ~                     \n   char ch = str[i];\n   ~~~~~~~~~~~~~~~~~    \n   str[i] = str[len-1-i];\n   ~~~~~~~~~~~~~~~~~~~~~~\n   str[len-1-i] = ch;\n   ~~~~~~~~~~~~~~~~~~   \n  }\n  ~                     \n \n                        \n  return (int)(s - begin);\n  ~~~~~~~~~~~~~~~~~~~~~~~~\n }\n ~                      \n \n                        \n int dtoa_grisu3(double v, char *dst)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int d_exp, len, success, decimals, i;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint64_t u64 = CAST_U64(v);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~\ngrisu3.c:346:17: note: in expansion of macro 'CAST_U64'\n  uint64_t u64 = CAST_U64(v);\n                 ^~~~~~~~\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c guess_type.cc -o guess_type.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c iconv_file.cc -o iconv_file.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c index_collection.cc -o index_collection.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom.cc -o vroom.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_big_int.cc -o vroom_big_int.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_chr.cc -o vroom_chr.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_date.cc -o vroom_date.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_dbl.cc -o vroom_dbl.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_dttm.cc -o vroom_dttm.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_errors.cpp -o vroom_errors.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_fct.cc -o vroom_fct.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_fwf.cc -o vroom_fwf.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_int.cc -o vroom_int.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_num.cc -o vroom_num.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_rle.cc -o vroom_rle.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_time.cc -o vroom_time.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_write.cc -o vroom_write.o\n"]
[1,"C:/rtools40/mingw32/bin/g++ -std=gnu++11 -shared -s -static-libgcc -o vroom.dll tmp.def Iconv.o LocaleInfo.o altrep.o cpp11.o delimited_index.o delimited_index_connection.o fixed_width_index_connection.o gen.o grisu3.o guess_type.o iconv_file.o index_collection.o vroom.o vroom_big_int.o vroom_chr.o vroom_date.o vroom_dbl.o vroom_dttm.o vroom_errors.o vroom_fct.o vroom_fwf.o vroom_int.o vroom_num.o vroom_rle.o vroom_time.o vroom_write.o -LC:/PROGRA~1/R/R-40~1.5/bin/i386 -lR\n"]
[2,"installing to C:/Users/menken/Documents/R/win-library/4.0/00LOCK-vroom/00new/vroom/libs/i386\r\n\r\n*** arch - x64\r\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c Iconv.cpp -o Iconv.o\n"]
[2,"In file included from Iconv.cpp:2:\nC:/Users/menken/Documents/R/win-library/4.0/cpp11/include/cpp11/protect.hpp:324:3: warning: 'cpp11::preserved' defined but not used [-Wunused-variable]\n } preserved;\n   ^~~~~~~~~\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c LocaleInfo.cpp -o LocaleInfo.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c altrep.cc -o altrep.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c cpp11.cpp -o cpp11.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c delimited_index.cc -o delimited_index.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c delimited_index_connection.cc -o delimited_index_connection.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c fixed_width_index_connection.cc -o fixed_width_index_connection.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c gen.cc -o gen.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"gcc  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -std=gnu99 -mfpmath=sse -msse2 -mstackrealign -c grisu3.c -o grisu3.o\n"]
[2,"grisu3.c: In function 'double2diy_fp':\ngrisu3.c:57:23: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]\n #define CAST_U64(d) (*(uint64_t*)&d)\n                       ^~~~~~~~~~~~~~\n #define MIN(x,y) ((x) <= (y) ? (x) : (y))\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n #define MAX(x,y) ((x) >= (y) ? (x) : (y))\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n #define MIN_CACHED_EXP -348\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n #define CACHED_EXP_STEP 8\n ~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n typedef struct diy_fp\n ~~~~~~~~~~~~~~~~~~~~~  \n {\n ~                      \n  uint64_t f;\n  ~~~~~~~~~~~           \n  int e;\n  ~~~~~~                \n } diy_fp;\n ~~~~~~~~~              \n \n                        \n typedef struct power\n ~~~~~~~~~~~~~~~~~~~~   \n {\n ~                      \n  uint64_t fract;\n  ~~~~~~~~~~~~~~~       \n  int16_t b_exp, d_exp;\n  ~~~~~~~~~~~~~~~~~~~~~ \n } power;\n ~~~~~~~~               \n \n                        \n static const power pow_cache[] =\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  { 0xfa8fd5a0081c0288ULL, -1220, -348 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbaaee17fa23ebf76ULL, -1193, -340 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8b16fb203055ac76ULL, -1166, -332 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcf42894a5dce35eaULL, -1140, -324 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9a6bb0aa55653b2dULL, -1113, -316 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe61acf033d1a45dfULL, -1087, -308 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xab70fe17c79ac6caULL, -1060, -300 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xff77b1fcbebcdc4fULL, -1034, -292 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbe5691ef416bd60cULL, -1007, -284 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8dd01fad907ffc3cULL,  -980, -276 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd3515c2831559a83ULL,  -954, -268 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9d71ac8fada6c9b5ULL,  -927, -260 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xea9c227723ee8bcbULL,  -901, -252 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaecc49914078536dULL,  -874, -244 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x823c12795db6ce57ULL,  -847, -236 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc21094364dfb5637ULL,  -821, -228 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9096ea6f3848984fULL,  -794, -220 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd77485cb25823ac7ULL,  -768, -212 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa086cfcd97bf97f4ULL,  -741, -204 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xef340a98172aace5ULL,  -715, -196 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb23867fb2a35b28eULL,  -688, -188 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x84c8d4dfd2c63f3bULL,  -661, -180 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc5dd44271ad3cdbaULL,  -635, -172 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x936b9fcebb25c996ULL,  -608, -164 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xdbac6c247d62a584ULL,  -582, -156 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa3ab66580d5fdaf6ULL,  -555, -148 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf3e2f893dec3f126ULL,  -529, -140 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb5b5ada8aaff80b8ULL,  -502, -132 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x87625f056c7c4a8bULL,  -475, -124 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc9bcff6034c13053ULL,  -449, -116 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x964e858c91ba2655ULL,  -422, -108 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xdff9772470297ebdULL,  -396, -100 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa6dfbd9fb8e5b88fULL,  -369,  -92 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf8a95fcf88747d94ULL,  -343,  -84 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb94470938fa89bcfULL,  -316,  -76 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8a08f0f8bf0f156bULL,  -289,  -68 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcdb02555653131b6ULL,  -263,  -60 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x993fe2c6d07b7facULL,  -236,  -52 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe45c10c42a2b3b06ULL,  -210,  -44 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaa242499697392d3ULL,  -183,  -36 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xfd87b5f28300ca0eULL,  -157,  -28 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbce5086492111aebULL,  -130,  -20 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8cbccc096f5088ccULL,  -103,  -12 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd1b71758e219652cULL,   -77,   -4 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9c40000000000000ULL,   -50,    4 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe8d4a51000000000ULL,   -24,   12 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xad78ebc5ac620000ULL,     3,   20 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x813f3978f8940984ULL,    30,   28 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc097ce7bc90715b3ULL,    56,   36 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8f7e32ce7bea5c70ULL,    83,   44 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd5d238a4abe98068ULL,   109,   52 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9f4f2726179a2245ULL,   136,   60 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xed63a231d4c4fb27ULL,   162,   68 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb0de65388cc8ada8ULL,   189,   76 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x83c7088e1aab65dbULL,   216,   84 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc45d1df942711d9aULL,   242,   92 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x924d692ca61be758ULL,   269,  100 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xda01ee641a708deaULL,   295,  108 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa26da3999aef774aULL,   322,  116 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf209787bb47d6b85ULL,   348,  124 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb454e4a179dd1877ULL,   375,  132 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x865b86925b9bc5c2ULL,   402,  140 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc83553c5c8965d3dULL,   428,  148 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x952ab45cfa97a0b3ULL,   455,  156 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xde469fbd99a05fe3ULL,   481,  164 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa59bc234db398c25ULL,   508,  172 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf6c69a72a3989f5cULL,   534,  180 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb7dcbf5354e9beceULL,   561,  188 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x88fcf317f22241e2ULL,   588,  196 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcc20ce9bd35c78a5ULL,   614,  204 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x98165af37b2153dfULL,   641,  212 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe2a0b5dc971f303aULL,   667,  220 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa8d9d1535ce3b396ULL,   694,  228 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xfb9b7cd9a4a7443cULL,   720,  236 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbb764c4ca7a44410ULL,   747,  244 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8bab8eefb6409c1aULL,   774,  252 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd01fef10a657842cULL,   800,  260 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9b10a4e5e9913129ULL,   827,  268 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe7109bfba19c0c9dULL,   853,  276 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xac2820d9623bf429ULL,   880,  284 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x80444b5e7aa7cf85ULL,   907,  292 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbf21e44003acdd2dULL,   933,  300 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8e679c2f5e44ff8fULL,   960,  308 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd433179d9c8cb841ULL,   986,  316 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9e19db92b4e31ba9ULL,  1013,  324 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xeb96bf6ebadf77d9ULL,  1039,  332 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaf87023b9bf0ee6bULL,  1066,  340 }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n };\n ~~                     \n \n                        \n static int cached_pow(int exp, diy_fp *p)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int k = (int)ceil((exp+DIYFP_FRACT_SIZE-1) * D_1_LOG2_10);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  int i = (k-MIN_CACHED_EXP-1) / CACHED_EXP_STEP + 1;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  p->f = pow_cache[i].fract;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n  p->e = pow_cache[i].b_exp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return pow_cache[i].d_exp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n }\n ~                      \n \n                        \n static diy_fp minus(diy_fp x, diy_fp y)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  diy_fp d; d.f = x.f - y.f; d.e = x.e;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  assert(x.e == y.e && x.f >= y.f);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return d;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp multiply(diy_fp x, diy_fp y)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  uint64_t a, b, c, d, ac, bc, ad, bd, tmp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp r;\n  ~~~~~~~~~             \n  a = x.f >> 32; b = x.f & MASK32;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  c = y.f >> 32; d = y.f & MASK32;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  ac = a*c; bc = b*c;\n  ~~~~~~~~~~~~~~~~~~~   \n  ad = a*d; bd = b*d;\n  ~~~~~~~~~~~~~~~~~~~   \n  tmp = (bd >> 32) + (ad & MASK32) + (bc & MASK32);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  tmp += 1U << 31; // round\n  ~~~~~~~~~~~~~~~~~~~~~~~~~\n  r.f = ac + (ad >> 32) + (bc >> 32) + (tmp >> 32);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  r.e = x.e + y.e + 64;\n  ~~~~~~~~~~~~~~~~~~~~~ \n  return r;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp normalize_diy_fp(diy_fp n)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  assert(n.f != 0);\n  ~~~~~~~~~~~~~~~~~     \n  while(!(n.f & 0xFFC0000000000000ULL)) { n.f <<= 10; n.e -= 10; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  while(!(n.f & D64_SIGN)) { n.f <<= 1; --n.e; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return n;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp double2diy_fp(double d)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  diy_fp fp;\n  ~~~~~~~~~~            \n  uint64_t u64 = CAST_U64(d);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~\ngrisu3.c:209:17: note: in expansion of macro 'CAST_U64'\n  uint64_t u64 = CAST_U64(d);\n                 ^~~~~~~~\n"]
[2,"grisu3.c: In function 'grisu3':\n"]
[2,"grisu3.c:57:23: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]\n #define CAST_U64(d) (*(uint64_t*)&d)\n                       ^~~~~~~~~~~~~~\n #define MIN(x,y) ((x) <= (y) ? (x) : (y))\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n #define MAX(x,y) ((x) >= (y) ? (x) : (y))\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n #define MIN_CACHED_EXP -348\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n #define CACHED_EXP_STEP 8\n ~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n typedef struct diy_fp\n ~~~~~~~~~~~~~~~~~~~~~  \n {\n ~                      \n  uint64_t f;\n  ~~~~~~~~~~~           \n  int e;\n  ~~~~~~                \n } diy_fp;\n ~~~~~~~~~              \n \n                        \n typedef struct power\n ~~~~~~~~~~~~~~~~~~~~   \n {\n ~                      \n  uint64_t fract;\n  ~~~~~~~~~~~~~~~       \n  int16_t b_exp, d_exp;\n  ~~~~~~~~~~~~~~~~~~~~~ \n } power;\n ~~~~~~~~               \n \n                        \n static const power pow_cache[] =\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  { 0xfa8fd5a0081c0288ULL, -1220, -348 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbaaee17fa23ebf76ULL, -1193, -340 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8b16fb203055ac76ULL, -1166, -332 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcf42894a5dce35eaULL, -1140, -324 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9a6bb0aa55653b2dULL, -1113, -316 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe61acf033d1a45dfULL, -1087, -308 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xab70fe17c79ac6caULL, -1060, -300 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xff77b1fcbebcdc4fULL, -1034, -292 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbe5691ef416bd60cULL, -1007, -284 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8dd01fad907ffc3cULL,  -980, -276 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd3515c2831559a83ULL,  -954, -268 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9d71ac8fada6c9b5ULL,  -927, -260 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xea9c227723ee8bcbULL,  -901, -252 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaecc49914078536dULL,  -874, -244 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x823c12795db6ce57ULL,  -847, -236 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc21094364dfb5637ULL,  -821, -228 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9096ea6f3848984fULL,  -794, -220 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd77485cb25823ac7ULL,  -768, -212 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa086cfcd97bf97f4ULL,  -741, -204 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xef340a98172aace5ULL,  -715, -196 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb23867fb2a35b28eULL,  -688, -188 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x84c8d4dfd2c63f3bULL,  -661, -180 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc5dd44271ad3cdbaULL,  -635, -172 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x936b9fcebb25c996ULL,  -608, -164 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xdbac6c247d62a584ULL,  -582, -156 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa3ab66580d5fdaf6ULL,  -555, -148 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf3e2f893dec3f126ULL,  -529, -140 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb5b5ada8aaff80b8ULL,  -502, -132 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x87625f056c7c4a8bULL,  -475, -124 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc9bcff6034c13053ULL,  -449, -116 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x964e858c91ba2655ULL,  -422, -108 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xdff9772470297ebdULL,  -396, -100 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa6dfbd9fb8e5b88fULL,  -369,  -92 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf8a95fcf88747d94ULL,  -343,  -84 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb94470938fa89bcfULL,  -316,  -76 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8a08f0f8bf0f156bULL,  -289,  -68 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcdb02555653131b6ULL,  -263,  -60 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x993fe2c6d07b7facULL,  -236,  -52 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe45c10c42a2b3b06ULL,  -210,  -44 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaa242499697392d3ULL,  -183,  -36 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xfd87b5f28300ca0eULL,  -157,  -28 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbce5086492111aebULL,  -130,  -20 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8cbccc096f5088ccULL,  -103,  -12 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd1b71758e219652cULL,   -77,   -4 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9c40000000000000ULL,   -50,    4 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe8d4a51000000000ULL,   -24,   12 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xad78ebc5ac620000ULL,     3,   20 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x813f3978f8940984ULL,    30,   28 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc097ce7bc90715b3ULL,    56,   36 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8f7e32ce7bea5c70ULL,    83,   44 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd5d238a4abe98068ULL,   109,   52 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9f4f2726179a2245ULL,   136,   60 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xed63a231d4c4fb27ULL,   162,   68 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb0de65388cc8ada8ULL,   189,   76 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x83c7088e1aab65dbULL,   216,   84 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc45d1df942711d9aULL,   242,   92 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x924d692ca61be758ULL,   269,  100 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xda01ee641a708deaULL,   295,  108 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa26da3999aef774aULL,   322,  116 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf209787bb47d6b85ULL,   348,  124 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb454e4a179dd1877ULL,   375,  132 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x865b86925b9bc5c2ULL,   402,  140 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc83553c5c8965d3dULL,   428,  148 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x952ab45cfa97a0b3ULL,   455,  156 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xde469fbd99a05fe3ULL,   481,  164 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa59bc234db398c25ULL,   508,  172 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf6c69a72a3989f5cULL,   534,  180 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb7dcbf5354e9beceULL,   561,  188 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x88fcf317f22241e2ULL,   588,  196 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcc20ce9bd35c78a5ULL,   614,  204 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x98165af37b2153dfULL,   641,  212 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe2a0b5dc971f303aULL,   667,  220 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa8d9d1535ce3b396ULL,   694,  228 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xfb9b7cd9a4a7443cULL,   720,  236 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbb764c4ca7a44410ULL,   747,  244 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8bab8eefb6409c1aULL,   774,  252 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd01fef10a657842cULL,   800,  260 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9b10a4e5e9913129ULL,   827,  268 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe7109bfba19c0c9dULL,   853,  276 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xac2820d9623bf429ULL,   880,  284 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x80444b5e7aa7cf85ULL,   907,  292 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbf21e44003acdd2dULL,   933,  300 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8e679c2f5e44ff8fULL,   960,  308 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd433179d9c8cb841ULL,   986,  316 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9e19db92b4e31ba9ULL,  1013,  324 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xeb96bf6ebadf77d9ULL,  1039,  332 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaf87023b9bf0ee6bULL,  1066,  340 }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n };\n ~~                     \n \n                        \n static int cached_pow(int exp, diy_fp *p)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int k = (int)ceil((exp+DIYFP_FRACT_SIZE-1) * D_1_LOG2_10);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  int i = (k-MIN_CACHED_EXP-1) / CACHED_EXP_STEP + 1;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  p->f = pow_cache[i].fract;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n  p->e = pow_cache[i].b_exp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return pow_cache[i].d_exp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n }\n ~                      \n \n                        \n static diy_fp minus(diy_fp x, diy_fp y)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  diy_fp d; d.f = x.f - y.f; d.e = x.e;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  assert(x.e == y.e && x.f >= y.f);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return d;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp multiply(diy_fp x, diy_fp y)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  uint64_t a, b, c, d, ac, bc, ad, bd, tmp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp r;\n  ~~~~~~~~~             \n  a = x.f >> 32; b = x.f & MASK32;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  c = y.f >> 32; d = y.f & MASK32;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  ac = a*c; bc = b*c;\n  ~~~~~~~~~~~~~~~~~~~   \n  ad = a*d; bd = b*d;\n  ~~~~~~~~~~~~~~~~~~~   \n  tmp = (bd >> 32) + (ad & MASK32) + (bc & MASK32);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  tmp += 1U << 31; // round\n  ~~~~~~~~~~~~~~~~~~~~~~~~~\n  r.f = ac + (ad >> 32) + (bc >> 32) + (tmp >> 32);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  r.e = x.e + y.e + 64;\n  ~~~~~~~~~~~~~~~~~~~~~ \n  return r;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp normalize_diy_fp(diy_fp n)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  assert(n.f != 0);\n  ~~~~~~~~~~~~~~~~~     \n  while(!(n.f & 0xFFC0000000000000ULL)) { n.f <<= 10; n.e -= 10; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  while(!(n.f & D64_SIGN)) { n.f <<= 1; --n.e; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return n;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp double2diy_fp(double d)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  diy_fp fp;\n  ~~~~~~~~~~            \n  uint64_t u64 = CAST_U64(d);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  if (!(u64 & D64_EXP_MASK)) { fp.f = u64 & D64_FRACT_MASK; fp.e = 1 - D64_EXP_BIAS; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  else { fp.f = (u64 & D64_FRACT_MASK) + D64_IMPLICIT_ONE; fp.e = (int)((u64 & D64_EXP_MASK) >> D64_EXP_POS) - D64_EXP_BIAS; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return fp;\n  ~~~~~~~~~~            \n }\n ~                      \n \n                        \n // pow10_cache[i] = 10^(i-1)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n static const unsigned int pow10_cache[] = { 0, 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000 };\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n static int largest_pow10(uint32_t n, int n_bits, uint32_t *power)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int guess = ((n_bits + 1) * 1233 >> 12) + 1/*skip first entry*/;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  if (n < pow10_cache[guess]) --guess; // We don't have any guarantees that 2^n_bits <= n.\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  *power = pow10_cache[guess];\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return guess;\n  ~~~~~~~~~~~~~         \n }\n ~                      \n \n                        \n static int round_weed(char *buffer, int len, uint64_t wp_W, uint64_t delta, uint64_t rest, uint64_t ten_kappa, uint64_t ulp)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  uint64_t wp_Wup = wp_W - ulp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint64_t wp_Wdown = wp_W + ulp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  while(rest < wp_Wup && delta - rest >= ten_kappa\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   && (rest + ten_kappa < wp_Wup || wp_Wup - rest >= rest + ten_kappa - wp_Wup))\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  {\n  ~                     \n   --buffer[len-1];\n   ~~~~~~~~~~~~~~~~     \n   rest += ten_kappa;\n   ~~~~~~~~~~~~~~~~~~   \n  }\n  ~                     \n  if (rest < wp_Wdown && delta - rest >= ten_kappa\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   && (rest + ten_kappa < wp_Wdown || wp_Wdown - rest > rest + ten_kappa - wp_Wdown))\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   return 0;\n   ~~~~~~~~~            \n \n                        \n  return 2*ulp <= rest && rest <= delta - 4*ulp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n }\n ~                      \n \n                        \n static int digit_gen(diy_fp low, diy_fp w, diy_fp high, char *buffer, int *length, int *kappa)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  uint64_t unit = 1;\n  ~~~~~~~~~~~~~~~~~~    \n  diy_fp too_low = { low.f - unit, low.e };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp too_high = { high.f + unit, high.e };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp unsafe_interval = minus(too_high, too_low);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp one = { 1ULL << -w.e, w.e };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint32_t p1 = (uint32_t)(too_high.f >> -one.e);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint64_t p2 = too_high.f & (one.f - 1);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint32_t div;\n  ~~~~~~~~~~~~~         \n  *kappa = largest_pow10(p1, DIYFP_FRACT_SIZE + one.e, &div);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  *length = 0;\n  ~~~~~~~~~~~~          \n \n                        \n  while(*kappa > 0)\n  ~~~~~~~~~~~~~~~~~     \n  {\n  ~                     \n   uint64_t rest;\n   ~~~~~~~~~~~~~~       \n   int digit = p1 / div;\n   ~~~~~~~~~~~~~~~~~~~~~\n   buffer[*length] = (char)('0' + digit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   ++*length;\n   ~~~~~~~~~~           \n   p1 %= div;\n   ~~~~~~~~~~           \n   --*kappa;\n   ~~~~~~~~~            \n   rest = ((uint64_t)p1 << -one.e) + p2;\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   if (rest < unsafe_interval.f) return round_weed(buffer, *length, minus(too_high, w).f, unsafe_interval.f, rest, (uint64_t)div << -one.e, unit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   div /= 10;\n   ~~~~~~~~~~           \n  }\n  ~                     \n \n                        \n  for(;;)\n  ~~~~~~~               \n  {\n  ~                     \n   int digit;\n   ~~~~~~~~~~           \n   p2 *= 10;\n   ~~~~~~~~~            \n   unit *= 10;\n   ~~~~~~~~~~~          \n   unsafe_interval.f *= 10;\n   ~~~~~~~~~~~~~~~~~~~~~~~~\n   // Integer division by one.\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   digit = (int)(p2 >> -one.e);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   buffer[*length] = (char)('0' + digit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   ++*length;\n   ~~~~~~~~~~           \n   p2 &= one.f - 1;  // Modulo by one.\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   --*kappa;\n   ~~~~~~~~~            \n   if (p2 < unsafe_interval.f) return round_weed(buffer, *length, minus(too_high, w).f * unit, unsafe_interval.f, p2, one.f, unit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  }\n  ~                     \n }\n ~                      \n \n                        \n static int grisu3(double v, char *buffer, int *length, int *d_exp)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int mk, kappa, success;\n  ~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp dfp = double2diy_fp(v);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp w = normalize_diy_fp(dfp);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n  // normalize boundaries\n  ~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp t = { (dfp.f << 1) + 1, dfp.e - 1 };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp b_plus = normalize_diy_fp(t);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp b_minus;\n  ~~~~~~~~~~~~~~~       \n  diy_fp c_mk; // Cached power of ten: 10^-k\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint64_t u64 = CAST_U64(v);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~\ngrisu3.c:296:17: note: in expansion of macro 'CAST_U64'\n  uint64_t u64 = CAST_U64(v);\n                 ^~~~~~~~\n"]
[2,"grisu3.c: In function 'dtoa_grisu3':\ngrisu3.c:57:23: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]\n #define CAST_U64(d) (*(uint64_t*)&d)\n                       ^~~~~~~~~~~~~~\n #define MIN(x,y) ((x) <= (y) ? (x) : (y))\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n #define MAX(x,y) ((x) >= (y) ? (x) : (y))\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n #define MIN_CACHED_EXP -348\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n #define CACHED_EXP_STEP 8\n ~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n typedef struct diy_fp\n ~~~~~~~~~~~~~~~~~~~~~  \n {\n ~                      \n  uint64_t f;\n  ~~~~~~~~~~~           \n  int e;\n  ~~~~~~                \n } diy_fp;\n ~~~~~~~~~              \n \n                        \n typedef struct power\n ~~~~~~~~~~~~~~~~~~~~   \n {\n ~                      \n  uint64_t fract;\n  ~~~~~~~~~~~~~~~       \n  int16_t b_exp, d_exp;\n  ~~~~~~~~~~~~~~~~~~~~~ \n } power;\n ~~~~~~~~               \n \n                        \n static const power pow_cache[] =\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  { 0xfa8fd5a0081c0288ULL, -1220, -348 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbaaee17fa23ebf76ULL, -1193, -340 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8b16fb203055ac76ULL, -1166, -332 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcf42894a5dce35eaULL, -1140, -324 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9a6bb0aa55653b2dULL, -1113, -316 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe61acf033d1a45dfULL, -1087, -308 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xab70fe17c79ac6caULL, -1060, -300 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xff77b1fcbebcdc4fULL, -1034, -292 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbe5691ef416bd60cULL, -1007, -284 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8dd01fad907ffc3cULL,  -980, -276 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd3515c2831559a83ULL,  -954, -268 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9d71ac8fada6c9b5ULL,  -927, -260 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xea9c227723ee8bcbULL,  -901, -252 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaecc49914078536dULL,  -874, -244 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x823c12795db6ce57ULL,  -847, -236 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc21094364dfb5637ULL,  -821, -228 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9096ea6f3848984fULL,  -794, -220 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd77485cb25823ac7ULL,  -768, -212 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa086cfcd97bf97f4ULL,  -741, -204 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xef340a98172aace5ULL,  -715, -196 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb23867fb2a35b28eULL,  -688, -188 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x84c8d4dfd2c63f3bULL,  -661, -180 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc5dd44271ad3cdbaULL,  -635, -172 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x936b9fcebb25c996ULL,  -608, -164 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xdbac6c247d62a584ULL,  -582, -156 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa3ab66580d5fdaf6ULL,  -555, -148 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf3e2f893dec3f126ULL,  -529, -140 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb5b5ada8aaff80b8ULL,  -502, -132 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x87625f056c7c4a8bULL,  -475, -124 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc9bcff6034c13053ULL,  -449, -116 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x964e858c91ba2655ULL,  -422, -108 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xdff9772470297ebdULL,  -396, -100 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa6dfbd9fb8e5b88fULL,  -369,  -92 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf8a95fcf88747d94ULL,  -343,  -84 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb94470938fa89bcfULL,  -316,  -76 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8a08f0f8bf0f156bULL,  -289,  -68 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcdb02555653131b6ULL,  -263,  -60 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x993fe2c6d07b7facULL,  -236,  -52 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe45c10c42a2b3b06ULL,  -210,  -44 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaa242499697392d3ULL,  -183,  -36 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xfd87b5f28300ca0eULL,  -157,  -28 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbce5086492111aebULL,  -130,  -20 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8cbccc096f5088ccULL,  -103,  -12 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd1b71758e219652cULL,   -77,   -4 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9c40000000000000ULL,   -50,    4 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe8d4a51000000000ULL,   -24,   12 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xad78ebc5ac620000ULL,     3,   20 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x813f3978f8940984ULL,    30,   28 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc097ce7bc90715b3ULL,    56,   36 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8f7e32ce7bea5c70ULL,    83,   44 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd5d238a4abe98068ULL,   109,   52 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9f4f2726179a2245ULL,   136,   60 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xed63a231d4c4fb27ULL,   162,   68 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb0de65388cc8ada8ULL,   189,   76 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x83c7088e1aab65dbULL,   216,   84 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc45d1df942711d9aULL,   242,   92 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x924d692ca61be758ULL,   269,  100 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xda01ee641a708deaULL,   295,  108 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa26da3999aef774aULL,   322,  116 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf209787bb47d6b85ULL,   348,  124 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb454e4a179dd1877ULL,   375,  132 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x865b86925b9bc5c2ULL,   402,  140 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xc83553c5c8965d3dULL,   428,  148 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x952ab45cfa97a0b3ULL,   455,  156 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xde469fbd99a05fe3ULL,   481,  164 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa59bc234db398c25ULL,   508,  172 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xf6c69a72a3989f5cULL,   534,  180 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xb7dcbf5354e9beceULL,   561,  188 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x88fcf317f22241e2ULL,   588,  196 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xcc20ce9bd35c78a5ULL,   614,  204 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x98165af37b2153dfULL,   641,  212 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe2a0b5dc971f303aULL,   667,  220 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xa8d9d1535ce3b396ULL,   694,  228 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xfb9b7cd9a4a7443cULL,   720,  236 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbb764c4ca7a44410ULL,   747,  244 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8bab8eefb6409c1aULL,   774,  252 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd01fef10a657842cULL,   800,  260 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9b10a4e5e9913129ULL,   827,  268 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xe7109bfba19c0c9dULL,   853,  276 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xac2820d9623bf429ULL,   880,  284 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x80444b5e7aa7cf85ULL,   907,  292 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xbf21e44003acdd2dULL,   933,  300 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x8e679c2f5e44ff8fULL,   960,  308 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xd433179d9c8cb841ULL,   986,  316 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0x9e19db92b4e31ba9ULL,  1013,  324 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xeb96bf6ebadf77d9ULL,  1039,  332 },\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  { 0xaf87023b9bf0ee6bULL,  1066,  340 }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n };\n ~~                     \n \n                        \n static int cached_pow(int exp, diy_fp *p)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int k = (int)ceil((exp+DIYFP_FRACT_SIZE-1) * D_1_LOG2_10);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  int i = (k-MIN_CACHED_EXP-1) / CACHED_EXP_STEP + 1;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  p->f = pow_cache[i].fract;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n  p->e = pow_cache[i].b_exp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return pow_cache[i].d_exp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n }\n ~                      \n \n                        \n static diy_fp minus(diy_fp x, diy_fp y)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  diy_fp d; d.f = x.f - y.f; d.e = x.e;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  assert(x.e == y.e && x.f >= y.f);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return d;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp multiply(diy_fp x, diy_fp y)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  uint64_t a, b, c, d, ac, bc, ad, bd, tmp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp r;\n  ~~~~~~~~~             \n  a = x.f >> 32; b = x.f & MASK32;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  c = y.f >> 32; d = y.f & MASK32;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  ac = a*c; bc = b*c;\n  ~~~~~~~~~~~~~~~~~~~   \n  ad = a*d; bd = b*d;\n  ~~~~~~~~~~~~~~~~~~~   \n  tmp = (bd >> 32) + (ad & MASK32) + (bc & MASK32);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  tmp += 1U << 31; // round\n  ~~~~~~~~~~~~~~~~~~~~~~~~~\n  r.f = ac + (ad >> 32) + (bc >> 32) + (tmp >> 32);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  r.e = x.e + y.e + 64;\n  ~~~~~~~~~~~~~~~~~~~~~ \n  return r;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp normalize_diy_fp(diy_fp n)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  assert(n.f != 0);\n  ~~~~~~~~~~~~~~~~~     \n  while(!(n.f & 0xFFC0000000000000ULL)) { n.f <<= 10; n.e -= 10; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  while(!(n.f & D64_SIGN)) { n.f <<= 1; --n.e; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return n;\n  ~~~~~~~~~             \n }\n ~                      \n \n                        \n static diy_fp double2diy_fp(double d)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  diy_fp fp;\n  ~~~~~~~~~~            \n  uint64_t u64 = CAST_U64(d);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  if (!(u64 & D64_EXP_MASK)) { fp.f = u64 & D64_FRACT_MASK; fp.e = 1 - D64_EXP_BIAS; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  else { fp.f = (u64 & D64_FRACT_MASK) + D64_IMPLICIT_ONE; fp.e = (int)((u64 & D64_EXP_MASK) >> D64_EXP_POS) - D64_EXP_BIAS; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return fp;\n  ~~~~~~~~~~            \n }\n ~                      \n \n                        \n // pow10_cache[i] = 10^(i-1)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n static const unsigned int pow10_cache[] = { 0, 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000 };\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n static int largest_pow10(uint32_t n, int n_bits, uint32_t *power)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int guess = ((n_bits + 1) * 1233 >> 12) + 1/*skip first entry*/;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  if (n < pow10_cache[guess]) --guess; // We don't have any guarantees that 2^n_bits <= n.\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  *power = pow10_cache[guess];\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  return guess;\n  ~~~~~~~~~~~~~         \n }\n ~                      \n \n                        \n static int round_weed(char *buffer, int len, uint64_t wp_W, uint64_t delta, uint64_t rest, uint64_t ten_kappa, uint64_t ulp)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  uint64_t wp_Wup = wp_W - ulp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint64_t wp_Wdown = wp_W + ulp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  while(rest < wp_Wup && delta - rest >= ten_kappa\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   && (rest + ten_kappa < wp_Wup || wp_Wup - rest >= rest + ten_kappa - wp_Wup))\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  {\n  ~                     \n   --buffer[len-1];\n   ~~~~~~~~~~~~~~~~     \n   rest += ten_kappa;\n   ~~~~~~~~~~~~~~~~~~   \n  }\n  ~                     \n  if (rest < wp_Wdown && delta - rest >= ten_kappa\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   && (rest + ten_kappa < wp_Wdown || wp_Wdown - rest > rest + ten_kappa - wp_Wdown))\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   return 0;\n   ~~~~~~~~~            \n \n                        \n  return 2*ulp <= rest && rest <= delta - 4*ulp;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n }\n ~                      \n \n                        \n static int digit_gen(diy_fp low, diy_fp w, diy_fp high, char *buffer, int *length, int *kappa)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  uint64_t unit = 1;\n  ~~~~~~~~~~~~~~~~~~    \n  diy_fp too_low = { low.f - unit, low.e };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp too_high = { high.f + unit, high.e };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp unsafe_interval = minus(too_high, too_low);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp one = { 1ULL << -w.e, w.e };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint32_t p1 = (uint32_t)(too_high.f >> -one.e);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint64_t p2 = too_high.f & (one.f - 1);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint32_t div;\n  ~~~~~~~~~~~~~         \n  *kappa = largest_pow10(p1, DIYFP_FRACT_SIZE + one.e, &div);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  *length = 0;\n  ~~~~~~~~~~~~          \n \n                        \n  while(*kappa > 0)\n  ~~~~~~~~~~~~~~~~~     \n  {\n  ~                     \n   uint64_t rest;\n   ~~~~~~~~~~~~~~       \n   int digit = p1 / div;\n   ~~~~~~~~~~~~~~~~~~~~~\n   buffer[*length] = (char)('0' + digit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   ++*length;\n   ~~~~~~~~~~           \n   p1 %= div;\n   ~~~~~~~~~~           \n   --*kappa;\n   ~~~~~~~~~            \n   rest = ((uint64_t)p1 << -one.e) + p2;\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   if (rest < unsafe_interval.f) return round_weed(buffer, *length, minus(too_high, w).f, unsafe_interval.f, rest, (uint64_t)div << -one.e, unit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   div /= 10;\n   ~~~~~~~~~~           \n  }\n  ~                     \n \n                        \n  for(;;)\n  ~~~~~~~               \n  {\n  ~                     \n   int digit;\n   ~~~~~~~~~~           \n   p2 *= 10;\n   ~~~~~~~~~            \n   unit *= 10;\n   ~~~~~~~~~~~          \n   unsafe_interval.f *= 10;\n   ~~~~~~~~~~~~~~~~~~~~~~~~\n   // Integer division by one.\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   digit = (int)(p2 >> -one.e);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   buffer[*length] = (char)('0' + digit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   ++*length;\n   ~~~~~~~~~~           \n   p2 &= one.f - 1;  // Modulo by one.\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   --*kappa;\n   ~~~~~~~~~            \n   if (p2 < unsafe_interval.f) return round_weed(buffer, *length, minus(too_high, w).f * unit, unsafe_interval.f, p2, one.f, unit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  }\n  ~                     \n }\n ~                      \n \n                        \n static int grisu3(double v, char *buffer, int *length, int *d_exp)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int mk, kappa, success;\n  ~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp dfp = double2diy_fp(v);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp w = normalize_diy_fp(dfp);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n  // normalize boundaries\n  ~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp t = { (dfp.f << 1) + 1, dfp.e - 1 };\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp b_plus = normalize_diy_fp(t);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  diy_fp b_minus;\n  ~~~~~~~~~~~~~~~       \n  diy_fp c_mk; // Cached power of ten: 10^-k\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint64_t u64 = CAST_U64(v);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  assert(v > 0 && v <= 1.7976931348623157e308); // Grisu only handles strictly positive finite numbers.\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  if (!(u64 & D64_FRACT_MASK) && (u64 & D64_EXP_MASK) != 0) { b_minus.f = (dfp.f << 2) - 1; b_minus.e =  dfp.e - 2;} // lower boundary is closer?\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  else { b_minus.f = (dfp.f << 1) - 1; b_minus.e = dfp.e - 1; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  b_minus.f = b_minus.f << (b_minus.e - b_plus.e);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  b_minus.e = b_plus.e;\n  ~~~~~~~~~~~~~~~~~~~~~ \n \n                        \n  mk = cached_pow(MIN_TARGET_EXP - DIYFP_FRACT_SIZE - w.e, &c_mk);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n  w = multiply(w, c_mk);\n  ~~~~~~~~~~~~~~~~~~~~~~\n  b_minus = multiply(b_minus, c_mk);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  b_plus  = multiply(b_plus,  c_mk);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n                        \n  success = digit_gen(b_minus, w, b_plus, buffer, length, &kappa);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  *d_exp = kappa - mk;\n  ~~~~~~~~~~~~~~~~~~~~  \n  return success;\n  ~~~~~~~~~~~~~~~       \n }\n ~                      \n \n                        \n static int i_to_str(int val, char *str)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int len, i;\n  ~~~~~~~~~~~           \n  char *s;\n  ~~~~~~~~              \n  char *begin = str;\n  ~~~~~~~~~~~~~~~~~~    \n  if (val < 0) { *str++ = '-'; val = -val; }\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  s = str;\n  ~~~~~~~~              \n \n                        \n  for(;;)\n  ~~~~~~~               \n  {\n  ~                     \n   int ni = val / 10;\n   ~~~~~~~~~~~~~~~~~~   \n   int digit = val - ni*10;\n   ~~~~~~~~~~~~~~~~~~~~~~~~\n   *s++ = (char)('0' + digit);\n   ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   if (ni == 0)\n   ~~~~~~~~~~~~         \n    break;\n    ~~~~~~              \n   val = ni;\n   ~~~~~~~~~            \n  }\n  ~                     \n  *s = '\\0';\n  ~~~~~~~~~~            \n  len = (int)(s - str);\n  ~~~~~~~~~~~~~~~~~~~~~ \n  for(i = 0; i < len/2; ++i)\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~\n  {\n  ~                     \n   char ch = str[i];\n   ~~~~~~~~~~~~~~~~~    \n   str[i] = str[len-1-i];\n   ~~~~~~~~~~~~~~~~~~~~~~\n   str[len-1-i] = ch;\n   ~~~~~~~~~~~~~~~~~~   \n  }\n  ~                     \n \n                        \n  return (int)(s - begin);\n  ~~~~~~~~~~~~~~~~~~~~~~~~\n }\n ~                      \n \n                        \n int dtoa_grisu3(double v, char *dst)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n {\n ~                      \n  int d_exp, len, success, decimals, i;\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  uint64_t u64 = CAST_U64(v);\n  ~~~~~~~~~~~~~~~~~~~~~~~~~\ngrisu3.c:346:17: note: in expansion of macro 'CAST_U64'\n  uint64_t u64 = CAST_U64(v);\n                 ^~~~~~~~\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c guess_type.cc -o guess_type.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c iconv_file.cc -o iconv_file.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c index_collection.cc -o index_collection.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom.cc -o vroom.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_big_int.cc -o vroom_big_int.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_chr.cc -o vroom_chr.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_date.cc -o vroom_date.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_dbl.cc -o vroom_dbl.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_dttm.cc -o vroom_dttm.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_errors.cpp -o vroom_errors.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_fct.cc -o vroom_fct.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_fwf.cc -o vroom_fwf.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_int.cc -o vroom_int.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_num.cc -o vroom_num.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_rle.cc -o vroom_rle.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_time.cc -o vroom_time.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -Imio/include -DWIN32_LEAN_AND_MEAN -Ispdlog/include -DFMT_HEADER_ONLY -I'C:/Users/menken/Documents/R/win-library/4.0/cpp11/include' -I'C:/Users/menken/Documents/R/win-library/4.0/progress/include' -I'C:/Users/menken/Documents/R/win-library/4.0/tzdb/include'        -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c vroom_write.cc -o vroom_write.o\n"]
[1,"C:/rtools40/mingw64/bin/g++ -std=gnu++11 -shared -s -static-libgcc -o vroom.dll tmp.def Iconv.o LocaleInfo.o altrep.o cpp11.o delimited_index.o delimited_index_connection.o fixed_width_index_connection.o gen.o grisu3.o guess_type.o iconv_file.o index_collection.o vroom.o vroom_big_int.o vroom_chr.o vroom_date.o vroom_dbl.o vroom_dttm.o vroom_errors.o vroom_fct.o vroom_fwf.o vroom_int.o vroom_num.o vroom_rle.o vroom_time.o vroom_write.o -LC:/PROGRA~1/R/R-40~1.5/bin/x64 -lR\n"]
[2,"installing to C:/Users/menken/Documents/R/win-library/4.0/00LOCK-vroom/00new/vroom/libs/x64\r\n"]
[2,"** R\r\n"]
[2,"** inst\r\n"]
[2,"** byte-compile and prepare package for lazy loading\r\n"]
[1,"Error in loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]]) : \r\n"]
[1,"  namespace 'lifecycle' 1.0.1 is being loaded, but >= 1.0.3 is required\r\n"]
[1,"Calls: <Anonymous> ... namespaceImportFrom -> asNamespace -> loadNamespace\r\n"]
[1,"Execution halted\r\n"]
[2,"ERROR: lazy loading failed for package 'vroom'\r\n* removing 'C:/Users/menken/Documents/R/win-library/4.0/vroom'\r\n"]
[2,"ERROR: dependency 'vroom' is not available for package 'readr'\r\n* removing 'C:/Users/menken/Documents/R/win-library/4.0/readr'\r\n"]
[1,"\r\n"]
[1,"\r\n"]
[1,"[8/8] Installing Rcpp...\r\n"]
[1,"\r\n"]
[2,"\r\nThe downloaded source packages are in\r\n\t'C:\\Users\\menken\\AppData\\Local\\Temp\\Rtmp6x6dy5\\downloaded_packages'\r\nInstalling package into 'C:/Users/menken/Documents/R/win-library/4.0'\r\n(as 'lib' is unspecified)\r\n"]
[1,"\r\n"]
[1,"  There is a binary version available but the source version is later:\r\n"]
[1,"      binary source needs_compilation\r\n"]
[1,"Rcpp 1.0.8.3 1.0.11              TRUE\r\n"]
[1,"\r\n"]
[2,"installing the source package 'Rcpp'\r\n\r\ntrying URL 'https://cran.rstudio.com/src/contrib/Rcpp_1.0.11.tar.gz'\r\n"]
[2,"Content type 'application/x-gzip' length 2994004 bytes (2.9 MB)\r\n====="]
[2,"========="]
[2,"="]
[2,"=========="]
[2,"========="]
[2,"="]
[2,"========="]
[2,"======\r\ndownloaded 2.9 MB\r\n\r\n"]
[2,"* installing *source* package 'Rcpp' ...\r\n"]
[2,"** package 'Rcpp' successfully unpacked and MD5 sums checked\r\n** using staged installation\r\n"]
[2,"** libs\r\n\r\n*** arch - i386\r\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -I../inst/include/         -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c api.cpp -o api.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -I../inst/include/         -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c attributes.cpp -o attributes.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -I../inst/include/         -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c barrier.cpp -o barrier.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -I../inst/include/         -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c date.cpp -o date.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -I../inst/include/         -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c module.cpp -o module.o\n"]
[1,"\"C:/rtools40/mingw32/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -I../inst/include/         -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c rcpp_init.cpp -o rcpp_init.o\n"]
[1,"C:/rtools40/mingw32/bin/g++ -std=gnu++11 -shared -s -static-libgcc -o Rcpp.dll tmp.def api.o attributes.o barrier.o date.o module.o rcpp_init.o -LC:/PROGRA~1/R/R-40~1.5/bin/i386 -lR\n"]
[2,"installing to C:/Users/menken/Documents/R/win-library/4.0/00LOCK-Rcpp/00new/Rcpp/libs/i386\r\n\r\n*** arch - x64\r\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -I../inst/include/         -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c api.cpp -o api.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -I../inst/include/         -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c attributes.cpp -o attributes.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -I../inst/include/         -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c barrier.cpp -o barrier.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -I../inst/include/         -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c date.cpp -o date.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -I../inst/include/         -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c module.cpp -o module.o\n"]
[1,"\"C:/rtools40/mingw64/bin/\"g++ -std=gnu++11  -I\"C:/PROGRA~1/R/R-40~1.5/include\" -DNDEBUG -I../inst/include/         -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign -c rcpp_init.cpp -o rcpp_init.o\n"]
[1,"C:/rtools40/mingw64/bin/g++ -std=gnu++11 -shared -s -static-libgcc -o Rcpp.dll tmp.def api.o attributes.o barrier.o date.o module.o rcpp_init.o -LC:/PROGRA~1/R/R-40~1.5/bin/x64 -lR\n"]
[2,"installing to C:/Users/menken/Documents/R/win-library/4.0/00LOCK-Rcpp/00new/Rcpp/libs/x64\r\n"]
[2,"** R\r\n"]
[2,"** inst\r\n"]
[2,"** byte-compile and prepare package for lazy loading\r\n"]
[2,"** help\r\n"]
[2,"*** installing help indices\r\n"]
[1,"  converting help for package 'Rcpp'\r\n"]
[1,"    CppClass-class                          html  "]
[2,"    finding HTML links ... done\r\n"]
[1,"\r\n"]
[1,"    CppConstructor-class                    html  "]
[1,"\r\n"]
[1,"    CppField-class                          html  \r\n"]
[1,"    CppFunction-class                       html  "]
[1,"\r\n"]
[1,"    CppObject-class                         html  "]
[1,"\r\n"]
[1,"    CppOverloadedMethods-class              html  \r\n"]
[1,"    DollarNames-methods                     html  "]
[1,"\r\n"]
[1,"    Module-class                            html  \r\n"]
[1,"    Module                                  html  "]
[1,"\r\n"]
[1,"    Rcpp-deprecated                         html  "]
[1,"\r\n"]
[1,"    Rcpp-internal                           html  \r\n"]
[1,"    Rcpp-package                            html  "]
[1,"\r\n"]
[1,"    Rcpp.package.skeleton                   html  "]
[1,"\r\n"]
[1,"    Rcpp.plugin.maker                       html  \r\n"]
[1,"    RcppLdFlags                             html  "]
[1,"\r\n"]
[1,"    RcppUnitTests                           html  \r\n"]
[1,"    compileAttributes                       html  "]
[1,"\r\n"]
[1,"    compilerCheck                           html  \r\n"]
[1,"    cppFunction                             html  "]
[1,"\r\n"]
[1,"    demangle                                html  \r\n"]
[1,"    dependsAttribute                        html  "]
[1,"\r\n"]
[1,"    evalCpp                                 html  "]
[1,"\r\n"]
[1,"    exportAttribute                         html  "]
[1,"\r\n"]
[1,"    exposeClass                             html  "]
[1,"\r\n"]
[1,"    formals                                 html  "]
[1,"\r\n"]
[1,"    getRcppVersion                          html  \r\n"]
[1,"    interfacesAttribute                     html  "]
[1,"\r\n"]
[1,"    loadModule                              html  "]
[1,"\r\n"]
[1,"    loadRcppModules-deprecated              html  \r\n"]
[1,"    pluginsAttribute                        html  "]
[1,"\r\n"]
[1,"    populate                                html  \r\n"]
[1,"    registerPlugin                          html  "]
[1,"\r\n"]
[1,"    setRcppClass                            html  "]
[1,"\r\n"]
[1,"    sourceCpp                               html  "]
[1,"\r\n"]
[2,"** building package indices\r\n"]
[2,"** installing vignettes\r\n"]
[2,"** testing if installed package can be loaded from temporary location\r\n*** arch - i386\r\n"]
[2,"*** arch - x64\r\n"]
[2,"** testing if installed package can be loaded from final location\r\n*** arch - i386\r\n"]
[2,"*** arch - x64\r\n"]
[2,"** testing if installed package keeps a record of temporary installation path\r\n"]
[2,"* DONE (Rcpp)\r\n"]
[2,"\r\nThe downloaded source packages are in\r\n\t'C:\\Users\\menken\\AppData\\Local\\Temp\\Rtmp6x6dy5\\downloaded_packages'\r\n\r\n\r\n<U+2714> Packages successfully installed.\r\nWarning messages:\r\n1: In utils::install.packages(\"cli\", repos = \"https://cran.rstudio.com/\") :\r\n  installation of package 'cli' had non-zero exit status\r\n2: In utils::install.packages(\"vroom\", repos = \"https://cran.rstudio.com/\") :\r\n  installation of package 'rlang' had non-zero exit status\r\n3: In utils::install.packages(\"vroom\", repos = \"https://cran.rstudio.com/\") :\r\n  installation of package 'cli' had non-zero exit status\r\n4: In utils::install.packages(\"vroom\", repos = \"https://cran.rstudio.com/\") :\r\n  installation of package 'lifecycle' had non-zero exit status\r\n5: In utils::install.packages(\"vroom\", repos = \"https://cran.rstudio.com/\") :\r\n  installation of package 'vroom' had non-zero exit status\r\n6: In utils::install.packages(\"readr\", repos = \"https://cran.rstudio.com/\") :\r\n  installation of package 'rlang' had non-zero exit status\r\n7: In utils::install.packages(\"readr\", repos = \"https://cran.rstudio.com/\") :\r\n  installation of package 'cli' had non-zero exit status\r\n8: In utils::install.packages(\"readr\", repos = \"https://cran.rstudio.com/\") :\r\n  installation of package 'lifecycle' had non-zero exit status\r\n9: In utils::install.packages(\"readr\", repos = \"https://cran.rstudio.com/\") :\r\n  installation of package 'vroom' had non-zero exit status\r\n10: In utils::install.packages(\"readr\", repos = \"https://cran.rstudio.com/\") :\r\n  installation of package 'readr' had non-zero exit status\r\n"]
