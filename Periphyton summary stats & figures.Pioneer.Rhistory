S4AvgPI.F.res <- wilcox.test(S4AvgPI.PD, S4AvgPI.FE, paired = FALSE)
S4AvgTF.F.res <- wilcox.test(S4AvgTF.PD, S4AvgTF.FE, paired = FALSE)
S4AvgMA.F.res <- wilcox.test(S4AvgMA.PD, S4AvgMA.FE, paired = FALSE)
S4AvgBR.F.res <- wilcox.test(S4AvgBR.PD, S4AvgBR.FE, paired = FALSE)
S4AvgBS.F.res <- wilcox.test(S4AvgBS.PD, S4AvgBS.FE, paired = FALSE)
S4AvgPI.F.res$p.value
S4AvgTF.F.res$p.value
S4AvgMA.F.res$p.value
S4AvgBR.F.res$p.value
S4AvgBS.F.res$p.value
S1AvgPI.F.res$p.value
S1AvgTF.F.res$p.value
S1AvgMA.F.res$p.value
S1AvgBR.F.res$p.value
S1AvgBS.F.res$p.value
S2AvgPI.F.res <- wilcox.test(S2AvgPI.PD, S2AvgPI.FE, paired = FALSE)
S2AvgTF.F.res <- wilcox.test(S2AvgTF.PD, S2AvgTF.FE, paired = FALSE)
S2AvgMA.F.res <- wilcox.test(S2AvgMA.PD, S2AvgMA.FE, paired = FALSE)
S2AvgBR.F.res <- wilcox.test(S2AvgBR.PD, S2AvgBR.FE, paired = FALSE)
S2AvgBS.F.res <- wilcox.test(S2AvgBS.PD, S2AvgBS.FE, paired = FALSE)
S2AvgPI.F.res$p.value
S2AvgTF.F.res$p.value
S2AvgMA.F.res$p.value
S2AvgBR.F.res$p.value
S2AvgBS.F.res$p.value
S3AvgPI.F.res <- wilcox.test(S3AvgPI.PD, S3AvgPI.FE, paired = FALSE)
S3AvgTF.F.res <- wilcox.test(S3AvgTF.PD, S3AvgTF.FE, paired = FALSE)
S3AvgMA.F.res <- wilcox.test(S3AvgMA.PD, S3AvgMA.FE, paired = FALSE)
S3AvgBR.F.res <- wilcox.test(S3AvgBR.PD, S3AvgBR.FE, paired = FALSE)
S3AvgBS.F.res <- wilcox.test(S3AvgBS.PD, S3AvgBS.FE, paired = FALSE)
S3AvgPI.F.res$p.value
S3AvgTF.F.res$p.value
S3AvgMA.F.res$p.value
S3AvgBR.F.res$p.value
S3AvgBS.F.res$p.value
S4AvgPI.F.res <- wilcox.test(S4AvgPI.PD, S4AvgPI.FE, paired = FALSE)
S4AvgTF.F.res <- wilcox.test(S4AvgTF.PD, S4AvgTF.FE, paired = FALSE)
S4AvgMA.F.res <- wilcox.test(S4AvgMA.PD, S4AvgMA.FE, paired = FALSE)
S4AvgBR.F.res <- wilcox.test(S4AvgBR.PD, S4AvgBR.FE, paired = FALSE)
S4AvgBS.F.res <- wilcox.test(S4AvgBS.PD, S4AvgBS.FE, paired = FALSE)
S4AvgPI.F.res$p.value
S4AvgTF.F.res$p.value
S4AvgMA.F.res$p.value
S4AvgBR.F.res$p.value
S4AvgBS.F.res$p.value
S1Avg.F.res.p.lab <- c("S1AvgPI.F.res$p", "S1AvgTF.F.res$p", "S1AvgMA.F.res$p", "S1AvgBR.F.res$p", "S1AvgBS.F.res$p")
S1Avg.F.res.p <- c(S1AvgPI.F.res$p.value, S1AvgTF.F.res$p.value, S1AvgMA.F.res$p.value, S1AvgBR.F.res$p.value, S1AvgBS.F.res$p.value)
S2Avg.F.res.p.lab <- c("S2AvgPI.F.res$p", "S2AvgTF.F.res$p", "S2AvgMA.F.res$p", "S2AvgBR.F.res$p", "S2AvgBS.F.res$p")
S2Avg.F.res.p <- c(S2AvgPI.F.res$p.value, S2AvgTF.F.res$p.value, S2AvgMA.F.res$p.value, S2AvgBR.F.res$p.value, S2AvgBS.F.res$p.value)
S3Avg.F.res.p.lab <- c("S3AvgPI.F.res$p", "S3AvgTF.F.res$p", "S3AvgMA.F.res$p", "S3AvgBR.F.res$p", "S3AvgBS.F.res$p")
S3Avg.F.res.p <- c(S3AvgPI.F.res$p.value, S3AvgTF.F.res$p.value, S3AvgMA.F.res$p.value, S3AvgBR.F.res$p.value, S3AvgBS.F.res$p.value)
S4Avg.F.res.p.lab <- c("S4AvgPI.F.res$p", "S4AvgTF.F.res$p", "S4AvgMA.F.res$p", "S4AvgBR.F.res$p", "S4AvgBS.F.res$p")
S4Avg.F.res.p <- c(S4AvgPI.F.res$p.value, S4AvgTF.F.res$p.value, S4AvgMA.F.res$p.value, S4AvgBR.F.res$p.value, S4AvgBS.F.res$p.value)
S2Wilc <- read.csv("S2Wilc.csv", header = TRUE)
S3Wilc <- read.csv("S3Wilc.csv", header = TRUE)
S4Wilc <- read.csv("S4Wilc.csv", header = TRUE)
S2AvgPI.PD <- subset(S2Wilc,  Scen == "PD", S2AvgPI, drop = TRUE)
S2AvgPI.FE <- subset(S2Wilc,  Scen == "FE", S2AvgPI, drop = TRUE)
S2AvgTF.PD <- subset(S2Wilc,  Scen == "PD", S2AvgTF, drop = TRUE)
S2AvgTF.FE <- subset(S2Wilc,  Scen == "FE", S2AvgTF, drop = TRUE)
S2AvgMA.PD <- subset(S2Wilc,  Scen == "PD", S2AvgMA, drop = TRUE)
S2AvgMA.FE <- subset(S2Wilc,  Scen == "FE", S2AvgMA, drop = TRUE)
S2AvgBR.PD <- subset(S2Wilc,  Scen == "PD", S2AvgBR, drop = TRUE)
S2AvgBR.FE <- subset(S2Wilc,  Scen == "FE", S2AvgBR, drop = TRUE)
S2AvgBS.PD <- subset(S2Wilc,  Scen == "PD", S2AvgBS, drop = TRUE)
S2AvgBS.FE <- subset(S2Wilc,  Scen == "FE", S2AvgBS, drop = TRUE)
S3AvgPI.PD <- subset(S3Wilc,  Scen == "PD", S3AvgPI, drop = TRUE)
S3AvgPI.FE <- subset(S3Wilc,  Scen == "FE", S3AvgPI, drop = TRUE)
S3AvgTF.PD <- subset(S3Wilc,  Scen == "PD", S3AvgTF, drop = TRUE)
S3AvgTF.FE <- subset(S3Wilc,  Scen == "FE", S3AvgTF, drop = TRUE)
S3AvgMA.PD <- subset(S3Wilc,  Scen == "PD", S3AvgMA, drop = TRUE)
S3AvgMA.FE <- subset(S3Wilc,  Scen == "FE", S3AvgMA, drop = TRUE)
S3AvgBR.PD <- subset(S3Wilc,  Scen == "PD", S3AvgBR, drop = TRUE)
S3AvgBR.FE <- subset(S3Wilc,  Scen == "FE", S3AvgBR, drop = TRUE)
S3AvgBS.PD <- subset(S3Wilc,  Scen == "PD", S3AvgBS, drop = TRUE)
S3AvgBS.FE <- subset(S3Wilc,  Scen == "FE", S3AvgBS, drop = TRUE)
S4AvgPI.PD <- subset(S4Wilc,  Scen == "PD", S4AvgPI, drop = TRUE)
S4AvgPI.FE <- subset(S4Wilc,  Scen == "FE", S4AvgPI, drop = TRUE)
S4AvgTF.PD <- subset(S4Wilc,  Scen == "PD", S4AvgTF, drop = TRUE)
S4AvgTF.FE <- subset(S4Wilc,  Scen == "FE", S4AvgTF, drop = TRUE)
S4AvgMA.PD <- subset(S4Wilc,  Scen == "PD", S4AvgMA, drop = TRUE)
S4AvgMA.FE <- subset(S4Wilc,  Scen == "FE", S4AvgMA, drop = TRUE)
S4AvgBR.PD <- subset(S4Wilc,  Scen == "PD", S4AvgBR, drop = TRUE)
S4AvgBR.FE <- subset(S4Wilc,  Scen == "FE", S4AvgBR, drop = TRUE)
S4AvgBS.PD <- subset(S4Wilc,  Scen == "PD", S4AvgBS, drop = TRUE)
S4AvgBS.FE <- subset(S4Wilc,  Scen == "FE", S4AvgBS, drop = TRUE)
S2AvgPI.F.res <- wilcox.test(S2AvgPI.PD, S2AvgPI.FE, paired = FALSE)
S2AvgTF.F.res <- wilcox.test(S2AvgTF.PD, S2AvgTF.FE, paired = FALSE)
S2AvgMA.F.res <- wilcox.test(S2AvgMA.PD, S2AvgMA.FE, paired = FALSE)
S2AvgBR.F.res <- wilcox.test(S2AvgBR.PD, S2AvgBR.FE, paired = FALSE)
S2AvgBS.F.res <- wilcox.test(S2AvgBS.PD, S2AvgBS.FE, paired = FALSE)
S2AvgPI.F.res$p.value
S2AvgTF.F.res$p.value
S2AvgMA.F.res$p.value
S2AvgBR.F.res$p.value
S2AvgBS.F.res$p.value
S3AvgPI.F.res <- wilcox.test(S3AvgPI.PD, S3AvgPI.FE, paired = FALSE)
S3AvgTF.F.res <- wilcox.test(S3AvgTF.PD, S3AvgTF.FE, paired = FALSE)
S3AvgMA.F.res <- wilcox.test(S3AvgMA.PD, S3AvgMA.FE, paired = FALSE)
S3AvgBR.F.res <- wilcox.test(S3AvgBR.PD, S3AvgBR.FE, paired = FALSE)
S3AvgBS.F.res <- wilcox.test(S3AvgBS.PD, S3AvgBS.FE, paired = FALSE)
S3AvgPI.F.res$p.value
S3AvgTF.F.res$p.value
S3AvgMA.F.res$p.value
S3AvgBR.F.res$p.value
S3AvgBS.F.res$p.value
S4AvgPI.F.res <- wilcox.test(S4AvgPI.PD, S4AvgPI.FE, paired = FALSE)
S4AvgTF.F.res <- wilcox.test(S4AvgTF.PD, S4AvgTF.FE, paired = FALSE)
S4AvgMA.F.res <- wilcox.test(S4AvgMA.PD, S4AvgMA.FE, paired = FALSE)
S4AvgBR.F.res <- wilcox.test(S4AvgBR.PD, S4AvgBR.FE, paired = FALSE)
S4AvgBS.F.res <- wilcox.test(S4AvgBS.PD, S4AvgBS.FE, paired = FALSE)
S4AvgPI.F.res$p.value
S4AvgTF.F.res$p.value
S4AvgMA.F.res$p.value
S4AvgBR.F.res$p.value
S4AvgBS.F.res$p.value
save.image("C:\\R\\ANOVA\\.RData")
head(S1Wilc)
levels(S1Wilc$Scen)
fix(S1Wilc)
# Kruskal-Wallis test
# set up factor for Kruskal-Wallis test
# # https://www.youtube.com/watch?v=JmUnlDdMd9U
Scen <- S1Wilc$Scen
Scen = factor(Scen)
head(Scen)
fix(S4AvgPI)
S1AvgPI <- S1Wilc$S1AvgPI
S1AvgTF <- S1Wilc$S1AvgTF
S1AvgMA <- S1Wilc$S1AvgMA
S1AvgBR <- S1Wilc$S1AvgBR
S1AvgBS <- S1Wilc$S1AvgBS
S2AvgPI <- S2Wilc$S2AvgPI
S2AvgTF <- S2Wilc$S2AvgTF
S2AvgMA <- S2Wilc$S2AvgMA
S2AvgBR <- S2Wilc$S2AvgBR
S2AvgBS <- S2Wilc$S2AvgBS
S3AvgPI <- S3Wilc$S3AvgPI
S3AvgTF <- S3Wilc$S3AvgTF
S3AvgMA <- S3Wilc$S3AvgMA
S3AvgBR <- S3Wilc$S3AvgBR
S3AvgBS <- S3Wilc$S3AvgBS
S4AvgPI <- S4Wilc$S4AvgPI
S4AvgTF <- S4Wilc$S4AvgTF
S4AvgMA <- S4Wilc$S4AvgMA
S4AvgBR <- S4Wilc$S4AvgBR
S4AvgBS <- S4Wilc$S4AvgBS
kruskal.test(S1AvgPI ~ Scen)
kruskal.test(S1AvgTF ~ Scen)
kruskal.test(S1AvgMA ~ Scen)
kruskal.test(S1AvgBR ~ Scen)
kruskal.test(S1AvgBS ~ Scen)
kruskal.test(S1AvgPI ~ Scen)
kruskal.test(S1AvgTF ~ Scen)
kruskal.test(S1AvgMA ~ Scen)
kruskal.test(S1AvgBR ~ Scen)
kruskal.test(S1AvgBS ~ Scen)
kruskal.test(S1AvgPI ~ Scen)
kruskal.test(S1AvgTF ~ Scen)
kruskal.test(S1AvgMA ~ Scen)
kruskal.test(S1AvgBR ~ Scen)
kruskal.test(S1AvgBS ~ Scen)
kruskal.test(S1AvgPI ~ Scen)
kruskal.test(S1AvgTF ~ Scen)
kruskal.test(S1AvgMA ~ Scen)
kruskal.test(S1AvgBR ~ Scen)
kruskal.test(S1AvgBS ~ Scen)
kruskal.test(S2AvgPI ~ Scen)
kruskal.test(S2AvgTF ~ Scen)
kruskal.test(S2AvgMA ~ Scen)
kruskal.test(S2AvgBR ~ Scen)
kruskal.test(S2AvgBS ~ Scen)
kruskal.test(S3AvgPI ~ Scen)
kruskal.test(S3AvgTF ~ Scen)
kruskal.test(S3AvgMA ~ Scen)
kruskal.test(S3AvgBR ~ Scen)
kruskal.test(S3AvgBS ~ Scen)
kruskal.test(S4AvgPI ~ Scen)
kruskal.test(S4AvgTF ~ Scen)
kruskal.test(S4AvgMA ~ Scen)
kruskal.test(S4AvgBR ~ Scen)
kruskal.test(S4AvgBS ~ Scen)
SeasSiteTreat <- read.csv(SeasSiteTreatBins.csv, Header = TRUE)
SeasSiteTreat <- read.csv(SeasSiteTreatBins.csv, header = true)
SeasSiteTreat <- read.csv(SeasSiteTreatBins.csv, header = true)
SeasSiteTreat <- read.csv("SeasSiteTreatBins.csv", header = true)
SeasSiteTreat <- read.csv("SeasSiteTreatBins.csv", header = TRUE)
ScenBin <- SeasSiteTreat$Scen
ScenBin = factor(ScenBin)
SeasTreatBins01.csv <- read.csv("Seas(Site)TreatBins01.csv", header = TRUE)
rm(SeasTreatBins01.csv)
SeasTreat01 <- read.csv("Seas(Site)TreatBins01.csv", header = TRUE)
ScenBin01 <- SeasTreat01$Scen
fix(SeasTreat01)
AvgSiteArea01 <- SeasTreat01$AvgSiteArea
rm(AvgSiteArea01)
ScenTreat01 <- SeasTreat01$AvgSiteArea
kruskal.test(ScenTreat01 ~ ScenBin01)
fix(SeasSiteTreat)
fix(ScenBin)
fix(SeasSiteTreat)
ScenBin <- SeasSiteTreat$Scen
ScenBin = factor(ScenBin)
len(ScenBin)
dim(ScenBin)
ScenBin
AvgPISite <- SeasSiteTreat$AvgPI
AvgMASite <- SeasSiteTreat$AvgMA
AvgTFSite <- SeasSiteTreat$AvgTF
AvgBRSite <- SeasSiteTreat$AvgBR
AvgBSSite <- SeasSiteTreat$AvgBS
kruskal.test(AvgPISite ~ ScenBin)
kruskal.test(AvgTFSite ~ ScenBin)
kruskal.test(AvgMASite ~ ScenBin)
kruskal.test(AvgBRSite ~ ScenBin)
kruskal.test(AvgBSSite ~ ScenBin)
hist(ScenTreat01)
help(hist)
hist(ScenTreat01, breaks = 20)
hist(ScenTreat01, breaks = 26)
fix(ScenTreat01)
library("dplyr")
library("ggpubr")
libraries()
library()
fix(AvgPISite)
qqPlot(AvgPISite)
library("car")
qqPlot(AvgPISite)
shapiro.test(AvgPISite)
head(ScenTreat01)
head(ScenTreat02)
shapiro.test(SeasSiteTreat$AvgPI)
shapiro.test(SeasSiteTreat$AvgMA)
shapiro.test(SeasSiteTreat$AvgTF)
shapiro.test(SeasSiteTreat$AvgBR)
shapiro.test(SeasSiteTreat$AvgBS)
qqPlot(SeasSiteTreat$AvgPI)
qqPlot(SeasSiteTreat$AvgMA)
qqPlot(SeasSiteTreat$AvgTF)
qqPlot(SeasSiteTreat$AvgBR)
qqPlot(SeasSiteTreat$AvgBS)
# 1. Open jpeg file
jpeg("qqplot.allsites.jpg", width = 700, height = 1760)
# 2. Create the plot
par(mfrow=c(3,2))
qqPlot(SeasSiteTreat$AvgPI)
qqPlot(SeasSiteTreat$AvgMA)
qqPlot(SeasSiteTreat$AvgTF)
qqPlot(SeasSiteTreat$AvgBR)
qqPlot(SeasSiteTreat$AvgBS)
# 3. Close the file
dev.off()
# 1. Open jpeg file
jpeg("qqplot.allsites.jpg", width = 700, height = 2160)
# 2. Create the plot
par(mfrow=c(3,2))
qqPlot(SeasSiteTreat$AvgPI)
qqPlot(SeasSiteTreat$AvgMA)
qqPlot(SeasSiteTreat$AvgTF)
qqPlot(SeasSiteTreat$AvgBR)
qqPlot(SeasSiteTreat$AvgBS)
# 3. Close the file
dev.off()
# 1. Open jpeg file
jpeg("qqplot.allsites.jpg", width = 700, height = 1460)
# 2. Create the plot
par(mfrow=c(3,2))
qqPlot(SeasSiteTreat$AvgPI)
qqPlot(SeasSiteTreat$AvgMA)
qqPlot(SeasSiteTreat$AvgTF)
qqPlot(SeasSiteTreat$AvgBR)
qqPlot(SeasSiteTreat$AvgBS)
# 3. Close the file
dev.off()
# 1. Open jpeg file
jpeg("qqplot.allsites.jpg", width = 700, height = 1050)
# 2. Create the plot
par(mfrow=c(3,2))
qqPlot(SeasSiteTreat$AvgPI)
qqPlot(SeasSiteTreat$AvgMA)
qqPlot(SeasSiteTreat$AvgTF)
qqPlot(SeasSiteTreat$AvgBR)
qqPlot(SeasSiteTreat$AvgBS)
# 3. Close the file
dev.off()
test <- c(SeasSiteTreat$AvgPI,SeasSiteTreat$AvgMA,SeasSiteTreat$AvgTF,SeasSiteTreat$AvgBR,SeasSiteTreat$AvgBS)
size(test)
dim(test)
test
qqPlot(test)
shapiro.test(test)
fix(SeasSiteTreat)
fix(SeasTreat01)
SeasBin <- SeasSiteTreat$Seas
SeasBin
fix(SeasBin)
SeasBin <- SeasTreat01$Seas
fix(SeasBin)
easBin = factor(SeasBin)
remove(easBin)
SeasBin = factor(SeasBin)
kruskal.test(SeasBin ~ SeasBin)
fix(SeasBin)
kruskal.test(SeasTreat01 ~ SeasBin)
fix(SeasTreat01)
kruskal.test(SeasTreat01$AvgSiteArea ~ SeasBin)
kruskal.test(SeasTreat01$AvgSiteArea ~ SeasBin, p.adjust.method = "bonferroni")
dunn_test(SeasTreat01$AvgSiteArea ~ SeasBin, p.adjust.method = "bonferroni")
library(tidyverse)
utils:::menuInstallPkgs()
pairwise.wilcox.test(SeasTreat01$AvgSiteArea ~ SeasBin, p.adjust.method = "BH")
head(SeasTreat01$AvgSiteArea)
head(SeasBin)
SeasBin
SeasTreat01$AvgSiteArea
pairwise.wilcox.test(SeasTreat01$AvgSiteArea ~ SeasBin)
SeasBin = factor(SeasBin)
pairwise.wilcox.test(SeasTreat01$AvgSiteArea ~ SeasBin)
pairwise.wilcox.test(SeasTreat01$AvgSiteArea ~ SeasBin, p.adjust.method = "BH")
install.packages("dplyr")
library(tidyverse)
pairwise.wilcox.test(SeasTreat01$AvgSiteArea ~ SeasBin, p.adjust.method = "BH")
library("ggpubr")
pairwise.wilcox.test(SeasTreat01$AvgSiteArea ~ SeasBin, p.adjust.method = "BH")
wilcox_test(SeasTreat01$AvgSiteArea ~ SeasBin, p.adjust.method = "bonferroni")
SeasTreat02 <- read.csv("Seas(Site)TreatBins02.csv", header = TRUE)
SeasBin02 <- SeasTreat02$Seas
SeasTreat02Avg <- SeasTreat02$AvgSiteArea
SeasTreat02Avg
SeasBin02
fix(SeasBin02)
# season-wise significance of difference between scenarios
SeasTreatS1 <- read.csv("Seas(Site)TreatBinsS1.csv", header = TRUE)
SeasTreatS2 <- read.csv("Seas(Site)TreatBinsS2.csv", header = TRUE)
SeasTreatS3 <- read.csv("Seas(Site)TreatBinsS3.csv", header = TRUE)
SeasTreatS4 <- read.csv("Seas(Site)TreatBinsS4.csv", header = TRUE)
TreatBin <- SeasTreatS1$Scen
TreatBin = factor(TreatBin)
SeasTreatS1 <- read.csv("Seas(Site)TreatBinsS1.csv", header = TRUE)
SeasTreatS2 <- read.csv("Seas(Site)TreatBinsS2.csv", header = TRUE)
SeasTreatS3 <- read.csv("Seas(Site)TreatBinsS3.csv", header = TRUE)
SeasTreatS4 <- read.csv("Seas(Site)TreatBinsS4.csv", header = TRUE)
TreatBin <- SeasTreatS1$Scen
TreatBin = factor(TreatBin)
kruskal.test(SeasTreatS1 ~ TreatBin)
kruskal.test(SeasTreatS2 ~ TreatBin)
kruskal.test(SeasTreatS3 ~ TreatBin)
kruskal.test(SeasTreatS4 ~ TreatBin)
kruskal.test(SeasTreatS1$AvgSiteArea ~ TreatBin)
kruskal.test(SeasTreatS2$AvgSiteArea ~ TreatBin)
kruskal.test(SeasTreatS3$AvgSiteArea ~ TreatBin)
kruskal.test(SeasTreatS4$AvgSiteArea ~ TreatBin)
kruskal.test(S1AvgPI ~ Scen)
S1AvgPI
kruskal.test(S2AvgPI ~ Scen)
kruskal.test(S3AvgPI ~ Scen)
kruskal.test(S2AvgBS ~ Scen)
kruskal.test(S1AvgBS ~ Scen)
t.test(S1AvgPI ~ Scen)
t.test(S2AvgPI ~ Scen)
t.test(S1AvgBS ~ Scen)
t.test(S1AvgPI ~ Scen)
t.test(S1AvgTF ~ Scen)
t.test(S1AvgMA ~ Scen)
t.test(S1AvgBR ~ Scen)
t.test(S1AvgBS ~ Scen)
t.test(S2AvgPI ~ Scen)
t.test(S2AvgTF ~ Scen)
t.test(S2AvgMA ~ Scen)
t.test(S2AvgBR ~ Scen)
t.test(S2AvgBS ~ Scen)
t.test(S3AvgPI ~ Scen)
t.test(S3AvgTF ~ Scen)
t.test(S3AvgMA ~ Scen)
t.test(S3AvgBR ~ Scen)
t.test(S3AvgBS ~ Scen)
t.test(S4AvgPI ~ Scen)
t.test(S4AvgTF ~ Scen)
t.test(S4AvgMA ~ Scen)
t.test(S4AvgBR ~ Scen)
t.test(S4AvgBS ~ Scen)
qqPlot(AvgPISite)
qqPlot(S1AvgPI)
qqPlot(S1AvgBS)
head(S4AvgBS)
head(Scen)
shapiro.test(SeasSiteTreat$AvgPI)
shapiro.test(SeasSiteTreat$AvgMA)
shapiro.test(SeasSiteTreat$AvgBR)
shapiro.test(SeasSiteTreat$AvgTF)
t.test(SeasSiteTreat$AvgPI)
ggqqplot(S1$S1AvgPI.PD)
wilcox.test(SeasSiteTreat$AvgPI)
save.image("C:\\R\\ANOVA\\.RData")
q()
t.test(S1AvgTF ~ Scen)
t.test(S2AvgTF ~ Scen)
t.test(S3AvgTF ~ Scen)
t.test(S4AvgTF ~ Scen)
t.test(S2AvgPI ~ Scen)
t.test(S2AvgPI ~ Scen)$p
t.test(S2AvgPI ~ Scen)$p-value
t.test(S2AvgPI ~ Scen)$p
help(t.test)
t.test(S2AvgPI ~ Scen)$p.value
t.test(S2AvgPI ~ Scen)$conf.int
t.test(S2AvgPI ~ Scen)$method
t.test(S2AvgPI ~ Scen)$parameter
t.test(S2AvgPI ~ Scen)$statistic
c <- a&b
a="a"
b="b"
c <- a&b
paste(1:12)
help(t.test)
paste(1:12)
S1AvgBSRes <- c(t.test(S1AvgBS ~ Scen)$p.value, t.test(S1AvgBS ~ Scen)$conf.level, t.test(S1AvgBS ~ Scen)$mu)
S1AvgPIRes <- c(t.test(S1AvgPI ~ Scen)$p.value, t.test(S1AvgPI ~ Scen)$conf.level, t.test(S1AvgPI ~ Scen)$mu)
S1AvgTFRes <- c(t.test(S1AvgTF ~ Scen)$p.value, t.test(S1AvgTF ~ Scen)$conf.level, t.test(S1AvgTF ~ Scen)$mu)
S1AvgMARes <- c(t.test(S1AvgMA ~ Scen)$p.value, t.test(S1AvgMA ~ Scen)$conf.level, t.test(S1AvgMA ~ Scen)$mu)
S1AvgBRRes <- c(t.test(S1AvgBR ~ Scen)$p.value, t.test(S1AvgBR ~ Scen)$conf.level, t.test(S1AvgBR ~ Scen)$mu)
S1AvgBSRes <- c(t.test(S1AvgBS ~ Scen)$p.value, t.test(S1AvgBS ~ Scen)$conf.level, t.test(S1AvgBS ~ Scen)$mu)
S2AvgPIRes <- c(t.test(S2AvgPI ~ Scen)$p.value, t.test(S2AvgPI ~ Scen)$conf.level, t.test(S2AvgPI ~ Scen)$mu)
S2AvgTFRes <- c(t.test(S2AvgTF ~ Scen)$p.value, t.test(S2AvgTF ~ Scen)$conf.level, t.test(S2AvgTF ~ Scen)$mu)
S2AvgMARes <- c(t.test(S2AvgMA ~ Scen)$p.value, t.test(S2AvgMA ~ Scen)$conf.level, t.test(S2AvgMA ~ Scen)$mu)
S2AvgBRRes <- c(t.test(S2AvgBR ~ Scen)$p.value, t.test(S2AvgBR ~ Scen)$conf.level, t.test(S2AvgBR ~ Scen)$mu)
S2AvgBSRes <- c(t.test(S2AvgBS ~ Scen)$p.value, t.test(S2AvgBS ~ Scen)$conf.level, t.test(S2AvgBS ~ Scen)$mu)
S3AvgPIRes <- c(t.test(S3AvgPI ~ Scen)$p.value, t.test(S3AvgPI ~ Scen)$conf.level, t.test(S3AvgPI ~ Scen)$mu)
S3AvgTFRes <- c(t.test(S3AvgTF ~ Scen)$p.value, t.test(S3AvgTF ~ Scen)$conf.level, t.test(S3AvgTF ~ Scen)$mu)
S3AvgMARes <- c(t.test(S3AvgMA ~ Scen)$p.value, t.test(S3AvgMA ~ Scen)$conf.level, t.test(S3AvgMA ~ Scen)$mu)
S3AvgBRRes <- c(t.test(S3AvgBR ~ Scen)$p.value, t.test(S3AvgBR ~ Scen)$conf.level, t.test(S3AvgBR ~ Scen)$mu)
S3AvgBSRes <- c(t.test(S3AvgBS ~ Scen)$p.value, t.test(S3AvgBS ~ Scen)$conf.level, t.test(S3AvgBS ~ Scen)$mu)
S4AvgPIRes <- c(t.test(S4AvgPI ~ Scen)$p.value, t.test(S4AvgPI ~ Scen)$conf.level, t.test(S4AvgPI ~ Scen)$mu)
S4AvgTFRes <- c(t.test(S4AvgTF ~ Scen)$p.value, t.test(S4AvgTF ~ Scen)$conf.level, t.test(S4AvgTF ~ Scen)$mu)
S4AvgMARes <- c(t.test(S4AvgMA ~ Scen)$p.value, t.test(S4AvgMA ~ Scen)$conf.level, t.test(S4AvgMA ~ Scen)$mu)
S4AvgBRRes <- c(t.test(S4AvgBR ~ Scen)$p.value, t.test(S4AvgBR ~ Scen)$conf.level, t.test(S4AvgBR ~ Scen)$mu)
S4AvgBSRes <- c(t.test(S4AvgBS ~ Scen)$p.value, t.test(S4AvgBS ~ Scen)$conf.level, t.test(S4AvgBS ~ Scen)$mu)
4Seas5SitesTtest <- c(S1AvgBSRes,S1AvgPIRes,S1AvgTFRes,S1AvgMARes,S1AvgBRRes,S1AvgBSRes,S2AvgPIRes,S2AvgTFRes,S2AvgMARes,S2AvgBRRes,S2AvgBSRes,S3AvgPIRes,S3AvgTFRes,S3AvgMARes,S3AvgBRRes,S3AvgBSRes,S4AvgPIRes,S4AvgTFRes,S4AvgMARes,S4AvgBRRes,S4AvgBSRes)
S1AvgBSRes
t.test(S1AvgBS ~ Scen)$p.value
t.test(S1AvgBS ~ Scen)$conf.level
t.test(S1AvgBS ~ Scen)$mu
t.test(S1AvgBS ~ Scen)
S1AvgBSRes <- c(t.test(S1AvgBS ~ Scen)$p.value, t.test(S1AvgBS ~ Scen)$conf.level, t.test(S1AvgBS ~ Scen)$mu)
objects()
S1AvgBS.res
S1AvgBR.res
S1AvgPI.res
S1AvgTF.res
install.packages("rmarkdown")
library(rmarkdown)
install(pacman)
install.packages("pacman")
install.packages("pacman")
rmarkdown()
test <- kruskal.test(S1Avg.GAR ~ Scen)
attach(S1)  # overcomes the problem with " 'x' must be numeric  "
attach(S2)
attach(S3)
attach(S4)
test <- kruskal.test(S1Avg.GAR ~ Scen)
library()
View(S1)
objects()
detach(S1)  # overcomes the problem with " 'x' must be numeric  "
detach(S2)
detach(S3)
detach(S4)
View(S1AvgBR.F.res)
View(S1)
remove(testdata)
remove(test,test.res,test1,test2,test4,testdata,testdata1,ToothGrowth)
View(S1)
remove(S1.PI,S1.TF,S1.MA,S1.PR,S1.PS,S2.PI,S2.TF,S2.MA,S2.PR,S2.PS,S3.PI,S3.TF,S3.MA,S3.PR,S3.PS,S4.PI,S4.TF,S4.MA,S4.PR,S4.PS,S1,S2,S3,S4)
remove(ScenBin,ScenBin01,ScenTreat01,SeasBin,SeasBin02,SeasSiteTreat,SeasTreat01,SeasTreat02,SeasTreat02Avg,SeasTreatS1,SeasTreatS2,SeasTreatS3,SeasTreatS4)
remove(S1AvgPIRes,S1AvgTFRes,S1AvgMARes,S1AvgBRRes,S1AvgBSRes,S1AvgPI,S1AvgTF,S1AvgMA,S1AvgBR,S1AvgBS,S1AvgPI.F.res,S1AvgTF.F.res,S1AvgMA.F.res,S1AvgBR.F.res,S1AvgBS.F.res,S1AvgPI.FE,S1AvgTF.FE,S1AvgMA.FE,S1AvgBR.FE,S1AvgBS.FE,S1AvgPI.PD,S1AvgTF.PD,S1AvgMA.PD,S1AvgBR.PD,S1AvgBS.PD,S2AvgPIRes,S2AvgTFRes,S2AvgMARes,S2AvgBRRes,S2AvgBSRes,S2AvgPI,S2AvgTF,S2AvgMA,S2AvgBR,S2AvgBS,S2AvgPI.F.res,S2AvgTF.F.res,S2AvgMA.F.res,S2AvgBR.F.res,S2AvgBS.F.res,S2AvgPI.FE,S2AvgTF.FE,S2AvgMA.FE,S2AvgBR.FE,S2AvgBS.FE,S2AvgPI.PD,S2AvgTF.PD,S2AvgMA.PD,S2AvgBR.PD,S2AvgBS.PD,S3AvgPIRes,S3AvgTFRes,S3AvgMARes,S3AvgBRRes,S3AvgBSRes,S3AvgPI,S3AvgTF,S3AvgMA,S3AvgBR,S3AvgBS,S3AvgPI.F.res,S3AvgTF.F.res,S3AvgMA.F.res,S3AvgBR.F.res,S3AvgBS.F.res,S3AvgPI.FE,S3AvgTF.FE,S3AvgMA.FE,S3AvgBR.FE,S3AvgBS.FE,S3AvgPI.PD,S3AvgTF.PD,S3AvgMA.PD,S3AvgBR.PD,S3AvgBS.PD,S4AvgPIRes,S4AvgTFRes,S4AvgMARes,S4AvgBRRes,S4AvgBSRes,S4AvgPI,S4AvgTF,S4AvgMA,S4AvgBR,S4AvgBS,S4AvgPI.F.res,S4AvgTF.F.res,S4AvgMA.F.res,S4AvgBR.F.res,S4AvgBS.F.res,S4AvgPI.FE,S4AvgTF.FE,S4AvgMA.FE,S4AvgBR.FE,S4AvgBS.FE,S4AvgPI.PD,S4AvgTF.PD,S4AvgMA.PD,S4AvgBR.PD,S4AvgBS.PD)
objects()
View(pd)
View(packtest1)
View(packtest0)
View(my_data)
View(pd)
View(S1Avg.res.out)
View(S1AvgBR.res)
View(S1AvgBR.res)
remove(a,AvgBRSite,AvgBSSite,AvgMASite,AvgPISite,AvgTFSite,b,my_data,packtest0,packtest1,pd,S1Avg.F.res.p,S1Avg.F.res.p.lab,S1Avg.res.out,S1Avg.res.p,S1Avg.res.p.lab,S1AvgBR.res,S1AvgBS.res,S1AvgMA.res,S1AvgPI.res,S1AvgTF.res,S1Avg.F.res.p,S1Avg.F.res.p.lab,S1Avg.res.out,S1Avg.res.p,S1Avg.res.p.lab,S1AvgBR.res,S1AvgBS.res,S1AvgMA.res,S1AvgPI.res,S1AvgTF.res,S1Wilc,S2Avg.F.res.p.lab,S2Wilc,S3Avg.F.res.p.lab,S3Wilc,s4.5f,s4.5p,S4Avg.F.res.p.lab,TreatBin)
objects()
View(S4Wilc)
View(S4Wilc)
remove(S4Wilc)
save.image("C:/github.c/Periphyton/SigTestMeans code.RData")
savehistory()
S1 <- data.frame(read.csv("./data/PioneerS1.csv", header = TRUE))
S2 <- data.frame(read.csv("./data/PioneerS2.csv", header = TRUE))
S3 <- data.frame(read.csv("./data/PioneerS3.csv", header = TRUE))
S4 <- data.frame(read.csv("./data/PioneerS4.csv", header = TRUE))
setwd("C:\github.c\Periphyton")  # ***REVISIT ONCE UPLOADED TO GIT-HUB
require("ggpubr")
library(ggpubr)
setwd("C:\github.c\Periphyton")  # ***REVISIT ONCE UPLOADED TO GIT-HUB
setwd("C:\github.c\Periphyton")
setwd("C:/github.c/Periphyton")
save.image("C:/github.c/Periphyton/SigTestMeans code.RData")
savehistory("C:/github.c/Periphyton/SigTestMeans code.RHistory")
save.image("C:/github.c/Periphyton/SigTestMeans code.Pioneer.RData")
savehistory("C:/github.c/Periphyton/SigTestMeans code.Pioneer.RHistory")
load("C:/github.c/Periphyton/SigTestMeans code.Pioneer.RData")
savehistory("C:/github.c/Periphyton/SigTestMeans code.Pioneer.Rhistory")
load("C:/github.c/Periphyton/SigTestMeans code.Pioneer.Rhistory")
save.image("C:/github.c/Periphyton/Periphyton summary stats & figures.Pioneer.RData")
savehistory("C:/github.c/Periphyton/Periphyton summary stats & figures.Pioneer.Rhistory")
